
// Mason Yin's sphere test with three.js
let  polyCounter =0;

const clusters = [
[[-0.5488861941185754,0.5699670800126245,-0.6114421261312539],[-0.513171273974459,0.6264651806591773,-0.5866827260019636],[-0.46494876906389443,0.6922319147359297,-0.5519398684340515],[-0.4640850245410788,0.741497435134107,-0.48456851289187913],[-0.4631946729771452,0.784147572052285,-0.4129930752084133],[-0.5534493669120674,0.7827277151325623,-0.2846596603454561],[-0.5910589986654432,0.7776626849903052,-0.21421953335369118],[-0.5934309367901739,0.7772377495868338,-0.20914397882208105],[-0.5969964457212354,0.7767315141367298,-0.2007072463641391],[-0.6020303118455957,0.7760450284589057,-0.1879191779018609],[-0.6178742973653855,0.7629844033133745,-0.1899635569149127],[-0.7192640700322387,0.5726392768995129,-0.3933744477119248],[-0.7192640700322387,0.5726392768995129,-0.3933744477119248],[-0.6178742973653855,0.7629844033133745,-0.1899635569149127],[-0.6196362217764203,0.7615264544573104,-0.1900747532533473],[-0.87337258477563,0.4596504100134267,-0.1610646725288446],[-0.8870769187927439,0.4357672112048016,-0.15232031310354377],[-0.8092073268024422,0.586590520927519,-0.03309173623772929],[-0.780406558038346,0.6250069965585588,0.01821698173659156],[-0.7801829293711755,0.6250853118023778,0.024144351031568513],[-0.7811863799734303,0.6237951518768138,0.02504891692249757],[-0.7861037492580656,0.6172191943474158,0.032884061968367996],[-0.7861037492580656,0.6172191943474158,0.032884061968367996],[-0.7811863799734303,0.6237951518768138,0.02504891692249757],[-0.7801829293711755,0.6250853118023778,0.024144351031568513],[-0.780406558038346,0.6250069965585588,0.01821698173659156],[-0.8092073268024422,0.586590520927519,-0.03309173623772929],[-0.7807122067194094,0.6248893405672772,0.0013275257826549528],[-0.7807122067194094,0.6248893405672772,0.0013275257826549528],[-0.8092073268024422,0.586590520927519,-0.03309173623772929],[-0.8870769187927439,0.4357672112048016,-0.15232031310354377],[-0.87337258477563,0.4596504100134267,-0.1610646725288446],[-0.6196362217764203,0.7615264544573104,-0.1900747532533473],[-0.6178742973653855,0.7629844033133745,-0.1899635569149127],[-0.6020303118455957,0.7760450284589057,-0.1879191779018609],[-0.5935193670001582,0.7887369662496965,-0.16008984685780925],[-0.5651356786260323,0.8206207821057594,-0.08487164850541008],[-0.5589465403977872,0.8264948111049133,-0.06697083091912819],[-0.551751585298551,0.8327813852508532,-0.045225573519924886],[-0.5443117497315683,0.8385997674529668,-0.02179791577166931],[-0.4239686051424539,0.8344774266235511,0.35199154295138674],[-0.44376517998941084,0.782328220669681,0.43707553142766614],[-0.6716173364595093,0.725303061815601,0.15121382836218666],[-0.7499983745372912,0.6602028426970187,0.040430739372374964],[-0.7499983745372912,0.6602028426970187,0.040430739372374964],[-0.6716173364595093,0.725303061815601,0.15121382836218666],[-0.44376517998941084,0.782328220669681,0.43707553142766614],[-0.44707151477496376,0.765879345540823,0.46212107585651196],[-0.6108094038775774,0.7466012823408212,0.26362548689715115],[-0.6108094038775774,0.7466012823408212,0.26362548689715115],[-0.44707151477496376,0.765879345540823,0.46212107585651196],[-0.44709503863930417,0.7656964602785475,0.46240129448458706],[-0.5012309305757898,0.7128898716346276,0.4904646624935297],[-0.6855507424294153,0.5610130863020135,0.46398760387791294],[-0.7133716476888486,0.5329730604659578,0.45501715252421854],[-0.8239246945380997,0.4216542667685985,0.3786235294407027],[-0.8267974276442305,0.4176360912240119,0.37681044166531835],[-0.8647373196686257,0.35495388487374924,0.3552986174830329],[-0.9116032362968038,0.24127553829750223,0.3328147445538498],[-0.9099073653101877,0.2286694081085164,0.3460908671860233],[-0.7785012201113751,0.012487057629948938,0.627518863204005],[-0.7742498154193406,-0.07135914606697212,0.6288442538464589],[-0.7718507055023427,-0.08631581979400513,0.6299175086222201],[-0.77135510064305,-0.0889369218980396,0.6301599262371832],[-0.7671920299739251,-0.10764291228429704,0.63232064064005],[-0.7648716578598804,-0.11658937580657872,0.6335442087587183],[-0.7686479138344586,-0.12878295261742473,0.6265742858377392],[-0.7728989865581098,-0.3564285610925696,0.5249627009749619],[-0.7537606328868731,-0.4560558042115238,0.4731363564079184],[-0.7403346914347568,-0.49428720757007294,0.4556146409969538],[-0.7426500095565252,-0.5006029187931951,0.4448232019594155],[-0.6845528354694952,-0.6342468229117503,0.3593304649998736],[-0.6626773858408754,-0.6675863616737744,0.3393922980892111],[-0.5770278256047449,-0.6989568221799928,0.4224905314985249],[-0.4957752651744428,-0.713885043658364,0.49454527687776645],[-0.4853098478358296,-0.7109757079749196,0.5089085323151162],[-0.48136448047833436,-0.7141868525861517,0.5081588103407335],[-0.4802271398966904,-0.7145009943314997,0.5087929079752812],[-0.4766671194417911,-0.7147546140818956,0.5117756333508912],[-0.4766671194417911,-0.7147546140818956,0.5117756333508912],[-0.4802271398966904,-0.7145009943314997,0.5087929079752812],[-0.48136448047833436,-0.7141868525861517,0.5081588103407335],[-0.4853098478358296,-0.7109757079749196,0.5089085323151162],[-0.4957752651744428,-0.713885043658364,0.49454527687776645],[-0.5770278256047449,-0.6989568221799928,0.4224905314985249],[-0.6626773858408754,-0.6675863616737744,0.3393922980892111],[-0.6845528354694952,-0.6342468229117503,0.3593304649998736],[-0.7426500095565252,-0.5006029187931951,0.4448232019594155],[-0.7403346914347568,-0.49428720757007294,0.4556146409969538],[-0.5874222370982704,-0.5409251698875208,0.6019427513847312],[-0.5685149564376262,-0.5416910132156757,0.6191620066736159],[-0.5527759852432547,-0.5414123857293458,0.6334913880371281],[-0.5254724533213199,-0.538028734381301,0.6590931510648012],[-0.45874197317687776,-0.521082522481713,0.7197421807910662],[-0.44469847579185945,-0.5294032513231679,0.7224786938843634],[-0.43414897242985534,-0.5454388478668308,0.7169456973689187],[-0.3649617513675768,-0.6608990514930907,0.6557555670935964],[-0.35485956950245257,-0.6720833985350096,0.6499066020176788],[-0.3454401653439274,-0.6813244625269301,0.6453433728872947],[-0.3451123420991301,-0.6816306086871995,0.6451954623457693],[-0.33042841790523425,-0.6945040705386653,0.6391253059032077],[-0.30874375542428734,-0.7112880736825474,0.6314638308909538],[-0.1648620503624539,-0.8063493201968549,0.5679976040163881],[-0.1383597644637243,-0.7889185126696081,0.5987187619782065],[-0.12733362986380276,-0.7798076848139938,0.6129323954652316],[-0.11066784804365588,-0.7643357533550905,0.6352507249523551],[-0.0907371547249965,-0.7428486454642098,0.6632817340198665],[-0.014231830631643818,-0.6824712278363908,0.7307738899087469],[0.07454716562636923,-0.6715109816990251,0.7372351874094768],[0.0816500969531057,-0.66960718425512,0.7382137092072175],[0.12147236804378556,-0.7657040518029846,0.6316183727966812],[0.12198747307397456,-0.7673583281003534,0.6295079449125774],[0.12373790738433285,-0.7824083470710855,0.6103491695002445],[0.12321830545859909,-0.7827032985705066,0.6100760572311947],[0.12312066609695525,-0.7831411014355549,0.6095336880125232],[0.12364709712765706,-0.7860867404205172,0.6056228462557786],[0.12528421354559638,-0.7883134423489906,0.6023834181384364],[0.12672788832002504,-0.7892738162644408,0.6008218415481521],[0.12540531660527174,-0.7907171804287513,0.5991993384024529],[0.12540531660527174,-0.7907171804287513,0.5991993384024529],[0.12672788832002504,-0.7892738162644408,0.6008218415481521],[0.12977806460634272,-0.7892461156814637,0.6002068167130007],[0.13253925793829857,-0.7887399164030032,0.600268847582272],[0.13253925793829857,-0.7887399164030032,0.600268847582272],[0.12977806460634272,-0.7892461156814637,0.6002068167130007],[0.12672788832002504,-0.7892738162644408,0.6008218415481521],[0.12528421354559638,-0.7883134423489906,0.6023834181384364],[0.12364709712765706,-0.7860867404205172,0.6056228462557786],[0.12312066609695525,-0.7831411014355549,0.6095336880125232],[0.12321830545859909,-0.7827032985705066,0.6100760572311947],[0.12373790738433285,-0.7824083470710855,0.6103491695002445],[0.12198747307397456,-0.7673583281003534,0.6295079449125774],[0.12147236804378556,-0.7657040518029846,0.6316183727966812],[0.0816500969531057,-0.66960718425512,0.7382137092072175],[0.09132923697408517,-0.6665421899699658,0.7398516604453715],[0.11976968731789672,-0.6555988426899277,0.7455503869379996],[0.12307345301214433,-0.6541247463739125,0.7463067340878897],[0.28006215451135597,-0.6959434846552778,0.6612320740680434],[0.30631616331590467,-0.6959635424189279,0.6494652844572383],[0.3074648907681499,-0.6959083623239146,0.6489814266930732],[0.3488392204856383,-0.6911936217803852,0.6329001307165976],[0.39253987845123367,-0.68149874996209,0.6176341130682464],[0.40944010478286,-0.6898267650555535,0.5970743963765243],[0.4093296122742834,-0.6909191567532444,0.5958858845003552],[0.40875472435749866,-0.6951013873938816,0.591399726545867],[0.38665981535926025,-0.7756489218091895,0.4988616414223333],[0.2518790844924851,-0.866654096513494,0.430659498666414],[0.3553524558148368,-0.9199053503421702,0.16582755669132257],[0.3673633575715979,-0.9182758603934238,0.14769430501017836],[0.3673633575715979,-0.9182758603934238,0.14769430501017836],[0.3553524558148368,-0.9199053503421702,0.16582755669132257],[0.2518790844924851,-0.866654096513494,0.430659498666414],[0.38665981535926025,-0.7756489218091895,0.4988616414223333],[0.5409306165133625,-0.8042469922556248,0.2461317605800895],[0.5515954664270415,-0.8015680415841864,0.23071869479525686],[0.5723418511699191,-0.7953318917690034,0.19967971187511424],[0.5764847519212563,-0.7937770869399045,0.1938640426987095],[0.5865421059412576,-0.7900551050613677,0.1782730740310096],[0.6255399533735645,-0.7723119433605017,0.11060754439062453],[0.6447417832270883,-0.7576817298521029,0.10112580881990044],[0.6913413258127784,-0.7174012798477982,-0.08592191161846313],[0.6055795883586953,-0.7746004312853727,-0.18239389796763408],[0.6055795883586953,-0.7746004312853727,-0.18239389796763408],[0.6913413258127784,-0.7174012798477982,-0.08592191161846313],[0.6981856638186112,-0.7069522852790736,-0.11293912155166078],[0.6995189643938028,-0.7048450750340729,-0.11775669260655185],[0.7127968103396816,-0.6834485459599259,-0.15753981145995793],[0.7292277970390011,-0.6547061990432939,-0.19896384837434308],[0.7356679072533311,-0.6414203843097259,-0.2176525231405966],[0.7383606701256816,-0.6341989965585273,-0.22937993280954516],[0.6861581735996314,-0.6261010901712578,-0.37038410561035234],[0.6792207692408756,-0.6325884633489364,-0.3721437661303287],[0.6671201743377561,-0.6443853404083657,-0.37378898600461286],[0.6662133596312404,-0.6452868600273787,-0.37385107693420083],[0.6528827591306261,-0.6592003637027349,-0.3730937996324287],[0.6194542584138673,-0.690371016859928,-0.37371684577058495],[0.5927956220483469,-0.71192049358599,-0.3765136933666478],[0.5721775592923378,-0.7270442555467517,-0.3794990001551161],[0.5707315181422152,-0.7280186344755348,-0.37980837544143237],[0.5121264269962305,-0.7628809508190332,-0.394638033708768],[0.47977261360279877,-0.7820707467506511,-0.3977230019921132],[0.43255247038649147,-0.8117686005133622,-0.39233926592060736],[0.421140492375161,-0.8196279305629771,-0.3883950838039257],[0.4015884277228261,-0.8333057158598427,-0.37990567070579984],[0.40120059099304933,-0.8335510332175071,-0.37977725156840875],[0.3346018112626811,-0.8715802887935411,-0.3583147053726663],[0.3348595835061816,-0.8721430259449122,-0.3567009975171344],[0.3361624613204528,-0.8801937686351993,-0.3350428767407845],[0.3369516044264933,-0.9128912752926602,-0.2304194778419406],[0.3376868834714538,-0.9219132961602328,-0.18985110769840602],[0.34710158348579334,-0.9294157062426075,-0.12532731438601136],[0.34734362343777986,-0.9295325992504093,-0.12378026574495637],[0.17330522980107876,-0.9848263185637637,0.009078523433878077],[0.17150379012394684,-0.9847845797705934,0.028031793006818614],[0.16665400039163683,-0.9841831994229274,0.06008222804719031],[0.1665411751360233,-0.9841638992392848,0.060707960091236565],[0.16651786746833355,-0.9841528436930008,0.06095063629510885],[0.16257169362489846,-0.9832080929697123,0.08289927834905288],[0.1590963116725101,-0.9810167168017647,0.11088085933870548],[0.1566240794489308,-0.9794589983858676,0.1269998748728839],[0.12673685399785384,-0.9084628049516145,0.39828771241173344],[0.010229582454660794,-0.9038857454362835,0.4276516278934263],[0.0027565547547173893,-0.9027719671146167,0.430110656457021],[-0.04585449625435904,-0.8924460201669514,0.4488178542141882],[-0.04864158871416897,-0.8916973777126237,0.4500108692329466],[-0.16187263184707865,-0.8432823289078283,0.5125155264093857],[-0.2573526129854775,-0.8733731288106149,0.41350817460009687],[-0.26794091297826755,-0.8753444367906446,0.40246712180256644],[-0.26969464406611016,-0.8756543719392873,0.4006172985102698],[-0.306984263342314,-0.8804348701394107,0.3613794425569556],[-0.31195722108334967,-0.8808136854306077,0.35615999743388455],[-0.562818829478955,-0.7820902268817135,0.26752540477503955],[-0.5650203195129345,-0.7841411120888917,0.25666077781674723],[-0.5672321065796134,-0.7863677701418883,0.24469055426666644],[-0.5747189804384595,-0.795500164803084,0.19203536476921054],[-0.627111488155304,-0.7692328680401218,0.12252336981330843],[-0.7360023734041231,-0.6760718309624553,-0.03503406517335788],[-0.7441275604339219,-0.6671457080899545,-0.034507651032970474],[-0.7464280415083558,-0.6645046798817543,-0.035759044523693384],[-0.7519208045953581,-0.6582796455985085,-0.035819154196760496],[-0.7544856680450871,-0.6558712626947821,-0.024171542890576547],[-0.7558644021900724,-0.6543893861575578,-0.021060313059856825],[-0.7558644021900724,-0.6543893861575578,-0.021060313059856825],[-0.7544856680450871,-0.6558712626947821,-0.024171542890576547],[-0.7519208045953581,-0.6582796455985085,-0.035819154196760496],[-0.7524595903693004,-0.6575616480707396,-0.03764629925713004],[-0.7581046339651806,-0.6503534980615956,-0.048142408742873365],[-0.7595886470036268,-0.6485050620502449,-0.049661573056109826],[-0.7665654846909463,-0.639996971150833,-0.05273741175194897],[-0.7728271509906132,-0.6327946563803338,-0.04805327822560453],[-0.778417748693287,-0.6268087282266782,-0.03430199320927515],[-0.7794214170229944,-0.6258232053714771,-0.02911306071916349],[-0.7824570942395656,-0.6220423878857713,-0.028708245288475587],[-0.7824570942395656,-0.6220423878857713,-0.028708245288475587],[-0.7794214170229944,-0.6258232053714771,-0.02911306071916349],[-0.778417748693287,-0.6268087282266782,-0.03430199320927515],[-0.7728271509906132,-0.6327946563803338,-0.04805327822560453],[-0.7665654846909463,-0.639996971150833,-0.05273741175194897],[-0.7595886470036268,-0.6485050620502449,-0.049661573056109826],[-0.7581046339651806,-0.6503534980615956,-0.048142408742873365],[-0.7524595903693004,-0.6575616480707396,-0.03764629925713004],[-0.7519208045953581,-0.6582796455985085,-0.035819154196760496],[-0.7464280415083558,-0.6645046798817543,-0.035759044523693384],[-0.7441275604339219,-0.6671457080899545,-0.034507651032970474],[-0.7360023734041231,-0.6760718309624553,-0.03503406517335788],[-0.627111488155304,-0.7692328680401218,0.12252336981330843],[-0.5747189804384595,-0.795500164803084,0.19203536476921054],[-0.5801932706485637,-0.8091397963168642,0.09310509497565687],[-0.5820474016111252,-0.811363858504566,0.05393988682153731],[-0.5820877670029653,-0.811383736249264,0.053200226086800875],[-0.5860212159302775,-0.8101586728853647,0.0149016518622435],[-0.5990220102009303,-0.7786472011818125,-0.18676500578686225],[-0.5985995687041944,-0.775711051809062,-0.19987726346043255],[-0.6064762719430071,-0.766190027906559,-0.2124602850103002],[-0.6241755178613818,-0.7421085190921373,-0.2442946352119725],[-0.6251208263590479,-0.740671390683075,-0.2462312804575832],[-0.6284747731406818,-0.7359245905391962,-0.2518619791979032],[-0.6293758895461089,-0.7350509251534516,-0.2521628979233449],[-0.7290121929955033,-0.6246785413608763,-0.27985343025793874],[-0.7333719404128062,-0.6205134467436667,-0.27772046994316113],[-0.7685685089974567,-0.5872413255895534,-0.2538701882798577],[-0.84138637036843,-0.5080696954092941,-0.18421226985449746],[-0.8777588436164605,-0.45693098374199254,-0.1440607113326501],[-0.9480114301884496,-0.31556165884420917,-0.04117241430304295],[-0.9519225495152244,-0.30625630618106453,0.0071087726623703445],[-0.9572326987968415,-0.2890597748293811,0.012247731614586095],[-0.9721659651513639,-0.23257730067738142,0.02830433555022965],[-0.9820666491042481,-0.18379501379071336,0.04200582843874323],[-0.9934124310939644,0.0034798540126812125,0.11454096369434814],[-0.9876893060172042,0.05586996683888637,0.14611085375383817],[-0.9595769926030853,0.15912670498206374,0.23214367755415954],[-0.9383194681429299,0.20580825018929486,0.277848051744096],[-0.9215786622252283,0.2353308756856799,0.3087266562513992],[-0.946764685971714,-0.14259002697450085,0.2886255595131742],[-0.9397866343429455,-0.16522446454742953,0.29916877882789533],[-0.9396847214110468,-0.16742506353385622,0.29826409848878505],[-0.9373194206800085,-0.1732700026800243,0.30234055266761317],[-0.9361520502213044,-0.1772323282915803,0.30365776900121294],[-0.9346056057837507,-0.18460006634171472,0.3040315397195213],[-0.9341840209846484,-0.18767852500593948,0.3034418991974395],[-0.9346555057437744,-0.18978577982278366,0.3006666648631126],[-0.9357847817955944,-0.19186315056145095,0.29579616903605405],[-0.9382421073267543,-0.19287573888529538,0.28722934632189456],[-0.9395530614527225,-0.19221647224771826,0.283359969846587],[-0.9395530614527225,-0.19221647224771826,0.283359969846587],[-0.9382421073267543,-0.19287573888529538,0.28722934632189456],[-0.9357847817955944,-0.19186315056145095,0.29579616903605405],[-0.9346555057437744,-0.18978577982278366,0.3006666648631126],[-0.9341840209846484,-0.18767852500593948,0.3034418991974395],[-0.9346056057837507,-0.18460006634171472,0.3040315397195213],[-0.9361520502213044,-0.1772323282915803,0.30365776900121294],[-0.9373194206800085,-0.1732700026800243,0.30234055266761317],[-0.9396847214110468,-0.16742506353385622,0.29826409848878505],[-0.9397866343429455,-0.16522446454742953,0.29916877882789533],[-0.946764685971714,-0.14259002697450085,0.2886255595131742],[-0.9215786622252283,0.2353308756856799,0.3087266562513992],[-0.92077627627013,0.2366458968786854,0.31011250950033564],[-0.932019728992741,0.3604002150014132,-0.03809080985267772],[-0.9213341970200694,0.378076740958629,-0.09056089303604448],[-0.9194370012731409,0.38078950772700443,-0.09815778876319578],[-0.9194215392766327,0.3808123240687772,-0.09821408733742808],[-0.91218655393911,0.3905690707836069,-0.12398182027991518],[-0.9105374746565836,0.39269298674268877,-0.12928157412840363],[-0.9081942048056347,0.395393904826352,-0.1372841811121395],[-0.9090557995176286,0.3848154941927682,-0.15979545923630242],[-0.9094619582210671,0.37820208721982884,-0.1727487417356983],[-0.9094754170972295,0.3777623250494716,-0.17363781693236643],[-0.9081313832627442,0.3549602967597769,-0.2220373357287148],[-0.8736739722955889,0.21693385897445355,-0.43546927671616364],[-0.7906467465294731,0.2853186517580458,-0.5417296273615928],[-0.7687687950739175,0.29747111753666416,-0.5661320287283571],[-0.761999527560057,0.30072282677798373,-0.5735176557464547],[-0.7079420968253081,0.3188656665316434,-0.630192569180181],[-0.7060943886682096,0.3193410406090048,-0.632022162644654],[-0.6970837759486306,0.3226350297727955,-0.6402974674889063],[-0.6545701235625744,0.3420256260987891,-0.674207997899022],[-0.6352162147573029,0.3523399690863216,-0.6872822612970991],[-0.6303600381583866,0.362140815590138,-0.6866587594844088],[-0.6158587240691308,0.3928309692280396,-0.6829362061007611],[-0.6043421788402473,0.42052144674889647,-0.6767069112243776],[-0.5843523450874496,0.4756684708318016,-0.6574738341921555],[-0.5797038550248377,0.4912405005659147,-0.6500970781914741],[-0.5645688086459115,0.53334930001429,-0.6299210938509705],[-0.5488861941185754,0.5699670800126245,-0.6114421261312539],],
[[0.7045118860949774,0.021191449973408005,0.7093757289327867],[0.7165241414629934,0.022629819332412912,0.6971951276204551],[0.723337502882795,0.023691526062603906,0.6900880875048544],[0.743475764800287,0.027675610249297343,0.6681899787874384],[0.8392152496014922,0.0543916432982687,0.5410723740643384],[0.8528112085023893,0.13639268474744834,0.5040933229076512],[0.8996464250419869,0.11646444878023497,0.4207996460068484],[0.9798282309486367,0.036552569676074384,0.1964702203544871],[0.9620691032228526,-0.17672168591440718,0.20782802109327317],[0.9515750374559615,-0.21528164639011563,0.21945104424050202],[0.9515750374559615,-0.21528164639011563,0.21945104424050202],[0.9620691032228526,-0.17672168591440718,0.20782802109327317],[0.9798282309486367,0.036552569676074384,0.1964702203544871],[0.9805362129364417,0.03527414588473642,0.19314365056186425],[0.9901517431078338,0.015837985643385184,0.1390995464812097],[0.9988656806368094,-0.015061457753323975,0.04517194412806052],[0.9986726996187812,-0.04154446318751762,0.030444976836854425],[0.9978352092916369,-0.06269617452818768,0.01985156914317461],[0.9971802976335373,-0.07354833433269271,0.014902903353923592],[0.9878258655837376,-0.1552344831276025,-0.010115064599183229],[0.9706485778812591,-0.23906592394427623,-0.02624542371079113],[0.9568764586749681,-0.28854226518009335,-0.03362742985113418],[0.9531262665718278,-0.30200828971983806,-0.018474655919596815],[0.9429044900493702,-0.33279190920061175,0.013441272832181096],[0.9426679201800193,-0.33343420865830997,0.014100381550991784],[0.9396765191312795,-0.3413612479742595,0.021921171838620235],[0.9023406936241022,-0.4183005945482347,0.1039513599264941],[0.8852441588477525,-0.44354870122345413,0.14002617208551466],[0.8832633889393917,-0.4461024389854255,0.14435511660677477],[0.8634664895352382,-0.46778836112410116,0.18867874985413688],[0.8383325734793102,-0.4886708512814762,0.24165946153915507],[0.8377555559054424,-0.47508229960956505,0.2691884788531092],[0.8357036089834634,-0.462732582558142,0.2957668591493761],[0.835582241418912,-0.4623203867493851,0.29675272167453837],[0.8258603008247118,-0.43869578710718155,0.3542608783031611],[0.7485707422919751,-0.34467793658195145,0.566426485802041],[0.7328020360118034,-0.35536699576765035,0.5802718969035383],[0.622589967241454,-0.3141239594625944,0.716734170234563],[0.6151747418735223,-0.2972797421256814,0.7301950368788696],[0.6145756819824795,-0.296062608207184,0.7311933144780043],[0.6152581893510516,-0.2734879611980067,0.7393657386680986],[0.6125985488125173,-0.2391061486786611,0.7533599854364817],[0.5939031790131127,-0.16347690331320608,0.7877526997993998],[0.6088339436795714,-0.1157894893664311,0.7848019005939281],[0.6897914492061468,-0.13580421791461594,0.7111574867767921],[0.6912624276371349,-0.1349091229839828,0.7098984326457607],[0.6915486078525638,-0.13451670139671995,0.7096941454052772],[0.6939429579081781,-0.13289215468361823,0.7076601206746032],[0.6945851640002264,-0.13382087587863342,0.7068545982943408],[0.696655313004555,-0.13540868359249536,0.7045110810131187],[0.6995169216832222,-0.13616663320983266,0.7015231459325684],[0.7000262457778826,-0.13546733721999635,0.7011503802813254],[0.7015905983382507,-0.13201949128445142,0.7002438762633845],[0.7015905983382507,-0.13201949128445142,0.7002438762633845],[0.7000262457778826,-0.13546733721999635,0.7011503802813254],[0.6995169216832222,-0.13616663320983266,0.7015231459325684],[0.696655313004555,-0.13540868359249536,0.7045110810131187],[0.6945851640002264,-0.13382087587863342,0.7068545982943408],[0.6939429579081781,-0.13289215468361823,0.7076601206746032],[0.6915486078525638,-0.13451670139671995,0.7096941454052772],[0.6912624276371349,-0.1349091229839828,0.7098984326457607],[0.6897914492061468,-0.13580421791461594,0.7111574867767921],[0.6088339436795714,-0.1157894893664311,0.7848019005939281],[0.6134371173717541,-0.09133959395297958,0.7844437402434526],[0.614020064219588,-0.08465095871733788,0.7847379026936374],[0.6465153577610661,0.0009315643179792143,0.7629004026522743],[0.702638318133873,0.020383364007007618,0.7112551668436301],[0.7045118860949774,0.021191449973408005,0.7093757289327867],],
[[0.5167596953446232,0.7172297029030894,-0.46748365804686537],[0.523631395684988,0.7213813687624865,-0.45323181955303293],[0.5425819882835803,0.7342061718761663,-0.40810057972169317],[0.5552557467441733,0.7394237409434128,-0.38071457423747146],[0.5665049557026143,0.7452977554857927,-0.3515727390344971],[0.5629566836234307,0.7526247684881876,-0.341519736211263],[0.5589848698028339,0.7609890284151938,-0.32928955945065785],[0.5579069123835992,0.7633340680852284,-0.3256700440861193],[0.5550067422933261,0.7698947234418869,-0.3150073504305734],[0.5680094713231649,0.7719166687566261,-0.28549938175563894],[0.6537395157703949,0.753285447299806,-0.0720116685449021],[0.6653519145816981,0.7461324938346577,-0.02435428928429813],[0.6732917513547099,0.7386502947825481,0.032771322453670815],[0.6754607578248257,0.7335149989290254,0.07555468870205322],[0.6760571477243758,0.7313776014378155,0.08963000125989988],[0.6783453140331471,0.719666930544311,0.14807816858065587],[0.6789662971066721,0.7037413613203972,0.2091718522176642],[0.6782785221189914,0.6943838064973384,0.2403526070304704],[0.6768251198235364,0.6833935577314814,0.27364393365642925],[0.7878583097842324,0.5567224518028528,0.26332374629446703],[0.8542527144957839,0.3514167892210704,0.3830907725724265],[0.8575782661898899,0.305530558510007,0.4137760205416764],[0.8547201053060807,0.22420112950288162,0.4681745348854361],[0.8454105598737791,0.17582357191150458,0.5043481504022627],[0.7151135002232325,0.2972816221692389,0.6326423309571552],[0.6626271828594994,0.36005889522866136,0.6567212563199089],[0.6903668877677668,0.49158569026915705,0.5307891006760068],[0.7028780752936769,0.4852958582907563,0.5200484027446818],[0.6859430321232628,0.49904959248291825,0.5295579863661559],[0.6848068667555374,0.50087278939671,0.5293070980880785],[0.6853938153621925,0.5018567063816609,0.5276127027688098],[0.6858769816091159,0.5050910053790105,0.5238853332400029],[0.6858769816091159,0.5050910053790105,0.5238853332400029],[0.6853938153621925,0.5018567063816609,0.5276127027688098],[0.6848068667555374,0.50087278939671,0.5293070980880785],[0.6845368749339866,0.5009301696676791,0.5296019561636097],[0.6782749668441065,0.5039369156406668,0.5347809405795964],[0.678074584203261,0.5040881158945929,0.5348925403026425],[0.6745420530705566,0.5078022648065151,0.5358450135036551],[0.6732946736485591,0.515075963751979,0.5304441855666348],[0.6733614221909534,0.5157692877902128,0.5296852243336161],[0.674309737447099,0.5176787261229141,0.5266071728563724],[0.6740427062261817,0.5180780503211776,0.5265563255328841],[0.6734277555313142,0.5193561899577882,0.5260838393569853],[0.6734277555313142,0.5193561899577882,0.5260838393569853],[0.6740427062261817,0.5180780503211776,0.5265563255328841],[0.674309737447099,0.5176787261229141,0.5266071728563724],[0.6733614221909534,0.5157692877902128,0.5296852243336161],[0.6732946736485591,0.515075963751979,0.5304441855666348],[0.6745420530705566,0.5078022648065151,0.5358450135036551],[0.678074584203261,0.5040881158945929,0.5348925403026425],[0.6782749668441065,0.5039369156406668,0.5347809405795964],[0.6845368749339866,0.5009301696676791,0.5296019561636097],[0.6848068667555374,0.50087278939671,0.5293070980880785],[0.6859430321232628,0.49904959248291825,0.5295579863661559],[0.7028780752936769,0.4852958582907563,0.5200484027446818],[0.6903668877677668,0.49158569026915705,0.5307891006760068],[0.6626271828594994,0.36005889522866136,0.6567212563199089],[0.6621132233413894,0.3605591545734778,0.6569651250483046],[0.6620260314863643,0.36064244208188895,0.6570072774358188],[0.6467308789565519,0.37409023541709424,0.6646771140709367],[0.5796402297840395,0.4172477800289541,0.6999439220943457],[0.5675997016393477,0.4349807154444443,0.6990152758633842],[0.5152948134483413,0.538926530496785,0.6663553481138553],[0.5114831131999917,0.5442802090157972,0.6649391543479483],[0.506146812635278,0.5586277139256778,0.6570772262780987],[0.5018698788440504,0.568827370618483,0.6515842594356629],[0.49502400371598737,0.5831474118218667,0.6441198117046644],[0.4479418723317647,0.6539343930507285,0.6096867134826609],[0.4169404972261323,0.7708984212537099,0.4815353007634678],[0.34114266092875684,0.8155547502619142,0.4674314219430205],[0.30451802049612375,0.8666487499588676,0.395207185395021],[0.28451773554783183,0.887279998776755,0.36302047040002555],[0.2701354662338435,0.8999595184614204,0.342198327017115],[0.23816861998620079,0.9225025371865052,0.3037511766863288],[0.062136658537344985,0.9868566723850726,0.14917420633231118],[0.10462257075733614,0.9888975446206539,-0.10552612914045542],[0.1114777928866909,0.9817841246364224,-0.15385913786644537],[0.09372632156291952,0.9791088858905831,-0.18044712859002646],[0.058769541438518744,0.9699415702947606,-0.2361344769686125],[0.049410272893418004,0.9667365454323674,-0.2509563242042131],[0.022513906597409976,0.9548799745072595,-0.29613739766321084],[-0.0420696730197027,0.9159803563194449,-0.3990114402481691],[0.024140222149743356,0.8558100067572498,-0.5167266995315001],[0.02835776980480883,0.8510714850761435,-0.5242834769301672],[0.04676664415036229,0.8237342920685575,-0.5650439779921789],[0.04708999459869763,0.8231580966507683,-0.5658562364478977],[0.23738934615321158,0.8072670284486243,-0.540339007580129],[0.23261167443822953,0.8180413751297759,-0.5260229248719379],[0.23266264491768202,0.8217521970045352,-0.5201840254930252],[0.23700599590355947,0.8289318832480664,-0.5066557912829736],[0.24502364313073494,0.8297917043979145,-0.5014071615158149],[0.2517195814307634,0.8293403598531482,-0.4988304520004487],[0.2517195814307634,0.8293403598531482,-0.4988304520004487],[0.24502364313073494,0.8297917043979145,-0.5014071615158149],[0.23700599590355947,0.8289318832480664,-0.5066557912829736],[0.23266264491768202,0.8217521970045352,-0.5201840254930252],[0.23261167443822953,0.8180413751297759,-0.5260229248719379],[0.23738934615321158,0.8072670284486243,-0.540339007580129],[0.04708999459869763,0.8231580966507683,-0.5658562364478977],[0.0556912447547748,0.8045489665267629,-0.591269351242208],[0.06779372541296974,0.7595061348849423,-0.6469578362356906],[0.08548704520513456,0.7233166613067148,-0.6852043290714112],[0.10510661678391892,0.716575046298763,-0.6895453590085021],[0.16350192515393014,0.6998707670707542,-0.6953042714314019],[0.22875720619404763,0.6819942941847285,-0.6946610132386646],[0.27490684410390237,0.6662218937887453,-0.6932348918666533],[0.3158414603954829,0.6446283412992138,-0.6962028967830234],[0.3224073197972285,0.6435406037013849,-0.6941966663192967],[0.35103458719103253,0.6415769420955156,-0.6820218075450293],[0.3542043763766613,0.6411103750633304,-0.6808206421237362],[0.4895959375735979,0.7029986295812831,-0.5158379054686344],[0.5096288861391739,0.7140177021917664,-0.48005949565583544],[0.5167596953446232,0.7172297029030894,-0.46748365804686537],],
[[-0.19792785029044707,-0.7802972665103348,-0.5932627933352149],[-0.18752327698450752,-0.7763899652330721,-0.6017089350129188],[-0.0825837590455172,-0.7401224881665552,-0.6673819185833996],[-0.06518871730215155,-0.7320032591073623,-0.6781752426863575],[-0.061298898025727,-0.7149078139475046,-0.6965265699581258],[-0.060572722921277786,-0.7086889377667924,-0.7029160225267863],[-0.05288211901035987,-0.6743499059497619,-0.7365159101027768],[-0.04613518929750561,-0.658467969745469,-0.7511933686659937],[-0.027798713986432414,-0.6231273353959309,-0.7816262248562721],[-0.02640133564293034,-0.6211188388003759,-0.7832715733151191],[-0.025352084377264127,-0.6197967244177275,-0.7843527855619459],[-0.0780066474051783,-0.574792985770809,-0.8145722720970086],[-0.14630256178114456,-0.5546876464217481,-0.8190953395810381],[-0.17379552867097833,-0.5491535958955527,-0.8174505748538924],[-0.19663368756228003,-0.5470474440687124,-0.8136794742732231],[-0.19869545714153186,-0.5470951567442149,-0.8131463612280022],[-0.20848155624922082,-0.5461351677974102,-0.8113395215313978],[-0.21966077240839044,-0.5463563996972518,-0.8082350088772488],[-0.23243824748874703,-0.5450040801302557,-0.8055699930767866],[-0.23490457306822546,-0.5444394215292572,-0.8052363366344831],[-0.24898104111547664,-0.5428765212622719,-0.8020558109179358],[-0.24980104965286676,-0.5428830500682228,-0.801796376607521],[-0.27465217982801177,-0.5399455429946072,-0.7956286764037483],[-0.28241603242896646,-0.5399356782461893,-0.7929127619000143],[-0.3097987602098377,-0.533158844314098,-0.78725242133772],[-0.4149350134510732,-0.4921439662892183,-0.7652602505406082],[-0.4552139666632355,-0.5204846864688397,-0.7224098114686404],[-0.45153837931223634,-0.5570784584773343,-0.696976816765519],[-0.45084673552860066,-0.5714197906993567,-0.6857234456107707],[-0.4505274578859126,-0.573213294893074,-0.6844351892244314],[-0.44348129098296996,-0.6017018696287749,-0.6642884950330806],[-0.4427026739433884,-0.6076921586521162,-0.6593364716107438],[-0.44246813386629524,-0.6112632322054431,-0.656185348408994],[-0.441754335611372,-0.6165463647382595,-0.6517082837409638],[-0.43331374850777105,-0.647240262231146,-0.6271516868358895],[-0.4329747279956136,-0.6494564041735047,-0.6250914045122888],[-0.4311696636566241,-0.657537458128727,-0.6178488587833164],[-0.4258373336447426,-0.6890506180650862,-0.5864058415623594],[-0.3882726159837803,-0.7128648480422182,-0.5840103458868321],[-0.3861866565554082,-0.7140442578237389,-0.5839526215092291],[-0.3632199815692601,-0.7256826475123639,-0.5843423141346796],[-0.27168072040959834,-0.76379741313795,-0.5854938922324446],[-0.22437958005840763,-0.7861101868395507,-0.5759206353308582],[-0.21609033396991814,-0.7902164866993495,-0.5734656674233483],[-0.20417735911800872,-0.7830547872942295,-0.587483451783269],[-0.19792785029044707,-0.7802972665103348,-0.5932627933352149],],
[[-0.4439462585259046,0.273143435781476,0.8534075128743251],[-0.43974245380938637,0.2696926354303371,0.8566752340953595],[-0.43780806489501944,0.2681886159344538,0.8581369148312177],[-0.41071477988206556,0.2488883302739782,0.8771362315170077],[-0.4070411106862305,0.227178872269152,0.8847074625014961],[-0.4615984240328509,0.1804896024787781,0.8685334756515958],[-0.4619482758348175,0.18007945962856095,0.8684325988084077],[-0.46473505944555954,0.17667724308961133,0.8676442106626349],[-0.46614143293663235,0.17483550819650026,0.8672627684695421],[-0.47709678607989026,0.15846921416059265,0.8644455823680075],[-0.4940164092034052,0.14287518862539242,0.8576330613456038],[-0.5476110936310511,0.1480307796805805,0.8235344427523136],[-0.5089736537643791,0.20996039901143088,0.8347828763341392],[-0.5040064834239372,0.21473671491706678,0.8365797080573153],[-0.5040064834239372,0.21473671491706678,0.8365797080573153],[-0.5089736537643791,0.20996039901143088,0.8347828763341392],[-0.5476110936310511,0.1480307796805805,0.8235344427523136],[-0.5536989834277872,0.14829630315331646,0.8194056640163617],[-0.5559139355744711,0.14832709413240827,0.8178989970530215],[-0.5655066954277901,0.1482736354407258,0.8113058032946218],[-0.5669480892241154,0.14918751206045194,0.8101314401813678],[-0.6302594392554225,0.19202439047361078,0.7522630342457873],[-0.633099553709482,0.19479469150682496,0.7491595178956318],[-0.6266173153071772,0.22191568909444137,0.7470636968096931],[-0.5695247246620984,0.30330720038205505,0.7639674928915241],[-0.5657349520513806,0.307389986149829,0.7651505475670982],[-0.5595911771049772,0.3079789573339898,0.769419701038214],[-0.5577702130419272,0.3081911468243995,0.7706559585588272],[-0.5385809931587859,0.31032032810362786,0.7833465438576673],[-0.4871829900026196,0.3123121928112351,0.8155451112437284],[-0.4516993754052811,0.27974490913130945,0.8471779388496814],[-0.4439462585259046,0.273143435781476,0.8534075128743251],],
[[0.3748230467223525,-0.5994771835829327,-0.7072020856935082],[0.37677775110524864,-0.6037514999884671,-0.7025116743042407],[0.3790512498054385,-0.6040743908815601,-0.7010094723340102],[0.3934922258005676,-0.6016717443898648,-0.6950935046721214],[0.39796160868063296,-0.6022241908013111,-0.6920640013972905],[0.4035013746011011,-0.6012686341782894,-0.6896830215746915],[0.40822088540888846,-0.6018198899037946,-0.6864171682236451],[0.41629886048385356,-0.6003712761354412,-0.6828247136354594],[0.42243371998400536,-0.5973912610558089,-0.6816695925700555],[0.43373492584109175,-0.5998817197585978,-0.6723213044408826],[0.4383252833799485,-0.6072711891125102,-0.6626406634245787],[0.429127018998783,-0.6241055636288997,-0.6529488854517418],[0.4234533666084823,-0.6283607120394493,-0.6525718825334252],[0.41849880664022654,-0.6356692840131961,-0.6486781252692716],[0.40584702825896773,-0.6466435196347962,-0.6458640322604192],[0.402288313082198,-0.6472304459569743,-0.6475004733464027],[0.40138192376343124,-0.6390833707472864,-0.6560983131438867],[0.389306387549528,-0.6230926324124595,-0.6783775556771086],[0.37039831257540884,-0.6361088163177925,-0.6768830503447895],[0.3602336737834112,-0.6505047402787253,-0.6686368843755296],[0.3564275164388493,-0.6478288555191842,-0.6732586423373546],[0.3541008084136279,-0.6471894935824177,-0.6750987904576254],[0.33992059679642583,-0.6364867548912274,-0.6923428332275827],[0.34071896638365284,-0.624482577069703,-0.7028030285100071],[0.34330753263790337,-0.6220975364884521,-0.7036580086441667],[0.34398343224884903,-0.609344235236113,-0.7144053480502636],[0.3448013307061223,-0.6085207467707529,-0.7147129095607919],[0.34550376793295556,-0.596427280551297,-0.7245009629795636],[0.34586679736495735,-0.5960651546541769,-0.7246257585040707],[0.34636598054018747,-0.5779565503839141,-0.7389159853412027],[0.33714740931333786,-0.5691977534523087,-0.7498970208356275],[0.31630944813373346,-0.5614696963405281,-0.7646568597172252],[0.30609144529695465,-0.5597719722676434,-0.7700411457705454],[0.29628855054056547,-0.5634355038761648,-0.7712026502744809],[0.2938655736318153,-0.5646590421335721,-0.7712348480008155],[0.2627512538233011,-0.5846175626944763,-0.7675832749633443],[0.2501841669063248,-0.5940848344278592,-0.7645070909626748],[0.2409784130521891,-0.6035557333208866,-0.7600328158825351],[0.21730886242893463,-0.6242050299729393,-0.7504298360715175],[0.22192204879073935,-0.6286939086871922,-0.7453150833306282],[0.23902408113017326,-0.6530596899155263,-0.718596221843194],[0.24420155806831195,-0.6627603369559876,-0.7078942963430309],[0.24943667278372128,-0.6769626100836764,-0.6924615302089229],[0.25031409476612254,-0.6812741526085269,-0.68790143403612],[0.2514493456534297,-0.7067424604894834,-0.6612777942073461],[0.2546927158173365,-0.7222583642329748,-0.6430198098076737],[0.25981442956454015,-0.7354813710037427,-0.6257504415471936],[0.2661289177895303,-0.7464109395132399,-0.6099558250325479],[0.2684202687680857,-0.7493453349878421,-0.6053363761136674],[0.29043789052698443,-0.7707693420329259,-0.5670630063126725],[0.2905062260563093,-0.7708144286788643,-0.5669667090429531],[0.30726428681744083,-0.7838226984016808,-0.5396393569013266],[0.325165799408361,-0.7697262854266924,-0.5493529361151607],[0.33586065223244804,-0.7603418631176614,-0.5559477254857315],[0.3712977400386237,-0.7334633811504673,-0.5693588119573938],[0.3785134316753455,-0.7284624796824618,-0.5710253914986905],[0.37944136853261384,-0.7277260398698051,-0.5713484564970033],[0.3919222371528225,-0.7189438442360637,-0.574035459584334],[0.399221154864394,-0.7128976220423069,-0.5765409352293762],[0.4030505221856517,-0.7091123113771476,-0.5785412746029732],[0.414048136887956,-0.6999336206314422,-0.5819424946241449],[0.4152649054817404,-0.6986591122433701,-0.5826066453058594],[0.42951012651938725,-0.6866012361938187,-0.5866001991769351],[0.44589299976760677,-0.666795173903149,-0.5971294908290115],[0.45019791490557703,-0.6545270509229507,-0.6073847026595055],[0.46058229758769653,-0.6407026267697206,-0.6142996754021761],[0.4705761892074182,-0.6313708134117246,-0.61638376529792],[0.4652697631310827,-0.6299587717275494,-0.6218327696732165],[0.45019929551559246,-0.6191094905775834,-0.643446993150197],[0.43693652697203855,-0.6217671904070197,-0.6499938709949303],[0.446768442921823,-0.607420576720803,-0.656839555283767],[0.45072557959651965,-0.6069893794437141,-0.6545306296422776],[0.4546202343044154,-0.6034707904867644,-0.6550904117679316],[0.4559667252099357,-0.5915598140941484,-0.6649446081067383],[0.45414663474588207,-0.5901853673713919,-0.6674069720115947],[0.4553347356728349,-0.5808235612504995,-0.6747697897698421],[0.4571741947688475,-0.5788379271529545,-0.6752321154438132],[0.4585326460864114,-0.5641375590624851,-0.6866561198504058],[0.444730070202987,-0.5536739163650087,-0.7040315042626145],[0.44395217075311133,-0.5521833901493591,-0.7056911319598405],[0.44024010145435233,-0.5491935403935388,-0.7103345044846632],[0.42910997337825113,-0.5669292366986904,-0.7031755622343235],[0.411939884008644,-0.5786885717940662,-0.7038643824188642],[0.39774697550502564,-0.5636298947396055,-0.7239604168961351],[0.39514482039557586,-0.5526909447032984,-0.7337528811238316],[0.38753879365392047,-0.5592718882939562,-0.7328223784638244],[0.38634788248841573,-0.5609102139989143,-0.7321987746018218],[0.3639070112202793,-0.5794418636420775,-0.7292590855407423],[0.3552097095728042,-0.5791324707574055,-0.7337790154669369],[0.35372677264153607,-0.593819146879839,-0.722672948930222],[0.363242628171816,-0.5918652269257809,-0.7195487101197012],[0.3748230467223525,-0.5994771835829327,-0.7072020856935082],],
[[-0.5056647360976213,-0.17624539667080458,-0.8445358102648306],[-0.48076183108838794,-0.222307343147132,-0.8482025152941977],[-0.46666655004749924,-0.26213998883104417,-0.8446922263892482],[-0.46045433812783965,-0.273352684528523,-0.844547282489443],[-0.4254610262400761,-0.31841926634861767,-0.8471080721895817],[-0.4208825730812815,-0.32248606376476135,-0.8478564727322604],[-0.4177652104563105,-0.32574948660398556,-0.8481506357420446],[-0.4146228844603803,-0.32853458233795096,-0.8486182250516319],[-0.39991124888311613,-0.3437072258470333,-0.8496683681986066],[-0.3934295914946333,-0.33804074770132286,-0.8549512321939169],[-0.3639713009738284,-0.3171166010061659,-0.875763640164237],[-0.3201082974079186,-0.3001390257884049,-0.8985806825930496],[-0.3231221339149296,-0.28035535317198507,-0.9038766301448853],[-0.3200160775213985,-0.2250750940906426,-0.9202884939777888],[-0.3200160775213985,-0.2250750940906426,-0.9202884939777888],[-0.3231221339149296,-0.28035535317198507,-0.9038766301448853],[-0.3201082974079186,-0.3001390257884049,-0.8985806825930496],[-0.2838008521654858,-0.2974533584038055,-0.9115802629963208],[-0.26139031968085064,-0.29233908097925615,-0.9198983435735423],[-0.2171075872456176,-0.2679525871178444,-0.9386510036308706],[-0.1772659925539572,-0.23341923012329885,-0.9560817072261696],[-0.16966743667387085,-0.22574060830038373,-0.9592987744684609],[-0.15580476493158588,-0.21521554466151152,-0.9640576458701328],[-0.1545359223853383,-0.21411743349620133,-0.9645062847724284],[-0.18985047731154395,-0.16581884604587138,-0.9677091022412647],[-0.1950335361342299,-0.15738008587973348,-0.9680875106887114],[-0.2033727321642444,-0.13730835119828713,-0.9694255765675147],[-0.2112755107451283,-0.11237149092422916,-0.9709455734421221],[-0.2219517922094786,-0.06261458704412586,-0.9730451250709261],[-0.22628254694385097,-0.04880998521292964,-0.9728380103039342],[-0.3284017699219729,-0.0601726391641168,-0.942619504894812],[-0.33121845396393357,-0.06131445875107577,-0.9415598084571178],[-0.33794929565463966,-0.06204592387572587,-0.9391169133270579],[-0.3544360686982552,-0.05916192783050548,-0.9332068042513962],[-0.363643124374,-0.06019168199326397,-0.9295916520248756],[-0.3744552918817348,-0.05833601448693086,-0.9254080958126234],[-0.37503458235321235,-0.05839809359620516,-0.9251695653789529],[-0.38430509839212973,-0.05678293393573334,-0.9214582409222166],[-0.39518871122290194,-0.058056849153536934,-0.9167634835596068],[-0.40622411951302395,-0.05598502367261309,-0.912056819419846],[-0.42457925203718405,-0.05823426611779229,-0.9035160369297646],[-0.42786905647495294,-0.05967682901535328,-0.9018684752168168],[-0.4296849237716742,-0.05987553109310373,-0.9009915577072015],[-0.4346265191453884,-0.10403527132935886,-0.8945817185562145],[-0.4346265191453884,-0.10403527132935886,-0.8945817185562145],[-0.4296849237716742,-0.05987553109310373,-0.9009915577072015],[-0.4440913722495498,-0.057237466994109275,-0.8941513996329762],[-0.5647637585142342,-0.07084010104086473,-0.8222065295005847],[-0.5728397474038424,-0.0964074899151087,-0.8139780216213276],[-0.5668857355198692,-0.1029558066779671,-0.817337546387896],[-0.5412947711600706,-0.13835359050483112,-0.8293722051703857],[-0.5347812888484029,-0.14871837481198483,-0.8318003474938701],[-0.5347342321578876,-0.14877135274328343,-0.8318211259408167],[-0.5056647360976213,-0.17624539667080458,-0.8445358102648306],],
[[-0.06518871730215155,-0.7320032591073623,-0.6781752426863575],[-0.0825837590455172,-0.7401224881665552,-0.6673819185833996],[-0.18752327698450752,-0.7763899652330721,-0.6017089350129188],[-0.19792785029044707,-0.7802972665103348,-0.5932627933352149],[-0.20417735911800872,-0.7830547872942295,-0.587483451783269],[-0.21609033396991814,-0.7902164866993495,-0.5734656674233483],[-0.21387632428026188,-0.7964402549943836,-0.5656322463728934],[-0.21000804003518622,-0.8104641294607274,-0.5468496301343222],[-0.20678630368042103,-0.8189744766699564,-0.535275845871416],[-0.20529039910408708,-0.8241211419918101,-0.5279016909972913],[-0.20451734019183446,-0.8319344550117196,-0.5158078325551201],[-0.20452003197167343,-0.8326719326427503,-0.5146153992170199],[-0.20173618562846912,-0.8459608727093874,-0.4936119055015262],[-0.2001333164168402,-0.8497472298747385,-0.4877256410936433],[-0.19552319631071632,-0.8698945133399826,-0.45282912380437296],[-0.15485295341533017,-0.9437114699426092,-0.29228278142461495],[-0.05597799686531779,-0.9313698201241548,-0.35974535720262774],[-0.04498198785207519,-0.9296623455696482,-0.36565631951166383],[-0.016092159508696715,-0.92538051491413,-0.37869769608436543],[-0.015734971683660982,-0.9253409793596061,-0.3788092957992447],[0.013540667478238452,-0.922482396708275,-0.38580160456846285],[0.04355415339177449,-0.9196727531343445,-0.39026281255664225],[0.0494887490551299,-0.9191951746605715,-0.39068029717107555],[0.09127035537215346,-0.9140735856532901,-0.39514453335605987],[0.10589415410478013,-0.9116322299368202,-0.39713109355331727],[0.1259351992561225,-0.907542160679811,-0.4006339378746401],[0.14828193719662022,-0.902094473639803,-0.40526291186061475],[0.21203636788374405,-0.8796964488605672,-0.4256462575387888],[0.1626189632744499,-0.8603385402102015,-0.483086606119982],[0.1391866864679028,-0.8482013584369182,-0.5110592156060317],[0.13719452752377076,-0.8466030304283811,-0.5142382429254081],[0.13146699011245702,-0.8435390470033457,-0.5207286305663043],[0.11793210161036319,-0.8375775324547162,-0.5334378094368938],[0.1051641949297055,-0.8331264413805836,-0.542992472118456],[0.09229611503853437,-0.8268651649704103,-0.5547751130929091],[0.08394761047414333,-0.8209568687967292,-0.5647854621634232],[0.08277585779234344,-0.8196422224488968,-0.566863991223446],[0.08055936380114949,-0.8180971242362666,-0.5694095926662149],[0.06874418746138201,-0.8128236202697584,-0.5784392785952888],[0.06185540800229276,-0.806855569094685,-0.5875014886123795],[0.030552171136282183,-0.7961116391260229,-0.6043780463310499],[0.026243073073459522,-0.7927226257796853,-0.6090173558221654],[0.02386306007309672,-0.7886014048254743,-0.6144415176981747],[0.003064731196869687,-0.7778489704684177,-0.6284437815460612],[-0.022142952455385907,-0.7586656642849355,-0.6511037547823358],[-0.02283510520266956,-0.7583164045794595,-0.6514865988768032],[-0.027902222228045243,-0.7544015109151255,-0.6558199648712386],[-0.04066664889299029,-0.7461960556635566,-0.6644830096999957],[-0.05846287035181354,-0.7363680012425313,-0.674050635736149],[-0.06518871730215155,-0.7320032591073623,-0.6781752426863575],],
[[0.0790693072744337,-0.4122595735575078,-0.9076288275816955],[0.0881646572165299,-0.41985272796314416,-0.90329988378157],[0.08934188784106388,-0.42535040468795227,-0.9006081613603055],[0.10762613911017713,-0.43482680006475904,-0.8940594320992754],[0.1171888891190703,-0.417829486863319,-0.9009357824920564],[0.12397586439825824,-0.4139445099915889,-0.9018203411403671],[0.13320202233823447,-0.4013025923857934,-0.9062082821236221],[0.12894572893979303,-0.3988512617640247,-0.9079045489353113],[0.11819972496400019,-0.38589122358599376,-0.914940866164442],[0.11686169110523927,-0.36329901876405907,-0.9243144314123282],[0.13631256234112907,-0.3382583865617537,-0.9311284279134834],[0.1308801568167811,-0.3349704650103458,-0.9330944068647972],[0.11203163867836166,-0.3302406231457003,-0.9372246490353211],[0.09195804281254712,-0.33237809428101317,-0.9386525026889386],[0.08965719342756165,-0.3318016164320859,-0.9390789503549464],[0.08067771888674068,-0.3375856664622131,-0.9378310207465392],[0.07653298667941028,-0.34444489642034654,-0.935681791679151],[0.05524731466149531,-0.35362922389838886,-0.9337527007873749],[0.043295047474514084,-0.3337803899949029,-0.9416560890893395],[0.03635563660496677,-0.3298863981312556,-0.9433203231220212],[0.028492942283968772,-0.3198573230468844,-0.9470371931097973],[0.00877999655958956,-0.30604085384509766,-0.9519778923053713],[-0.018175756554353197,-0.2777003089646232,-0.9604957991967636],[-0.05548567860964205,-0.2116252193810761,-0.9757746184396984],[-0.11049218438519351,-0.2186721493007124,-0.9695225465712468],[-0.11499802070042463,-0.21981568864727302,-0.9687396545303129],[-0.09436855918306318,-0.3703589789771051,-0.9240826812189205],[-0.09338628669543088,-0.3734124630286969,-0.9229529424147696],[-0.09303387473581172,-0.37587376743536866,-0.9219889419649152],[-0.09374276916139505,-0.3994554719521441,-0.9119471580949432],[-0.09408291705105246,-0.4010645796056292,-0.9112055792766662],[-0.09463748604154086,-0.4205945624799011,-0.9022992631317384],[-0.09527000147423438,-0.4236541263857526,-0.9008000932590007],[-0.09336871074118096,-0.43625692519329307,-0.8949649038232859],[-0.09366075026956436,-0.4471522334629464,-0.8895406364905658],[-0.09127352479952196,-0.4625364579245976,-0.881889544535617],[-0.09277714069315583,-0.46964730230889806,-0.87796572461502],[-0.09311389067327426,-0.48299463601707743,-0.8706583629314179],[-0.0780066474051783,-0.574792985770809,-0.8145722720970086],[-0.025352084377264127,-0.6197967244177275,-0.7843527855619459],[-0.0212869033209638,-0.6188572663984693,-0.7852149715669067],[-0.01715902713058719,-0.5403040502326553,-0.8412948954380505],[-0.01715902713058719,-0.5403040502326553,-0.8412948954380505],[-0.0212869033209638,-0.6188572663984693,-0.7852149715669067],[0.04492226466792506,-0.6090308706285484,-0.791873341361191],[0.05205496420131856,-0.6085765001049651,-0.7917859080723721],[0.053561233716165016,-0.6085508620613411,-0.7917051487310166],[0.058444083769797005,-0.6082262414602038,-0.7916092017349868],[0.0694814396981351,-0.6079916994386134,-0.7908972265416166],[0.07454253088571337,-0.6081188836189261,-0.7903384303418527],[0.1330118363903071,-0.5217301939493846,-0.8426775516777552],[0.1435511492939139,-0.49762159532597233,-0.8554331156797886],[0.14781305272753323,-0.475991111947185,-0.86693930744352],[0.14420994929448963,-0.4724904200750311,-0.8694574707608197],[0.13718556065871687,-0.4610436250124399,-0.8767091295191025],[0.1309083649199329,-0.4557902188341585,-0.8804080170063763],[0.11825652035352828,-0.45129207374523816,-0.8845059974746345],[0.10743427889881207,-0.4376958412223205,-0.8926814808733166],[0.08709141296489338,-0.4427881702485249,-0.8923865317650989],[0.07763388819963643,-0.4558719873065725,-0.8866530948415862],[0.074888745387138,-0.4561492877285453,-0.886746583370402],[0.0720006814855349,-0.45543181858580745,-0.887354360154523],[0.05360574452451749,-0.4573703736026469,-0.8876591493949394],[0.03325399962571171,-0.4518503761212115,-0.8914737287817365],[0.029488249740355535,-0.4494464294465589,-0.8928204467780686],[0.04662356092510436,-0.42824540693687174,-0.9024589270455118],[0.04513989854521171,-0.4088319559918875,-0.911492633716354],[0.02357849260015402,-0.3873348704930762,-0.9216375387248592],[0.030470403769115577,-0.3832282144329355,-0.9231509574044167],[0.031177290218422388,-0.38243681038611177,-0.9234555011673998],[0.03402323913284984,-0.375655930215061,-0.9261344617781838],[0.05506393753614305,-0.3545224335082469,-0.933424773038731],[0.07190441128800593,-0.36912035709478674,-0.9265958761054047],[0.07323545353857125,-0.36912864780126325,-0.9264883214144747],[0.0850126719270476,-0.3778097524730389,-0.9219721452126878],[0.08527638664675236,-0.37920449147172774,-0.9213750004901056],[0.07943250601023498,-0.39565162727291847,-0.9149591612882105],[0.0807338686807254,-0.40259490559551964,-0.9118110464544604],[0.07859229638779933,-0.40959162101726604,-0.9088773046682047],[0.0790693072744337,-0.4122595735575078,-0.9076288275816955],],
[[0.23507463840901305,0.44120277406743186,-0.8660716058918423],[0.21660917895519954,0.3832968817094969,-0.8978663397544928],[0.17123267696710412,0.32232294566306235,-0.9310141186028094],[0.2526533618621834,0.28141986099325367,-0.9257262773510724],[0.254902081915798,0.28050396259586724,-0.9253877325764635],[0.27439896268522707,0.2744642976016904,-0.9216151900979509],[0.27729579119924075,0.27385348537104603,-0.9209295916264812],[0.2992122011322872,0.27140393442480826,-0.914774268916822],[0.3239231007647177,0.2711887287942994,-0.9063831960963875],[0.3384143966709758,0.26943196406624154,-0.9015997520325896],[0.34925563269855175,0.2669036479981628,-0.8982109694908025],[0.3509857276770148,0.2666905551567359,-0.8975996695393934],[0.35984950400568794,0.26655252234793003,-0.8941242012700567],[0.3863421528461824,0.263161361394828,-0.8840168769899124],[0.40152978509981496,0.25951462880326165,-0.8783085956056685],[0.4206782911982256,0.2527928322669099,-0.8712781182085403],[0.4285146466599087,0.249187871222286,-0.8684932944091388],[0.4548754346244086,0.23403713426750597,-0.8592525581917745],[0.5431310340916146,0.27662471963036256,-0.792772000196776],[0.5597575901933427,0.28859832802690527,-0.776776959803145],[0.5646220343968059,0.29273653395729476,-0.7716911817302838],[0.5799337291699804,0.30800175490373555,-0.7541961208778649],[0.5689516971452393,0.32363318060958757,-0.7560129170352012],[0.5472565840626192,0.34867343917301064,-0.7608791389014279],[0.5152905414727706,0.39319065710970846,-0.761496398566884],[0.5123512454144487,0.39867636642548326,-0.7606269494147819],[0.4907733599524035,0.4461633219433278,-0.7483847936145704],[0.4834184514558375,0.47588100318719045,-0.7347406832329304],[0.47790945476587676,0.4906853975461447,-0.7285810824337704],[0.4641904767664059,0.5183084886198176,-0.7182503128464459],[0.45359459170741495,0.5355376845991896,-0.7123561853089524],[0.43699097378444207,0.5553999329950481,-0.7075095782107981],[0.42139771259560105,0.5716955825755544,-0.7039802047520888],[0.41745484806871985,0.5762113024645741,-0.7026464151591477],[0.3671802531644939,0.626675199437643,-0.6873549709544906],[0.3542043763766613,0.6411103750633304,-0.6808206421237362],[0.35103458719103253,0.6415769420955156,-0.6820218075450293],[0.3224073197972285,0.6435406037013849,-0.6941966663192967],[0.3158414603954829,0.6446283412992138,-0.6962028967830234],[0.2766725052615725,0.5866372895776629,-0.7611235217159292],[0.25423827548937034,0.5590393653108091,-0.7892007902359695],[0.23591112056898184,0.5206775162978139,-0.820512563714796],[0.23508205226302872,0.517981665981631,-0.8224545108458564],[0.23359686861673082,0.508420801996338,-0.8288189133157245],[0.23337618433762372,0.4853735243864677,-0.8425841788264663],[0.23438938688978786,0.477858451835662,-0.8465889884251117],[0.23411540927537317,0.4591521730147773,-0.8569534743238005],[0.23521801547793167,0.4505415439964507,-0.8612112414082377],[0.23507463840901305,0.44120277406743186,-0.8660716058918423],],
[[0.0904851292623209,0.21512802006803863,-0.9723848910611408],[0.0960087696198793,0.2454031146036159,-0.9646551858041927],[0.11652365805842292,0.3072770435536895,-0.9444591339055322],[0.11574021523978326,0.30786477271144647,-0.9443640634308244],[0.10847979928632032,0.313980277816123,-0.9432118098758677],[0.10740686120231265,0.3149965254664109,-0.9429957344075083],[0.07740530351778624,0.3467838083015398,-0.9347456388168924],[0.07609245602706118,0.34781032728718675,-0.9344719976372485],[0.027550527628336534,0.3799624811054376,-0.9245915213647594],[-0.07975961260821142,0.43429716179253763,-0.8972315082828592],[-0.08212557969214827,0.4360177881441443,-0.8961829487231481],[-0.10954617966590299,0.45974780146166416,-0.8812670387412501],[-0.11812042839795277,0.4682934050836075,-0.8756419651605812],[-0.13852649030910397,0.48348735488388367,-0.8643207675105506],[-0.15174384599459145,0.4945760404655684,-0.855785221536438],[-0.1558891429925627,0.4911806972132633,-0.8569948061582037],[-0.1738760710097765,0.4747307396117669,-0.8627849307897466],[-0.1747883449993842,0.47379071719174337,-0.8631172520320225],[-0.18824025142235293,0.46267065663093954,-0.8663148799582889],[-0.22076251387817794,0.42780219600694563,-0.8764982564488205],[-0.30250572587218094,0.29955511022702447,-0.904851933606499],[-0.30522538349070744,0.29581193842939635,-0.9051700184802818],[-0.3372029496398808,0.2630715726506911,-0.9039289343843665],[-0.3330866037486402,0.25833365767086486,-0.9068169802763889],[-0.311562550017962,0.24007262722224598,-0.9193986681983576],[-0.2926131103984106,0.21725872142136127,-0.9312229677093037],[-0.23733991417505249,0.11465423945285738,-0.9646368075679393],[-0.2275585802241036,0.10079287206209926,-0.9685338866079306],[-0.2217304318489444,0.09415296594214967,-0.9705518196347772],[-0.22048313665189936,0.09489424558153692,-0.9707637553017989],[-0.19248415172353808,0.11549325530604306,-0.9744799430024628],[-0.15616587836332754,0.1355471393304072,-0.978386013521429],[-0.15139198571792756,0.13722304309162062,-0.9789026014395192],[-0.13208644748729945,0.14052053239862905,-0.9812273693515641],[-0.10760685414511313,0.14013297535379274,-0.984268009314275],[-0.10132834608525836,0.13883714436284156,-0.9851176648628314],[-0.08637638165531925,0.13857966033835695,-0.9865773149797437],[-0.07318964177796683,0.14074518356569427,-0.9873368572272951],[-0.07169925201980827,0.14071743377199483,-0.9874501613207749],[-0.06745828591475152,0.1398822650139748,-0.9878675678429796],[-0.0480376540546163,0.13951227921787035,-0.9890544513525855],[-0.030502803556068176,0.14227877847322742,-0.9893565222766696],[-0.021978271673238615,0.14516122306328727,-0.989163876662016],[0.02574270994984409,0.17095906566120533,-0.9849417803873922],[0.08363953996215218,0.21170617084860305,-0.9737478752631719],[0.0904851292623209,0.21512802006803863,-0.9723848910611408],],
[[0.6493262386118434,-0.5187638531388352,-0.5561110505346434],[0.672453379105954,-0.5214801699221411,-0.5252284125092235],[0.7046987114153189,-0.5328282119808273,-0.468501678382163],[0.7140127622496165,-0.5210443922735799,-0.4676521320649876],[0.7249376466412086,-0.5075195249134782,-0.46571379656813233],[0.7368538497417007,-0.491737543367129,-0.46394028986939273],[0.7409575210958577,-0.48565037234428066,-0.46381641602399454],[0.7721189443150323,-0.4319250138178932,-0.466125646439083],[0.8107176017506204,-0.35215619668606557,-0.4676782904383393],[0.8246777557837107,-0.32275022932220404,-0.46447700544591786],[0.8374571868954348,-0.296322720866773,-0.45919310231676763],[0.8494783994620511,-0.2718293120778608,-0.4522115367200058],[0.8524886866158555,-0.2661748983397318,-0.44990439282786215],[0.8549582989904171,-0.26173510636171576,-0.4478180892787093],[0.8567021319059293,-0.25840267277794443,-0.4464185433973936],[0.856980802554498,-0.24945862575294342,-0.450948221074772],[0.8581131009399834,-0.22217013255910836,-0.4629064032759045],[0.8263012106575636,-0.18942312248435494,-0.530419824228056],[0.7988950002901999,-0.17216087554964837,-0.5763049639221409],[0.7944734602942433,-0.17083988820356558,-0.5827741015922764],[0.7682822419693341,-0.16678200217330058,-0.6180017479147116],[0.7515745039520666,-0.16865282474926419,-0.6377240702006621],[0.7467315860299912,-0.1679276205071088,-0.6435776974817837],[0.7253287586130114,-0.1617666935872413,-0.6691260933297696],[0.7095198216026218,-0.15515573185208695,-0.6873924073092653],[0.703883811701856,-0.16710745247960423,-0.6903786489672483],[0.682923051824884,-0.1995651669462492,-0.7027018211360369],[0.6755986279863037,-0.2130216613499715,-0.7058245289437894],[0.6553255326733238,-0.24198984014930483,-0.7155343202746731],[0.6529488887247181,-0.24664059684481837,-0.716118820239482],[0.6478004317013006,-0.2615476122972128,-0.7155050294646681],[0.643708050012884,-0.28527560360295545,-0.710111101404266],[0.6438347997822235,-0.29211549713050755,-0.7072095070950197],[0.6426313578023978,-0.2988286978698172,-0.7054972340827964],[0.6426865532417209,-0.3044995792570894,-0.7030177810799186],[0.6407357838425175,-0.31498429339250883,-0.7001732287225333],[0.6407659787044709,-0.323866740517583,-0.696081385271448],[0.6400816319002924,-0.32741428622636787,-0.6950506382118764],[0.628610057263748,-0.3561138699923815,-0.6913988049641949],[0.6189624904594372,-0.3723974832944288,-0.6915240775563978],[0.6008539940472793,-0.39565110733738373,-0.6945751788684463],[0.59691471202168,-0.39983822710853056,-0.695573302186608],[0.5655421736158873,-0.4381763189275135,-0.6986870282128842],[0.5887276080198186,-0.5079099450832498,-0.6288300972765164],[0.595187238282228,-0.5206078703953021,-0.6121434445196997],[0.6222318144446416,-0.5190234710564816,-0.5860394232348289],[0.6493262386118434,-0.5187638531388352,-0.5561110505346434],],
[[0.5096288861391739,0.7140177021917664,-0.48005949565583544],[0.4895959375735979,0.7029986295812831,-0.5158379054686344],[0.3542043763766613,0.6411103750633304,-0.6808206421237362],[0.3671802531644939,0.626675199437643,-0.6873549709544906],[0.41745484806871985,0.5762113024645741,-0.7026464151591477],[0.42139771259560105,0.5716955825755544,-0.7039802047520888],[0.43699097378444207,0.5553999329950481,-0.7075095782107981],[0.45359459170741495,0.5355376845991896,-0.7123561853089524],[0.4641904767664059,0.5183084886198176,-0.7182503128464459],[0.47790945476587676,0.4906853975461447,-0.7285810824337704],[0.4834184514558375,0.47588100318719045,-0.7347406832329304],[0.4907733599524035,0.4461633219433278,-0.7483847936145704],[0.5123512454144487,0.39867636642548326,-0.7606269494147819],[0.5152905414727706,0.39319065710970846,-0.761496398566884],[0.5472565840626192,0.34867343917301064,-0.7608791389014279],[0.5689516971452393,0.32363318060958757,-0.7560129170352012],[0.5799337291699804,0.30800175490373555,-0.7541961208778649],[0.5918092328883311,0.3057459314573271,-0.7458426491327891],[0.616331314900875,0.30408270116520497,-0.7264085772653234],[0.6338386609375648,0.29932821495659256,-0.7131978488692845],[0.6530476040078619,0.29522111315397265,-0.6974047040619387],[0.6561056642348264,0.2992139900248896,-0.6928176856376883],[0.6602004725987605,0.30769843784443685,-0.6851693274866197],[0.6823207023000479,0.3414986838302335,-0.6463877382461612],[0.6844180812729668,0.3456292427891393,-0.6419597468343611],[0.7125844198811204,0.42319505787506845,-0.5595796525364416],[0.7223377191622644,0.4451686057137522,-0.5292004648168136],[0.7280666778716931,0.4556236730563645,-0.5121776851088922],[0.7290849937366212,0.4568431830662731,-0.5096365155617745],[0.7344950328593487,0.462080320877276,-0.49698976223147495],[0.7450099354016602,0.4777291263928627,-0.4655481478308408],[0.7524984767217769,0.49492058122832544,-0.4345108293334264],[0.7543259835312437,0.4979580092985038,-0.4278202093696524],[0.7548830575786958,0.4992892968614338,-0.4252784586835483],[0.6891386270346155,0.6055330009694735,-0.3980172577486418],[0.6566930474169408,0.6497971405643264,-0.38277658965599876],[0.6418862231701475,0.6677934825877886,-0.37687390612463023],[0.6175065895770869,0.6947527445469924,-0.3687875211735026],[0.5899695113361823,0.7229479229759681,-0.3595584463734375],[0.5665049557026143,0.7452977554857927,-0.3515727390344971],[0.5552557467441733,0.7394237409434128,-0.38071457423747146],[0.5425819882835803,0.7342061718761663,-0.40810057972169317],[0.523631395684988,0.7213813687624865,-0.45323181955303293],[0.5167596953446232,0.7172297029030894,-0.46748365804686537],[0.5096288861391739,0.7140177021917664,-0.48005949565583544],],
[[-0.8882471829538021,0.03643338870462795,-0.4579187156713867],[-0.8876198175820205,0.05391398565906565,-0.457410473848178],[-0.8873416899029787,0.057819415494415556,-0.4574731036378098],[-0.8871177038943697,0.06277994250849817,-0.457253603874055],[-0.8860527412104803,0.0892041196266313,-0.4549210534093048],[-0.8828713243416445,0.12510181261978656,-0.45264529284471144],[-0.8736739722955889,0.21693385897445355,-0.43546927671616364],[-0.9081313832627442,0.3549602967597769,-0.2220373357287148],[-0.9094754170972295,0.3777623250494716,-0.17363781693236643],[-0.9646492176266844,0.11959528847005169,-0.23483793115250928],[-0.9657489173234083,0.0865689610905293,-0.24461161800775355],[-0.9657489173234083,0.0865689610905293,-0.24461161800775355],[-0.9646492176266844,0.11959528847005169,-0.23483793115250928],[-0.9094754170972295,0.3777623250494716,-0.17363781693236643],[-0.9094619582210671,0.37820208721982884,-0.1727487417356983],[-0.9090557995176286,0.3848154941927682,-0.15979545923630242],[-0.9081942048056347,0.395393904826352,-0.1372841811121395],[-0.9105374746565836,0.39269298674268877,-0.12928157412840363],[-0.91218655393911,0.3905690707836069,-0.12398182027991518],[-0.9194215392766327,0.3808123240687772,-0.09821408733742808],[-0.9194370012731409,0.38078950772700443,-0.09815778876319578],[-0.9213341970200694,0.378076740958629,-0.09056089303604448],[-0.932019728992741,0.3604002150014132,-0.03809080985267772],[-0.92077627627013,0.2366458968786854,0.31011250950033564],[-0.9215786622252283,0.2353308756856799,0.3087266562513992],[-0.9383194681429299,0.20580825018929486,0.277848051744096],[-0.9595769926030853,0.15912670498206374,0.23214367755415954],[-0.9876893060172042,0.05586996683888637,0.14611085375383817],[-0.9934124310939644,0.0034798540126812125,0.11454096369434814],[-0.9820666491042481,-0.18379501379071336,0.04200582843874323],[-0.9721659651513639,-0.23257730067738142,0.02830433555022965],[-0.9572326987968415,-0.2890597748293811,0.012247731614586095],[-0.9519225495152244,-0.30625630618106453,0.0071087726623703445],[-0.9480114301884496,-0.31556165884420917,-0.04117241430304295],[-0.949091191322674,-0.3094594650844668,-0.05882813972363109],[-0.9519863445920073,-0.286711643004795,-0.10732396505831829],[-0.9530638198052683,-0.2674406206022888,-0.1419326242625482],[-0.9524983338138991,-0.2513412096619039,-0.17197244083700405],[-0.9414664862458105,-0.20628465493632384,-0.26662238543259825],[-0.8839443070831217,-0.09885178218767515,-0.4570238365049031],[-0.8875425608991716,0.0030368279945448017,-0.46071572609177547],[-0.8882480446047646,0.031657626373438025,-0.4582719781398509],[-0.8882471829538021,0.03643338870462795,-0.4579187156713867],],
[[-0.3861866565554082,-0.7140442578237389,-0.5839526215092291],[-0.3882726159837803,-0.7128648480422182,-0.5840103458868321],[-0.4258373336447426,-0.6890506180650862,-0.5864058415623594],[-0.4292407344588133,-0.6906434406016938,-0.5820343888767341],[-0.4307711058383551,-0.6912219947290779,-0.5802141056347695],[-0.4591754799379533,-0.6973558713516752,-0.5503205132603147],[-0.5149665780059767,-0.703108899600367,-0.49035425851069697],[-0.5465237820691355,-0.7076613210355334,-0.4478026466459212],[-0.5622215048197308,-0.7122288583156088,-0.4202820872945717],[-0.5745836767789031,-0.7181895615582673,-0.39250140388026744],[-0.58761297351197,-0.7227188957445039,-0.36385215554434486],[-0.6044568257341414,-0.731437517345537,-0.3156439513800369],[-0.6284747731406818,-0.7359245905391962,-0.2518619791979032],[-0.6251208263590479,-0.740671390683075,-0.2462312804575832],[-0.6241755178613818,-0.7421085190921373,-0.2442946352119725],[-0.6064762719430071,-0.766190027906559,-0.2124602850103002],[-0.5985995687041944,-0.775711051809062,-0.19987726346043255],[-0.5072062375782919,-0.8333052063793197,-0.21987329438290812],[-0.4694894275449665,-0.8535225155707191,-0.2260066212245366],[-0.44052437788427956,-0.8675999971214682,-0.23066971514374582],[-0.4070717116297107,-0.88148885286757,-0.23931156232216033],[-0.3592165226941206,-0.8981002320962443,-0.25373108389043814],[-0.37792369245533386,-0.8697087906251753,-0.3174591346775541],[-0.4062003195394379,-0.827487084381266,-0.38764213598143615],[-0.4062003195394379,-0.827487084381266,-0.38764213598143615],[-0.37792369245533386,-0.8697087906251753,-0.3174591346775541],[-0.3592165226941206,-0.8981002320962443,-0.25373108389043814],[-0.3383460207972459,-0.9051990911877034,-0.2571703239559841],[-0.3166064146948215,-0.9124408386522608,-0.25925295395356635],[-0.31451283576916567,-0.9131653937083414,-0.25925014921871875],[-0.2972540894826064,-0.9191934027547146,-0.25830891316033916],[-0.1780259848053536,-0.9548032812379035,-0.23802823965113262],[-0.16297844937016193,-0.9487651325693975,-0.27070786516366924],[-0.15485295341533017,-0.9437114699426092,-0.29228278142461495],[-0.19552319631071632,-0.8698945133399826,-0.45282912380437296],[-0.2001333164168402,-0.8497472298747385,-0.4877256410936433],[-0.20173618562846912,-0.8459608727093874,-0.4936119055015262],[-0.20452003197167343,-0.8326719326427503,-0.5146153992170199],[-0.20451734019183446,-0.8319344550117196,-0.5158078325551201],[-0.20529039910408708,-0.8241211419918101,-0.5279016909972913],[-0.20678630368042103,-0.8189744766699564,-0.535275845871416],[-0.21000804003518622,-0.8104641294607274,-0.5468496301343222],[-0.21387632428026188,-0.7964402549943836,-0.5656322463728934],[-0.21609033396991814,-0.7902164866993495,-0.5734656674233483],[-0.22437958005840763,-0.7861101868395507,-0.5759206353308582],[-0.27168072040959834,-0.76379741313795,-0.5854938922324446],[-0.3632199815692601,-0.7256826475123639,-0.5843423141346796],[-0.3861866565554082,-0.7140442578237389,-0.5839526215092291],],
[[0.0767681335299118,-0.3383297248803424,0.9378910656023575],[0.06560784659952971,-0.3576895339640989,0.9315330416883334],[0.06351605867998848,-0.37016605573013545,0.9267916710215702],[0.06265079144872951,-0.37446625896544794,0.9251215591625082],[0.06231584288041765,-0.3758718977311377,0.9245739841797932],[0.06264945570159822,-0.3760093868774653,0.9244955309141988],[0.10054152571432874,-0.3880631614098772,0.9161322963216648],[0.1288043849585641,-0.3831556061851451,0.9146590686503578],[0.1306055937572905,-0.3823323413436693,0.9147481400046538],[0.13544690177443425,-0.38007416701781693,0.9149851170185335],[0.14227923477395962,-0.3768658500441613,0.9152752320600773],[0.12680396831531496,-0.3619110141357395,0.9235481424737583],[0.11738254724289902,-0.3515424459995956,0.9287837456929304],[0.11568312380319858,-0.3489960188403086,0.9299565547383107],[0.11568312380319858,-0.3489960188403086,0.9299565547383107],[0.11738254724289902,-0.3515424459995956,0.9287837456929304],[0.12680396831531496,-0.3619110141357395,0.9235481424737583],[0.14227923477395962,-0.3768658500441613,0.9152752320600773],[0.15965934808110607,-0.36789166091859676,0.9160592875992648],[0.1595243752888613,-0.3628489870929044,0.9180918179868242],[0.14451968809029642,-0.32338671457208623,0.9351658102136517],[0.14429127305861397,-0.32272401041989,0.9354299768649854],[0.14081611980716835,-0.3219500084361654,0.9362259409300762],[0.12314235030833082,-0.31653767056750187,0.9405529568675227],[0.10232390417891664,-0.31854164558248876,0.9423699054316114],[0.09802393741311666,-0.32283859665872355,0.9413641953045885],[0.09525276440926264,-0.3253010535569418,0.9408007947632364],[0.09041116874552745,-0.32911009747008424,0.9399533841150313],[0.0767681335299118,-0.3383297248803424,0.9378910656023575],],
[[0.8826842079330034,-0.14552175519211508,-0.446869117115395],[0.8781877489792185,-0.16179295029872945,-0.45012144891845135],[0.8581131009399834,-0.22217013255910836,-0.4629064032759045],[0.856980802554498,-0.24945862575294342,-0.450948221074772],[0.8567021319059293,-0.25840267277794443,-0.4464185433973936],[0.8834240025427151,-0.27567520448707805,-0.3789000044370765],[0.8961002346923435,-0.27638933433024876,-0.34729426320169626],[0.9082571379588221,-0.2750820451400849,-0.3152758154194473],[0.9108218495905718,-0.274378595720734,-0.3084152144734886],[0.9187698259664969,-0.2732615205504175,-0.2849388500713212],[0.9271429359743661,-0.27330950684786115,-0.25633550230003516],[0.9392461728039737,-0.2856841142481383,-0.19026616551385211],[0.9485466148015979,-0.3066285326945401,-0.0789826720618053],[0.948614236523247,-0.30686997670425403,-0.07721300190348708],[0.9568764586749681,-0.28854226518009335,-0.03362742985113418],[0.9706485778812591,-0.23906592394427623,-0.02624542371079113],[0.9878258655837376,-0.1552344831276025,-0.010115064599183229],[0.9971802976335373,-0.07354833433269271,0.014902903353923592],[0.9978352092916369,-0.06269617452818768,0.01985156914317461],[0.9986726996187812,-0.04154446318751762,0.030444976836854425],[0.9988656806368094,-0.015061457753323975,0.04517194412806052],[0.9991865630766821,0.03337568967193172,-0.022633504057717323],[0.9954027128551984,0.0651417780361298,-0.07021387323601555],[0.9928916454732187,0.07757373127597907,-0.09026902328820469],[0.958847936537416,0.16282639737930743,-0.23259019522416527],[0.9452866684795307,0.1884413987425199,-0.2663136377184474],[0.9431978378804629,0.17863208468390254,-0.28012214646311556],[0.9427146598229246,0.17688495797132794,-0.28284409450866965],[0.942475233443933,0.1758362925789935,-0.28429216056176904],[0.9371835652163094,0.15658749659714974,-0.31171673198255695],[0.9240704044238612,0.12062127462077167,-0.36269049584567564],[0.9154475961718547,0.10207298074468082,-0.38927728583243737],[0.9056165488302773,0.0373535176896351,-0.42244926464718585],[0.9024388688514866,0.017210033225944988,-0.430474044214528],[0.8990670547310123,-0.0060716978513900306,-0.43776884948852224],[0.8971418057593138,-0.03147322593352313,-0.44062003632183494],[0.8944376139118629,-0.07141680257282021,-0.4414532762704656],[0.8936548379350188,-0.08554420028133856,-0.4405260723652592],[0.8933845791796045,-0.08857198070399035,-0.44047587665870325],[0.8928801361730329,-0.09276397967078386,-0.44063579802742386],[0.891812094299053,-0.09976746862168119,-0.4412682185097394],[0.8826842079330034,-0.14552175519211508,-0.446869117115395],],
[[0.3383605576239497,-0.028831119370839927,-0.940574770871638],[0.3605431479231218,-0.02679407064508906,-0.9323576117906434],[0.3733108393609699,-0.027695197972178908,-0.9272928303534381],[0.3786214696894932,-0.02721201638299996,-0.9251514950831241],[0.41423843855233344,-0.01806467701875678,-0.9099891117315266],[0.45125740596291164,-0.0026455610966084333,-0.892389911737077],[0.4524858280787658,0.009729108351034908,-0.8917185205201065],[0.4525811782902994,0.04749585227990243,-0.8904574223810872],[0.4540722079513652,0.05547741551378565,-0.8892360127289509],[0.4559960218283498,0.07755232028273532,-0.8865964503061601],[0.45594166081660514,0.08293157692348713,-0.8861374360000708],[0.45426805355469413,0.09888524410504536,-0.8853599516681987],[0.4551609197639306,0.11058495756835113,-0.8835154239056944],[0.4550192191713914,0.11820103971044314,-0.8826018493046723],[0.45346968362392476,0.13193124729827216,-0.8814530004602286],[0.4533925954924861,0.13528043257475772,-0.8809848800717146],[0.45076469113915607,0.1574882880983179,-0.8786402177991186],[0.4548754346244086,0.23403713426750597,-0.8592525581917745],[0.4285146466599087,0.249187871222286,-0.8684932944091388],[0.4206782911982256,0.2527928322669099,-0.8712781182085403],[0.40152978509981496,0.25951462880326165,-0.8783085956056685],[0.3863421528461824,0.263161361394828,-0.8840168769899124],[0.35984950400568794,0.26655252234793003,-0.8941242012700567],[0.3509857276770148,0.2666905551567359,-0.8975996695393934],[0.34925563269855175,0.2669036479981628,-0.8982109694908025],[0.3384143966709758,0.26943196406624154,-0.9015997520325896],[0.3239231007647177,0.2711887287942994,-0.9063831960963875],[0.2992122011322872,0.27140393442480826,-0.914774268916822],[0.27729579119924075,0.27385348537104603,-0.9209295916264812],[0.27439896268522707,0.2744642976016904,-0.9216151900979509],[0.254902081915798,0.28050396259586724,-0.9253877325764635],[0.2526533618621834,0.28141986099325367,-0.9257262773510724],[0.17123267696710412,0.32232294566306235,-0.9310141186028094],[0.15115991977293136,0.3190222615977569,-0.9356150251354952],[0.14414257231323951,0.31740812412496605,-0.9372699726260266],[0.11652365805842292,0.3072770435536895,-0.9444591339055322],[0.0960087696198793,0.2454031146036159,-0.9646551858041927],[0.0904851292623209,0.21512802006803863,-0.9723848910611408],[0.08363953996215218,0.21170617084860305,-0.9737478752631719],[0.02574270994984409,0.17095906566120533,-0.9849417803873922],[0.012091979867739307,0.07613853417628884,-0.9970239253078957],[-0.0007691973900406613,0.06453266415146328,-0.9979152988069127],[-0.003602952350543933,0.05800693335085374,-0.9983096786156034],[0.1289304599445464,0.04851363356020054,-0.9904662355967893],[0.12842921945883326,0.027550132589278978,-0.9913359298358494],[-0.015655274196097625,0.03836551744315024,-0.999141130902519],[-0.012494617981500245,0.016918128700943034,-0.9997788062580417],[-0.016804227301140746,-0.01181075406884889,-0.999789039764458],[-0.038878645589838834,-0.02185711917729949,-0.9990048634808386],[-0.043394059178268725,-0.022478562391469836,-0.9988051210625853],[-0.043394059178268725,-0.022478562391469836,-0.9988051210625853],[-0.038878645589838834,-0.02185711917729949,-0.9990048634808386],[-0.016804227301140746,-0.01181075406884889,-0.999789039764458],[-0.012494617981500245,0.016918128700943034,-0.9997788062580417],[-0.015655274196097625,0.03836551744315024,-0.999141130902519],[0.12842921945883326,0.027550132589278978,-0.9913359298358494],[0.1289304599445464,0.04851363356020054,-0.9904662355967893],[-0.003602952350543933,0.05800693335085374,-0.9983096786156034],[-0.0007691973900406613,0.06453266415146328,-0.9979152988069127],[0.012091979867739307,0.07613853417628884,-0.9970239253078957],[0.02574270994984409,0.17095906566120533,-0.9849417803873922],[-0.021978271673238615,0.14516122306328727,-0.989163876662016],[-0.030502803556068176,0.14227877847322742,-0.9893565222766696],[-0.0480376540546163,0.13951227921787035,-0.9890544513525855],[-0.06745828591475152,0.1398822650139748,-0.9878675678429796],[-0.07169925201980827,0.14071743377199483,-0.9874501613207749],[-0.07318964177796683,0.14074518356569427,-0.9873368572272951],[-0.08637638165531925,0.13857966033835695,-0.9865773149797437],[-0.10132834608525836,0.13883714436284156,-0.9851176648628314],[-0.10760685414511313,0.14013297535379274,-0.984268009314275],[-0.13208644748729945,0.14052053239862905,-0.9812273693515641],[-0.15139198571792756,0.13722304309162062,-0.9789026014395192],[-0.15616587836332754,0.1355471393304072,-0.978386013521429],[-0.19248415172353808,0.11549325530604306,-0.9744799430024628],[-0.22048313665189936,0.09489424558153692,-0.9707637553017989],[-0.2217304318489444,0.09415296594214967,-0.9705518196347772],[-0.22445590438113222,0.0592101032676494,-0.9726837670381275],[-0.22243506309027855,0.04241191798523828,-0.9740245745980115],[-0.2247614795237004,0.00995473805128687,-0.9743629613817674],[-0.223485506223565,-0.00046208147150683204,-0.9747071431915899],[-0.22408471704696883,-0.009491534213703468,-0.9745234478268083],[-0.22398206740904164,-0.013021868830827945,-0.9745062669943813],[-0.22628254694385097,-0.04880998521292964,-0.9728380103039342],[-0.2219517922094786,-0.06261458704412586,-0.9730451250709261],[-0.2112755107451283,-0.11237149092422916,-0.9709455734421221],[-0.2033727321642444,-0.13730835119828713,-0.9694255765675147],[-0.1950335361342299,-0.15738008587973348,-0.9680875106887114],[-0.18985047731154395,-0.16581884604587138,-0.9677091022412647],[-0.1545359223853383,-0.21411743349620133,-0.9645062847724284],[-0.11499802070042463,-0.21981568864727302,-0.9687396545303129],[-0.11049218438519351,-0.2186721493007124,-0.9695225465712468],[-0.05548567860964205,-0.2116252193810761,-0.9757746184396984],[-0.018175756554353197,-0.2777003089646232,-0.9604957991967636],[0.00877999655958956,-0.30604085384509766,-0.9519778923053713],[0.028492942283968772,-0.3198573230468844,-0.9470371931097973],[0.03635563660496677,-0.3298863981312556,-0.9433203231220212],[0.043295047474514084,-0.3337803899949029,-0.9416560890893395],[0.05524731466149531,-0.35362922389838886,-0.9337527007873749],[0.07653298667941028,-0.34444489642034654,-0.935681791679151],[0.08067771888674068,-0.3375856664622131,-0.9378310207465392],[0.08965719342756165,-0.3318016164320859,-0.9390789503549464],[0.09195804281254712,-0.33237809428101317,-0.9386525026889386],[0.11203163867836166,-0.3302406231457003,-0.9372246490353211],[0.1308801568167811,-0.3349704650103458,-0.9330944068647972],[0.13631256234112907,-0.3382583865617537,-0.9311284279134834],[0.11686169110523927,-0.36329901876405907,-0.9243144314123282],[0.11819972496400019,-0.38589122358599376,-0.914940866164442],[0.12894572893979303,-0.3988512617640247,-0.9079045489353113],[0.13320202233823447,-0.4013025923857934,-0.9062082821236221],[0.1541956723863944,-0.3977366968259384,-0.9044496750042533],[0.1541956723863944,-0.3977366968259384,-0.9044496750042533],[0.13320202233823447,-0.4013025923857934,-0.9062082821236221],[0.12397586439825824,-0.4139445099915889,-0.9018203411403671],[0.1171888891190703,-0.417829486863319,-0.9009357824920564],[0.10762613911017713,-0.43482680006475904,-0.8940594320992754],[0.08934188784106388,-0.42535040468795227,-0.9006081613603055],[0.0881646572165299,-0.41985272796314416,-0.90329988378157],[0.0790693072744337,-0.4122595735575078,-0.9076288275816955],[0.07859229638779933,-0.40959162101726604,-0.9088773046682047],[0.0807338686807254,-0.40259490559551964,-0.9118110464544604],[0.07943250601023498,-0.39565162727291847,-0.9149591612882105],[0.08527638664675236,-0.37920449147172774,-0.9213750004901056],[0.0850126719270476,-0.3778097524730389,-0.9219721452126878],[0.07323545353857125,-0.36912864780126325,-0.9264883214144747],[0.07190441128800593,-0.36912035709478674,-0.9265958761054047],[0.05506393753614305,-0.3545224335082469,-0.933424773038731],[0.03402323913284984,-0.375655930215061,-0.9261344617781838],[0.031177290218422388,-0.38243681038611177,-0.9234555011673998],[0.030470403769115577,-0.3832282144329355,-0.9231509574044167],[0.02357849260015402,-0.3873348704930762,-0.9216375387248592],[0.04513989854521171,-0.4088319559918875,-0.911492633716354],[0.04662356092510436,-0.42824540693687174,-0.9024589270455118],[0.029488249740355535,-0.4494464294465589,-0.8928204467780686],[0.03325399962571171,-0.4518503761212115,-0.8914737287817365],[0.05360574452451749,-0.4573703736026469,-0.8876591493949394],[0.0720006814855349,-0.45543181858580745,-0.887354360154523],[0.074888745387138,-0.4561492877285453,-0.886746583370402],[0.07763388819963643,-0.4558719873065725,-0.8866530948415862],[0.08709141296489338,-0.4427881702485249,-0.8923865317650989],[0.10743427889881207,-0.4376958412223205,-0.8926814808733166],[0.11825652035352828,-0.45129207374523816,-0.8845059974746345],[0.1309083649199329,-0.4557902188341585,-0.8804080170063763],[0.13718556065871687,-0.4610436250124399,-0.8767091295191025],[0.14420994929448963,-0.4724904200750311,-0.8694574707608197],[0.14781305272753323,-0.475991111947185,-0.86693930744352],[0.1435511492939139,-0.49762159532597233,-0.8554331156797886],[0.1330118363903071,-0.5217301939493846,-0.8426775516777552],[0.07454253088571337,-0.6081188836189261,-0.7903384303418527],[0.08136186455531684,-0.6103060649477485,-0.7879763664502109],[0.11157364889161087,-0.6180161235521454,-0.7782078076597478],[0.1664381420793607,-0.6246670690413197,-0.7629478342039497],[0.1682205144089665,-0.6245501230923617,-0.7626526091722879],[0.2092326649914102,-0.6239238836494442,-0.7529546329709297],[0.21730886242893463,-0.6242050299729393,-0.7504298360715175],[0.2409784130521891,-0.6035557333208866,-0.7600328158825351],[0.2501841669063248,-0.5940848344278592,-0.7645070909626748],[0.2627512538233011,-0.5846175626944763,-0.7675832749633443],[0.2938655736318153,-0.5646590421335721,-0.7712348480008155],[0.29628855054056547,-0.5634355038761648,-0.7712026502744809],[0.30609144529695465,-0.5597719722676434,-0.7700411457705454],[0.3308052241095972,-0.5354573141811488,-0.77708002701891],[0.3549139653546459,-0.49735719901671444,-0.7916261073148672],[0.3693921344484219,-0.48170994184162114,-0.7946728779432332],[0.37825777621720225,-0.4743667486263078,-0.7949196453283328],[0.3888729921423952,-0.4630755215831027,-0.7964539266603926],[0.3957770113417018,-0.45391503779408016,-0.7983243048773032],[0.39962330579873634,-0.4496733546848727,-0.7988085424862096],[0.4163568842717194,-0.43404553081759895,-0.7989063913230479],[0.4265791435631512,-0.42283613206515563,-0.7995247586517298],[0.4288324921021129,-0.4209352663737691,-0.7993223350065576],[0.42351080784381534,-0.39201872700283574,-0.8166761373510035],[0.4181801672648932,-0.33708816762793264,-0.8435027652305289],[0.41639630761838775,-0.3311399314136729,-0.8467351775054117],[0.38348989802909406,-0.3184317424675555,-0.8669121775005306],[0.3700155910572113,-0.31490230061839564,-0.874028033554888],[0.3599129061953285,-0.31345507697155606,-0.8787540126080726],[0.3581485360085297,-0.3134053421536049,-0.8794923067682451],[0.33009469643645617,-0.3157566373467398,-0.8895702543115993],[0.3263204308242332,-0.3156173082814945,-0.8910110499538325],[0.29194885795364905,-0.32867119681331,-0.8981876801230724],[0.2701685707590906,-0.33101105233912825,-0.904124231841694],[0.2655372858850648,-0.32707563627032377,-0.9069241853447048],[0.26328641107704687,-0.3244488331757771,-0.9085225480928061],[0.24646232132665097,-0.31031491967706376,-0.918129062165062],[0.2376104996970236,-0.2987334338756457,-0.9242832822888208],[0.21978161172120195,-0.2853718498960484,-0.9328767069855148],[0.20542289978058587,-0.28150889936546564,-0.9373122061638691],[0.18853293643693356,-0.28409149685391233,-0.9400783761441228],[0.18687412005565296,-0.2851206830383388,-0.940098005187319],[0.17493251570148752,-0.28694556141030586,-0.941839083780915],[0.1632296753139245,-0.28314033945140016,-0.9450860390844088],[0.1509099980852726,-0.28508552619828925,-0.9465476296680203],[0.1456479810522944,-0.2834285207090287,-0.9478686297499682],[0.13015867107137322,-0.2858699168466294,-0.9493877558653447],[0.10894234744254408,-0.27913252345158085,-0.954052723535372],[0.09360306722304812,-0.2673486182683582,-0.9590428468616182],[0.08592483361320738,-0.2575900327715705,-0.9624262558686166],[0.06789498216777831,-0.2423935281983286,-0.967799384626795],[0.06704147141014723,-0.2414154253480008,-0.9681033175829976],[0.01728205025441678,-0.19901976603559832,-0.9798430810421328],[0.01429992051005982,-0.19687590325828933,-0.9803241254756708],[0.004648756673741057,-0.1910607287832221,-0.981567209608294],[0.017589231649057947,-0.17786827799773733,-0.9838970955400343],[0.017621009780960248,-0.1778428484344314,-0.9839011237289178],[0.045340037306685683,-0.14946906818560002,-0.9877263176977502],[0.10245931969055691,-0.057038551382192264,-0.9931005444892119],[0.1331640047614018,-0.019098799415066346,-0.9909099775947402],[0.13711746043486947,-0.015051710541872066,-0.9904404313504451],[0.14777129937351594,-0.021260197441561265,-0.9887930254032988],[0.17306998859098313,-0.03287490398645696,-0.9843607162707168],[0.1982218621096572,-0.04123849200238355,-0.9792892729725725],[0.21543752344540706,-0.04267263187914528,-0.9755848092196889],[0.22254110933485935,-0.04236998270972379,-0.9740021761891439],[0.24635233035901968,-0.03313373879073566,-0.9686137954212855],[0.26093470611829267,-0.029703383728597044,-0.9648993668450778],[0.26895103152843913,-0.029024650472469955,-0.9627164236184712],[0.2982724380443829,-0.031046720044593808,-0.9539757092701746],[0.30449178452405984,-0.029497550123044315,-0.9520581115111053],[0.31923330409905926,-0.028184597069231328,-0.9472569482680202],[0.31889790854184613,0.07556217846700994,-0.9447721847688766],[0.2975808236665738,0.07268580703614755,-0.9519256414455004],[0.28694777640186325,0.07433130609924808,-0.9550580247040524],[0.2725189171948368,0.08098785070980319,-0.9587358383873842],[0.26628362281498213,0.09538579238795025,-0.959163480763864],[0.2653493858034938,0.10168589151023329,-0.9587750950673873],[0.2653493858034938,0.10168589151023329,-0.9587750950673873],[0.26628362281498213,0.09538579238795025,-0.959163480763864],[0.2725189171948368,0.08098785070980319,-0.9587358383873842],[0.28694777640186325,0.07433130609924808,-0.9550580247040524],[0.2975808236665738,0.07268580703614755,-0.9519256414455004],[0.31889790854184613,0.07556217846700994,-0.9447721847688766],[0.31923330409905926,-0.028184597069231328,-0.9472569482680202],[0.33623654553042853,-0.029368282106145054,-0.941319546942428],[0.3383605576239497,-0.028831119370839927,-0.940574770871638],],
[[-0.028245883372182198,0.8787829242090571,0.4763850776326895],[-0.03212608970340803,0.8931444416543216,0.44862113269702186],[-0.03264267869849754,0.8935417669380057,0.44779187829246464],[-0.03459511239751946,0.8943068355692805,0.44611485298324577],[-0.033152505204642004,0.8961109447871316,0.4425902010114668],[-0.03291470311525316,0.8973908739984288,0.4400070926509832],[-0.034263665707949066,0.9003625498863691,0.43378944198121006],[-0.03511582736709746,0.9010912308514439,0.4322053590030486],[-0.03511582736709746,0.9010912308514439,0.4322053590030486],[-0.034263665707949066,0.9003625498863691,0.43378944198121006],[-0.03291470311525316,0.8973908739984288,0.4400070926509832],[-0.033152505204642004,0.8961109447871316,0.4425902010114668],[-0.03459511239751946,0.8943068355692805,0.44611485298324577],[-0.03264267869849754,0.8935417669380057,0.44779187829246464],[-0.03212608970340803,0.8931444416543216,0.44862113269702186],[-0.028245883372182198,0.8787829242090571,0.4763850776326895],[-0.02824100832688167,0.8772943340332927,0.4791211714397125],[-0.03967403242506656,0.8925685068396237,0.449163034709246],[-0.04579355474223218,0.8821222128656224,0.4687892403982069],[-0.048415803390902,0.8606517554132085,0.5068870346400433],[-0.04984382890057238,0.8659542645843772,0.4976332026389125],[-0.04984382890057238,0.8659542645843772,0.4976332026389125],[-0.048415803390902,0.8606517554132085,0.5068870346400433],[-0.04154424625894387,0.7628552152793119,0.6452332881399806],[-0.1775506876995352,0.745829941744521,0.6420385123143211],[-0.302292612002252,0.7792974574032315,0.5489213510273714],[-0.35404146197288794,0.780850621021425,0.5147105505568691],[-0.37158983625147146,0.779647555719262,0.5040542455486163],[-0.3924025448921408,0.7772119850994127,0.4918960997812463],[-0.44709503863930417,0.7656964602785475,0.46240129448458706],[-0.44707151477496376,0.765879345540823,0.46212107585651196],[-0.44376517998941084,0.782328220669681,0.43707553142766614],[-0.4239686051424539,0.8344774266235511,0.35199154295138674],[-0.5443117497315683,0.8385997674529668,-0.02179791577166931],[-0.551751585298551,0.8327813852508532,-0.045225573519924886],[-0.5589465403977872,0.8264948111049133,-0.06697083091912819],[-0.5651356786260323,0.8206207821057594,-0.08487164850541008],[-0.5935193670001582,0.7887369662496965,-0.16008984685780925],[-0.6020303118455957,0.7760450284589057,-0.1879191779018609],[-0.5969964457212354,0.7767315141367298,-0.2007072463641391],[-0.5934309367901739,0.7772377495868338,-0.20914397882208105],[-0.5910589986654432,0.7776626849903052,-0.21421953335369118],[-0.5534493669120674,0.7827277151325623,-0.2846596603454561],[-0.4631946729771452,0.784147572052285,-0.4129930752084133],[-0.3974275752865091,0.8168251053136679,-0.4181483824328411],[-0.31790952712327686,0.850245305409983,-0.41954314818924077],[-0.28478152148722696,0.8611431452514995,-0.42110802462761854],[-0.1901464893389108,0.8835144795547843,-0.4280729809379777],[-0.12982517328738172,0.8964759070944538,-0.4236465181965712],[-0.12781154651609644,0.8968955899801684,-0.4233704161266934],[-0.1074757014431095,0.9015729421834681,-0.4190646770153227],[-0.0755528359953837,0.9087778149294088,-0.41038354263442856],[-0.0420696730197027,0.9159803563194449,-0.3990114402481691],[0.022513906597409976,0.9548799745072595,-0.29613739766321084],[0.049410272893418004,0.9667365454323674,-0.2509563242042131],[0.058769541438518744,0.9699415702947606,-0.2361344769686125],[0.09372632156291952,0.9791088858905831,-0.18044712859002646],[-0.01137505800023445,0.9814549676796339,-0.19135504820218377],[-0.16342445637888323,0.9694360756050128,-0.18299219210889447],[-0.16342445637888323,0.9694360756050128,-0.18299219210889447],[-0.01137505800023445,0.9814549676796339,-0.19135504820218377],[0.09372632156291952,0.9791088858905831,-0.18044712859002646],[0.1114777928866909,0.9817841246364224,-0.15385913786644537],[0.10462257075733614,0.9888975446206539,-0.10552612914045542],[0.062136658537344985,0.9868566723850726,0.14917420633231118],[0.23816861998620079,0.9225025371865052,0.3037511766863288],[0.2701354662338435,0.8999595184614204,0.342198327017115],[0.28451773554783183,0.887279998776755,0.36302047040002555],[0.30451802049612375,0.8666487499588676,0.395207185395021],[0.34114266092875684,0.8155547502619142,0.4674314219430205],[0.3263263276722622,0.8171570789661421,0.4751478045444991],[0.27415270348021803,0.8180739494999478,0.5055643463734805],[0.10723613518000116,0.772367766290913,0.6260578606697965],[0.02898156766117353,0.7530550555918273,0.657318911932017],[-0.008376650926360488,0.7600042529450016,0.6498641144306768],[-0.04154424625894387,0.7628552152793119,0.6452332881399806],[-0.048415803390902,0.8606517554132085,0.5068870346400433],[-0.04579355474223218,0.8821222128656224,0.4687892403982069],[-0.03967403242506656,0.8925685068396237,0.449163034709246],[-0.02824100832688167,0.8772943340332927,0.4791211714397125],[-0.028245883372182198,0.8787829242090571,0.4763850776326895],],
[[-0.15014029911370885,0.5211095779411268,-0.8401801582756325],[-0.15021630319825272,0.5251561518776554,-0.8376431688962213],[-0.14897466390843733,0.5518361627756788,-0.8205384811002971],[-0.1682350049041766,0.5638362161115907,-0.8085701605462914],[-0.19944173588957434,0.5803742345448597,-0.7895497082906318],[-0.2389764816358146,0.5941482384767914,-0.7680352283195694],[-0.3222842947493631,0.6138395328852589,-0.7206482229389821],[-0.3265327328659168,0.615101895992099,-0.7176531417851112],[-0.3360548948980729,0.6187202400064759,-0.7101072962738619],[-0.3598585890645895,0.6297428224326754,-0.6884226706544249],[-0.38610860559849136,0.6439078887934345,-0.6605321910644255],[-0.3890397081594011,0.6290838481500065,-0.672979656061034],[-0.40562106082086397,0.5605026972137748,-0.7220168152021396],[-0.42782352397939616,0.49619783590098027,-0.7554831169371258],[-0.42782352397939616,0.49619783590098027,-0.7554831169371258],[-0.40562106082086397,0.5605026972137748,-0.7220168152021396],[-0.3890397081594011,0.6290838481500065,-0.672979656061034],[-0.38610860559849136,0.6439078887934345,-0.6605321910644255],[-0.39808071098952846,0.6538405379549049,-0.6434471994382385],[-0.43556889586834613,0.6802169598429803,-0.5895630793172206],[-0.4390279235158273,0.682321924044458,-0.5845436462246852],[-0.4431904107858184,0.6845548892047321,-0.5787632188152548],[-0.46494876906389443,0.6922319147359297,-0.5519398684340515],[-0.513171273974459,0.6264651806591773,-0.5866827260019636],[-0.5488861941185754,0.5699670800126245,-0.6114421261312539],[-0.5645688086459115,0.53334930001429,-0.6299210938509705],[-0.5797038550248377,0.4912405005659147,-0.6500970781914741],[-0.5843523450874496,0.4756684708318016,-0.6574738341921555],[-0.6043421788402473,0.42052144674889647,-0.6767069112243776],[-0.6158587240691308,0.3928309692280396,-0.6829362061007611],[-0.6303600381583866,0.362140815590138,-0.6866587594844088],[-0.6352162147573029,0.3523399690863216,-0.6872822612970991],[-0.6545701235625744,0.3420256260987891,-0.674207997899022],[-0.6725493594352525,0.18839939824324373,-0.7156696345834545],[-0.6681209025538191,0.11519379753458005,-0.7350815251250928],[-0.6801323042900717,0.10041018250361457,-0.7261803108806162],[-0.6749381634820663,0.08306629935520937,-0.7331837869094533],[-0.6747513893461307,0.08040333172775187,-0.7336524155365015],[-0.6747513893461307,0.08040333172775187,-0.7336524155365015],[-0.6749381634820663,0.08306629935520937,-0.7331837869094533],[-0.6801323042900717,0.10041018250361457,-0.7261803108806162],[-0.6681209025538191,0.11519379753458005,-0.7350815251250928],[-0.6725493594352525,0.18839939824324373,-0.7156696345834545],[-0.6545701235625744,0.3420256260987891,-0.674207997899022],[-0.6970837759486306,0.3226350297727955,-0.6402974674889063],[-0.7060943886682096,0.3193410406090048,-0.632022162644654],[-0.7220778669171808,0.18474243915180694,-0.6666886719335908],[-0.7183649930952809,0.09805726906855022,-0.6887209222014642],[-0.7171467704429882,0.09604968718796547,-0.6902716619087633],[-0.7185632417289343,0.0915809768085951,-0.6894053904074066],[-0.7203822838124077,0.0776734469217796,-0.6892141908090034],[-0.7182028489573905,0.04808563631850279,-0.6941703244372613],[-0.7147977872915731,0.0460616562731624,-0.6978126160398967],[-0.7147977872915731,0.0460616562731624,-0.6978126160398967],[-0.7182028489573905,0.04808563631850279,-0.6941703244372613],[-0.7203822838124077,0.0776734469217796,-0.6892141908090034],[-0.7185632417289343,0.0915809768085951,-0.6894053904074066],[-0.7171467704429882,0.09604968718796547,-0.6902716619087633],[-0.7183649930952809,0.09805726906855022,-0.6887209222014642],[-0.7220778669171808,0.18474243915180694,-0.6666886719335908],[-0.7331851735205734,0.12257831402700187,-0.6688901690561049],[-0.7331851735205734,0.12257831402700187,-0.6688901690561049],[-0.7220778669171808,0.18474243915180694,-0.6666886719335908],[-0.7060943886682096,0.3193410406090048,-0.632022162644654],[-0.7079420968253081,0.3188656665316434,-0.630192569180181],[-0.761999527560057,0.30072282677798373,-0.5735176557464547],[-0.7687687950739175,0.29747111753666416,-0.5661320287283571],[-0.7906467465294731,0.2853186517580458,-0.5417296273615928],[-0.8736739722955889,0.21693385897445355,-0.43546927671616364],[-0.8828713243416445,0.12510181261978656,-0.45264529284471144],[-0.8860527412104803,0.0892041196266313,-0.4549210534093048],[-0.8871177038943697,0.06277994250849817,-0.457253603874055],[-0.8873416899029787,0.057819415494415556,-0.4574731036378098],[-0.8876198175820205,0.05391398565906565,-0.457410473848178],[-0.8882471829538021,0.03643338870462795,-0.4579187156713867],[-0.8882480446047646,0.031657626373438025,-0.4582719781398509],[-0.8875425608991716,0.0030368279945448017,-0.46071572609177547],[-0.8839443070831217,-0.09885178218767515,-0.4570238365049031],[-0.9414664862458105,-0.20628465493632384,-0.26662238543259825],[-0.9524983338138991,-0.2513412096619039,-0.17197244083700405],[-0.9530638198052683,-0.2674406206022888,-0.1419326242625482],[-0.9519863445920073,-0.286711643004795,-0.10732396505831829],[-0.9048286990511356,-0.32792512647599914,-0.2715697641475014],[-0.8379754707051373,-0.3558162849893297,-0.4137534070347887],[-0.8280996081787515,-0.37016990049074466,-0.4209813341525613],[-0.8264096116969849,-0.37360910024300537,-0.4212640429830804],[-0.8215785122321067,-0.3807389746582155,-0.42431896188444035],[-0.8174475495166693,-0.3792365207432229,-0.4335425759066433],[-0.814607501654481,-0.37976342968806603,-0.4383997670161356],[-0.814607501654481,-0.37976342968806603,-0.4383997670161356],[-0.8174475495166693,-0.3792365207432229,-0.4335425759066433],[-0.8215785122321067,-0.3807389746582155,-0.42431896188444035],[-0.8264096116969849,-0.37360910024300537,-0.4212640429830804],[-0.8280996081787515,-0.37016990049074466,-0.4209813341525613],[-0.8379754707051373,-0.3558162849893297,-0.4137534070347887],[-0.9048286990511356,-0.32792512647599914,-0.2715697641475014],[-0.9519863445920073,-0.286711643004795,-0.10732396505831829],[-0.949091191322674,-0.3094594650844668,-0.05882813972363109],[-0.9480114301884496,-0.31556165884420917,-0.04117241430304295],[-0.8777588436164605,-0.45693098374199254,-0.1440607113326501],[-0.84138637036843,-0.5080696954092941,-0.18421226985449746],[-0.7685685089974567,-0.5872413255895534,-0.2538701882798577],[-0.7333719404128062,-0.6205134467436667,-0.27772046994316113],[-0.7290121929955033,-0.6246785413608763,-0.27985343025793874],[-0.7289446955020618,-0.6135443457066769,-0.30364941421114605],[-0.7242942022027348,-0.5776114805467889,-0.37651412482940205],[-0.7158224999127504,-0.5563477781878324,-0.42198968983154445],[-0.7120629973272476,-0.5359637559055195,-0.45355169517154814],[-0.7120446995283345,-0.5357483228639728,-0.45383486029837367],[-0.7120579325225992,-0.5181540034411454,-0.47380368239340975],[-0.7132680895156829,-0.5024319094512154,-0.4886827282029248],[-0.7150459492263196,-0.49072952707409045,-0.49788936698093],[-0.7163429180008128,-0.48496064009291706,-0.5016632350399508],[-0.7203230119531192,-0.45385850310583115,-0.5245447717872334],[-0.7207149945979696,-0.44020123723282634,-0.5355303607642967],[-0.7178976318175059,-0.4227451308421156,-0.5530909008292393],[-0.7124772623076575,-0.40288115862847756,-0.5745110292385699],[-0.7011632674495866,-0.37992289990163597,-0.6033478785159945],[-0.7004593298595345,-0.3805854044036737,-0.6037478589341946],[-0.6698795003344148,-0.4064149762980485,-0.6213600583175358],[-0.6354993117691043,-0.4313284587166594,-0.6403876837058202],[-0.6114752579413997,-0.44175519353992526,-0.6564680935932851],[-0.6059827685934049,-0.4435891957407021,-0.6603131905315756],[-0.5827524427842767,-0.44900617298786,-0.6773426363722828],[-0.5848886411381136,-0.4246262515652215,-0.6910845273548528],[-0.597662839797102,-0.35091365912107,-0.7208735906994548],[-0.597662839797102,-0.35091365912107,-0.7208735906994548],[-0.5848886411381136,-0.4246262515652215,-0.6910845273548528],[-0.5827524427842767,-0.44900617298786,-0.6773426363722828],[-0.5530499913267388,-0.4609004035344134,-0.6940508087419172],[-0.5231165782617301,-0.4748774453625587,-0.7077008248078206],[-0.5176351633496635,-0.4777924795307714,-0.7097662884131681],[-0.47724274422707985,-0.504799950712025,-0.7193166012568758],[-0.4552139666632355,-0.5204846864688397,-0.7224098114686404],[-0.4149350134510732,-0.4921439662892183,-0.7652602505406082],[-0.4106084927769826,-0.47926579552662596,-0.7756964373372133],[-0.39903250066943,-0.43409770039393264,-0.8076708797042276],[-0.3974746595013333,-0.4163408274971092,-0.8177250212714061],[-0.3973610141966341,-0.40263415166244,-0.8246150400712381],[-0.39935915202377326,-0.37311506762214836,-0.8374350207676847],[-0.39928827178109944,-0.36918780168939214,-0.8392075089641519],[-0.3987375472220807,-0.3638539516287331,-0.8417949098916402],[-0.39991124888311613,-0.3437072258470333,-0.8496683681986066],[-0.4146228844603803,-0.32853458233795096,-0.8486182250516319],[-0.4177652104563105,-0.32574948660398556,-0.8481506357420446],[-0.4208825730812815,-0.32248606376476135,-0.8478564727322604],[-0.4254610262400761,-0.31841926634861767,-0.8471080721895817],[-0.46045433812783965,-0.273352684528523,-0.844547282489443],[-0.46666655004749924,-0.26213998883104417,-0.8446922263892482],[-0.48076183108838794,-0.222307343147132,-0.8482025152941977],[-0.5056647360976213,-0.17624539667080458,-0.8445358102648306],[-0.5347342321578876,-0.14877135274328343,-0.8318211259408167],[-0.5347812888484029,-0.14871837481198483,-0.8318003474938701],[-0.5412947711600706,-0.13835359050483112,-0.8293722051703857],[-0.5668857355198692,-0.1029558066779671,-0.817337546387896],[-0.5728397474038424,-0.0964074899151087,-0.8139780216213276],[-0.5647637585142342,-0.07084010104086473,-0.8222065295005847],[-0.5578017488208918,-0.00027266615238904016,-0.8299741771076521],[-0.560573802370489,0.03510176182488574,-0.8273601866253181],[-0.5592889990194854,0.05643937745400737,-0.8270492199672195],[-0.5577625115489182,0.06420967632451595,-0.8275132012100737],[-0.556129894569014,0.08764819738436325,-0.826460727356073],[-0.5559505737621765,0.10431850800200582,-0.8246433219409118],[-0.5558219480581925,0.10521285581858145,-0.8246164059896544],[-0.5515971231998611,0.1541127972587253,-0.8197498761199835],[-0.5360999476870486,0.24382858521858672,-0.8081735377505541],[-0.44316568859858885,0.2574524797133969,-0.8586747889267284],[-0.4396351511432636,0.2574256371256306,-0.8604957729295961],[-0.42626840577634645,0.2582657372044842,-0.8669452434976019],[-0.419402053960039,0.25819068391747085,-0.8703099952731379],[-0.38542276666730646,0.26255832912765903,-0.8845973178459285],[-0.38121630738772727,0.26278746205779685,-0.8863503126681278],[-0.36248821207973203,0.26244404175793556,-0.8942736835270276],[-0.35813623124706184,0.2629614751826597,-0.895873708977951],[-0.3501496693846706,0.2633523525490519,-0.8989108673481959],[-0.3372029496398808,0.2630715726506911,-0.9039289343843665],[-0.30522538349070744,0.29581193842939635,-0.9051700184802818],[-0.30250572587218094,0.29955511022702447,-0.904851933606499],[-0.22076251387817794,0.42780219600694563,-0.8764982564488205],[-0.18824025142235293,0.46267065663093954,-0.8663148799582889],[-0.1747883449993842,0.47379071719174337,-0.8631172520320225],[-0.1738760710097765,0.4747307396117669,-0.8627849307897466],[-0.1558891429925627,0.4911806972132633,-0.8569948061582037],[-0.15174384599459145,0.4945760404655684,-0.855785221536438],[-0.15094893505618903,0.5022762819090723,-0.8514299475805398],[-0.15014029911370885,0.5211095779411268,-0.8401801582756325],],
[[0.4093296122742834,-0.6909191567532444,0.5958858845003552],[0.40875472435749866,-0.6951013873938816,0.591399726545867],[0.38665981535926025,-0.7756489218091895,0.4988616414223333],[0.5409306165133625,-0.8042469922556248,0.2461317605800895],[0.5515954664270415,-0.8015680415841864,0.23071869479525686],[0.5723418511699191,-0.7953318917690034,0.19967971187511424],[0.5764847519212563,-0.7937770869399045,0.1938640426987095],[0.5865421059412576,-0.7900551050613677,0.1782730740310096],[0.6255399533735645,-0.7723119433605017,0.11060754439062453],[0.6447417832270883,-0.7576817298521029,0.10112580881990044],[0.6678496294086356,-0.7366893987718663,0.10613954134013491],[0.6806338696942772,-0.7242988938383182,0.11013014033216514],[0.6986668589362041,-0.7058091317710457,0.11703883856575632],[0.7213406567492897,-0.6803570341555134,0.12954521602752092],[0.8000104185652738,-0.5664475221856436,0.19778911698260948],[0.8225927085342845,-0.5228697521670365,0.22349151691957275],[0.8383325734793102,-0.4886708512814762,0.24165946153915507],[0.8377555559054424,-0.47508229960956505,0.2691884788531092],[0.8357036089834634,-0.462732582558142,0.2957668591493761],[0.835582241418912,-0.4623203867493851,0.29675272167453837],[0.8258603008247118,-0.43869578710718155,0.3542608783031611],[0.7485707422919751,-0.34467793658195145,0.566426485802041],[0.7328020360118034,-0.35536699576765035,0.5802718969035383],[0.7273210187729676,-0.37302211742157415,0.576071727795574],[0.7184883033555957,-0.39722972641163534,0.5709492993218707],[0.6982606708448225,-0.44160196293456366,0.5634001614160923],[0.45048453280713285,-0.6691348942372655,0.5910348373959211],[0.4345935882918062,-0.6778652850794467,0.5929815075529865],[0.5532907073262068,-0.6814292583402395,0.4790861708130773],[0.6731230383633529,-0.6422461311112053,0.36664053553470727],[0.6731230383633529,-0.6422461311112053,0.36664053553470727],[0.5532907073262068,-0.6814292583402395,0.4790861708130773],[0.4345935882918062,-0.6778652850794467,0.5929815075529865],[0.42467688882462407,-0.6828230767273266,0.5944763964926325],[0.40944010478286,-0.6898267650555535,0.5970743963765243],[0.4093296122742834,-0.6909191567532444,0.5958858845003552],],
[[0.8236382315534007,0.13186348150393215,-0.5515723758213865],[0.8127354008853883,0.13163495320636256,-0.5675679758778025],[0.8084225421412732,0.13290984807943032,-0.5734003537157473],[0.8022074417624574,0.1356938307812953,-0.5814210218669692],[0.7926379052354269,0.13698772954321267,-0.5941039581913171],[0.792587146674481,0.13698718268655927,-0.5941717989824189],[0.7814479807393309,0.13844613530154154,-0.6084173904635615],[0.7798341584174405,0.13841214427096,-0.6104922306497252],[0.7608116110274192,0.14077995976718205,-0.6335192936713243],[0.7243384918897247,0.14992768886825297,-0.6729453449408382],[0.7103286980364957,0.08845036771570089,-0.6982905363791883],[0.7086041401301251,0.04537968997413519,-0.7041454795198913],[0.7086904260225898,0.04062656454969054,-0.704348892465098],[0.7085136147645494,0.037142418028266275,-0.7047190209411729],[0.70851652840166,0.03695334618042675,-0.7047260312970773],[0.7095329259778309,0.024335013847245214,-0.7042519677319989],[0.7096577838785154,-0.003945999662960748,-0.7045354915597185],[0.708251229295426,-0.0140968941463869,-0.7058197176170014],[0.7017925677148211,-0.04372558018888485,-0.711038160394633],[0.6899648440118896,-0.08275046587755995,-0.7190972635358139],[0.6840705242314955,-0.09827343055443005,-0.7227654188771836],[0.7095198216026218,-0.15515573185208695,-0.6873924073092653],[0.7253287586130114,-0.1617666935872413,-0.6691260933297696],[0.7467315860299912,-0.1679276205071088,-0.6435776974817837],[0.7515745039520666,-0.16865282474926419,-0.6377240702006621],[0.7682822419693341,-0.16678200217330058,-0.6180017479147116],[0.7944734602942433,-0.17083988820356558,-0.5827741015922764],[0.7988950002901999,-0.17216087554964837,-0.5763049639221409],[0.8263012106575636,-0.18942312248435494,-0.530419824228056],[0.8581131009399834,-0.22217013255910836,-0.4629064032759045],[0.8781877489792185,-0.16179295029872945,-0.45012144891845135],[0.8826842079330034,-0.14552175519211508,-0.446869117115395],[0.891812094299053,-0.09976746862168119,-0.4412682185097394],[0.8928801361730329,-0.09276397967078386,-0.44063579802742386],[0.8933845791796045,-0.08857198070399035,-0.44047587665870325],[0.8936548379350188,-0.08554420028133856,-0.4405260723652592],[0.8944376139118629,-0.07141680257282021,-0.4414532762704656],[0.8971418057593138,-0.03147322593352313,-0.44062003632183494],[0.8990670547310123,-0.0060716978513900306,-0.43776884948852224],[0.9024388688514866,0.017210033225944988,-0.430474044214528],[0.9056165488302773,0.0373535176896351,-0.42244926464718585],[0.9154475961718547,0.10207298074468082,-0.38927728583243737],[0.8376458525061916,0.13035746597357684,-0.5304303506061122],[0.8340860267534421,0.13029944525293496,-0.5360247704550917],[0.8236382315534007,0.13186348150393215,-0.5515723758213865],],
[[-0.5820877670029653,-0.811383736249264,0.053200226086800875],[-0.5820474016111252,-0.811363858504566,0.05393988682153731],[-0.5801932706485637,-0.8091397963168642,0.09310509497565687],[-0.5747189804384595,-0.795500164803084,0.19203536476921054],[-0.5672321065796134,-0.7863677701418883,0.24469055426666644],[-0.5650203195129345,-0.7841411120888917,0.25666077781674723],[-0.562818829478955,-0.7820902268817135,0.26752540477503955],[-0.31195722108334967,-0.8808136854306077,0.35615999743388455],[-0.2964723194926649,-0.9176547987684096,0.2646012737534513],[-0.2862588829102302,-0.9323383731667935,0.22090950607813195],[-0.26059960799154336,-0.9533094666684475,0.15260702826205066],[-0.25645512568449147,-0.9562137453860461,0.14101787704025895],[-0.2416781860368682,-0.9647087063237778,0.1045407400826692],[-0.2384732660253703,-0.9663570157133975,0.09635673081155019],[-0.2274700687727337,-0.9716676182570044,0.06418261013146903],[-0.17698879860714004,-0.9801426620554399,-0.08941659346271777],[-0.16298809452223065,-0.9789782201166692,-0.12262351153514923],[-0.15406105044527207,-0.9783794485217473,-0.13798133006309643],[-0.1637738188797146,-0.9699429052621317,-0.179969155082781],[-0.16623131598289373,-0.9668128726726047,-0.19401035750995682],[-0.17127345780516418,-0.9613782384984976,-0.21544671079640196],[-0.1780259848053536,-0.9548032812379035,-0.23802823965113262],[-0.2972540894826064,-0.9191934027547146,-0.25830891316033916],[-0.31451283576916567,-0.9131653937083414,-0.25925014921871875],[-0.3166064146948215,-0.9124408386522608,-0.25925295395356635],[-0.3383460207972459,-0.9051990911877034,-0.2571703239559841],[-0.3592165226941206,-0.8981002320962443,-0.25373108389043814],[-0.4070717116297107,-0.88148885286757,-0.23931156232216033],[-0.44052437788427956,-0.8675999971214682,-0.23066971514374582],[-0.4694894275449665,-0.8535225155707191,-0.2260066212245366],[-0.5072062375782919,-0.8333052063793197,-0.21987329438290812],[-0.5985995687041944,-0.775711051809062,-0.19987726346043255],[-0.5990220102009303,-0.7786472011818125,-0.18676500578686225],[-0.5860212159302775,-0.8101586728853647,0.0149016518622435],[-0.5820877670029653,-0.811383736249264,0.053200226086800875],],
[[0.33586065223244804,-0.7603418631176614,-0.5559477254857315],[0.325165799408361,-0.7697262854266924,-0.5493529361151607],[0.30726428681744083,-0.7838226984016808,-0.5396393569013266],[0.28958215213859806,-0.8652146917656194,-0.4093234837090369],[0.3346018112626811,-0.8715802887935411,-0.3583147053726663],[0.40120059099304933,-0.8335510332175071,-0.37977725156840875],[0.4015884277228261,-0.8333057158598427,-0.37990567070579984],[0.421140492375161,-0.8196279305629771,-0.3883950838039257],[0.43255247038649147,-0.8117686005133622,-0.39233926592060736],[0.47977261360279877,-0.7820707467506511,-0.3977230019921132],[0.5121264269962305,-0.7628809508190332,-0.394638033708768],[0.5707315181422152,-0.7280186344755348,-0.37980837544143237],[0.5721775592923378,-0.7270442555467517,-0.3794990001551161],[0.5927956220483469,-0.71192049358599,-0.3765136933666478],[0.6194542584138673,-0.690371016859928,-0.37371684577058495],[0.6528827591306261,-0.6592003637027349,-0.3730937996324287],[0.6662133596312404,-0.6452868600273787,-0.37385107693420083],[0.6671201743377561,-0.6443853404083657,-0.37378898600461286],[0.6792207692408756,-0.6325884633489364,-0.3721437661303287],[0.6861581735996314,-0.6261010901712578,-0.37038410561035234],[0.6943349768774918,-0.5853519809522173,-0.4186430439883698],[0.6998501626728278,-0.5616742407835916,-0.44128425877997557],[0.7046987114153189,-0.5328282119808273,-0.468501678382163],[0.672453379105954,-0.5214801699221411,-0.5252284125092235],[0.6493262386118434,-0.5187638531388352,-0.5561110505346434],[0.6222318144446416,-0.5190234710564816,-0.5860394232348289],[0.595187238282228,-0.5206078703953021,-0.6121434445196997],[0.5899651721695057,-0.5257497837613248,-0.6128036067957873],[0.5801464205259553,-0.5360265891858744,-0.6132745114846037],[0.5785285667756691,-0.5379868684796485,-0.6130863126574853],[0.5681082460524084,-0.5721395948906458,-0.5915313218466323],[0.5497304328340963,-0.6435873715000787,-0.5325333289679217],[0.5497304328340963,-0.6435873715000787,-0.5325333289679217],[0.5681082460524084,-0.5721395948906458,-0.5915313218466323],[0.5785285667756691,-0.5379868684796485,-0.6130863126574853],[0.5509058728467864,-0.5660207759822601,-0.6132888393076794],[0.5506077755011977,-0.5662891370896124,-0.6133088053924588],[0.5291959612747109,-0.5872925042090812,-0.6124043999436657],[0.5157063840849705,-0.5986367023321106,-0.6129282372634997],[0.5036226314216844,-0.6103034681662125,-0.6114686597563206],[0.49302803105911475,-0.6186932789179407,-0.6116714699998195],[0.4784583410075728,-0.6278039803435668,-0.6139542150560218],[0.4705761892074182,-0.6313708134117246,-0.61638376529792],[0.46058229758769653,-0.6407026267697206,-0.6142996754021761],[0.45019791490557703,-0.6545270509229507,-0.6073847026595055],[0.44589299976760677,-0.666795173903149,-0.5971294908290115],[0.42951012651938725,-0.6866012361938187,-0.5866001991769351],[0.4152649054817404,-0.6986591122433701,-0.5826066453058594],[0.414048136887956,-0.6999336206314422,-0.5819424946241449],[0.4030505221856517,-0.7091123113771476,-0.5785412746029732],[0.399221154864394,-0.7128976220423069,-0.5765409352293762],[0.3919222371528225,-0.7189438442360637,-0.574035459584334],[0.37944136853261384,-0.7277260398698051,-0.5713484564970033],[0.3785134316753455,-0.7284624796824618,-0.5710253914986905],[0.3712977400386237,-0.7334633811504673,-0.5693588119573938],[0.33586065223244804,-0.7603418631176614,-0.5559477254857315],],
[[-0.58761297351197,-0.7227188957445039,-0.36385215554434486],[-0.6106510019839426,-0.6563652646215932,-0.44304626527512136],[-0.6106510019839426,-0.6563652646215932,-0.44304626527512136],[-0.58761297351197,-0.7227188957445039,-0.36385215554434486],[-0.5745836767789031,-0.7181895615582673,-0.39250140388026744],[-0.5622215048197308,-0.7122288583156088,-0.4202820872945717],[-0.5465237820691355,-0.7076613210355334,-0.4478026466459212],[-0.5149665780059767,-0.703108899600367,-0.49035425851069697],[-0.4591754799379533,-0.6973558713516752,-0.5503205132603147],[-0.4307711058383551,-0.6912219947290779,-0.5802141056347695],[-0.4292407344588133,-0.6906434406016938,-0.5820343888767341],[-0.4258373336447426,-0.6890506180650862,-0.5864058415623594],[-0.4311696636566241,-0.657537458128727,-0.6178488587833164],[-0.4329747279956136,-0.6494564041735047,-0.6250914045122888],[-0.43331374850777105,-0.647240262231146,-0.6271516868358895],[-0.441754335611372,-0.6165463647382595,-0.6517082837409638],[-0.44246813386629524,-0.6112632322054431,-0.656185348408994],[-0.4427026739433884,-0.6076921586521162,-0.6593364716107438],[-0.44348129098296996,-0.6017018696287749,-0.6642884950330806],[-0.4505274578859126,-0.573213294893074,-0.6844351892244314],[-0.45084673552860066,-0.5714197906993567,-0.6857234456107707],[-0.45153837931223634,-0.5570784584773343,-0.696976816765519],[-0.4552139666632355,-0.5204846864688397,-0.7224098114686404],[-0.47724274422707985,-0.504799950712025,-0.7193166012568758],[-0.5176351633496635,-0.4777924795307714,-0.7097662884131681],[-0.5231165782617301,-0.4748774453625587,-0.7077008248078206],[-0.5530499913267388,-0.4609004035344134,-0.6940508087419172],[-0.5827524427842767,-0.44900617298786,-0.6773426363722828],[-0.6059827685934049,-0.4435891957407021,-0.6603131905315756],[-0.6114752579413997,-0.44175519353992526,-0.6564680935932851],[-0.6354993117691043,-0.4313284587166594,-0.6403876837058202],[-0.6698795003344148,-0.4064149762980485,-0.6213600583175358],[-0.7004593298595345,-0.3805854044036737,-0.6037478589341946],[-0.7011632674495866,-0.37992289990163597,-0.6033478785159945],[-0.7124772623076575,-0.40288115862847756,-0.5745110292385699],[-0.7178976318175059,-0.4227451308421156,-0.5530909008292393],[-0.7207149945979696,-0.44020123723282634,-0.5355303607642967],[-0.7203230119531192,-0.45385850310583115,-0.5245447717872334],[-0.7163429180008128,-0.48496064009291706,-0.5016632350399508],[-0.7150459492263196,-0.49072952707409045,-0.49788936698093],[-0.7132680895156829,-0.5024319094512154,-0.4886827282029248],[-0.7120579325225992,-0.5181540034411454,-0.47380368239340975],[-0.7120446995283345,-0.5357483228639728,-0.45383486029837367],[-0.7120629973272476,-0.5359637559055195,-0.45355169517154814],[-0.7158224999127504,-0.5563477781878324,-0.42198968983154445],[-0.7242942022027348,-0.5776114805467889,-0.37651412482940205],[-0.7289446955020618,-0.6135443457066769,-0.30364941421114605],[-0.7290121929955033,-0.6246785413608763,-0.27985343025793874],[-0.6293758895461089,-0.7350509251534516,-0.2521628979233449],[-0.6284747731406818,-0.7359245905391962,-0.2518619791979032],[-0.6044568257341414,-0.731437517345537,-0.3156439513800369],[-0.58761297351197,-0.7227188957445039,-0.36385215554434486],],
[[0.6756160528085726,0.25769089663449285,-0.6907520184401021],[0.6902885538415034,0.2294981555348102,-0.6861722152940368],[0.7239276851428286,0.150808019445373,-0.6731906475543981],[0.7243384918897247,0.14992768886825297,-0.6729453449408382],[0.7608116110274192,0.14077995976718205,-0.6335192936713243],[0.7798341584174405,0.13841214427096,-0.6104922306497252],[0.7814479807393309,0.13844613530154154,-0.6084173904635615],[0.792587146674481,0.13698718268655927,-0.5941717989824189],[0.7926379052354269,0.13698772954321267,-0.5941039581913171],[0.8022074417624574,0.1356938307812953,-0.5814210218669692],[0.8084225421412732,0.13290984807943032,-0.5734003537157473],[0.8127354008853883,0.13163495320636256,-0.5675679758778025],[0.8236382315534007,0.13186348150393215,-0.5515723758213865],[0.8340860267534421,0.13029944525293496,-0.5360247704550917],[0.8376458525061916,0.13035746597357684,-0.5304303506061122],[0.8361220969855929,0.14354304419969277,-0.5294291580507252],[0.8361220969855929,0.14354304419969277,-0.5294291580507252],[0.8376458525061916,0.13035746597357684,-0.5304303506061122],[0.9154475961718547,0.10207298074468082,-0.38927728583243737],[0.9240704044238612,0.12062127462077167,-0.36269049584567564],[0.9371835652163094,0.15658749659714974,-0.31171673198255695],[0.942475233443933,0.1758362925789935,-0.28429216056176904],[0.9427146598229246,0.17688495797132794,-0.28284409450866965],[0.9431978378804629,0.17863208468390254,-0.28012214646311556],[0.9452866684795307,0.1884413987425199,-0.2663136377184474],[0.9393840859113374,0.21460823547389443,-0.26739641808240966],[0.9349742893523061,0.23327691965583422,-0.2672170597211858],[0.9338954621724361,0.2379670791545756,-0.2668537707666355],[0.9190209617605348,0.29767471604687223,-0.258438068540909],[0.9125072001548737,0.3211968795445713,-0.2533045089143567],[0.9081852387315204,0.33477777006341836,-0.25124373986536763],[0.8835539726176459,0.373029603069598,-0.2831630143668385],[0.8521076196106292,0.41277407664597876,-0.32176103905004866],[0.850569763519563,0.41446536391957617,-0.3236503352343205],[0.7919914787610434,0.46799110483915896,-0.39208905029510743],[0.7548830575786958,0.4992892968614338,-0.4252784586835483],[0.7543259835312437,0.4979580092985038,-0.4278202093696524],[0.7524984767217769,0.49492058122832544,-0.4345108293334264],[0.7450099354016602,0.4777291263928627,-0.4655481478308408],[0.7344950328593487,0.462080320877276,-0.49698976223147495],[0.7290849937366212,0.4568431830662731,-0.5096365155617745],[0.7280666778716931,0.4556236730563645,-0.5121776851088922],[0.7223377191622644,0.4451686057137522,-0.5292004648168136],[0.7125844198811204,0.42319505787506845,-0.5595796525364416],[0.6844180812729668,0.3456292427891393,-0.6419597468343611],[0.6823207023000479,0.3414986838302335,-0.6463877382461612],[0.6602004725987605,0.30769843784443685,-0.6851693274866197],[0.6561056642348264,0.2992139900248896,-0.6928176856376883],[0.6530476040078619,0.29522111315397265,-0.6974047040619387],[0.6756160528085726,0.25769089663449285,-0.6907520184401021],],
[[0.6986668589362041,-0.7058091317710457,0.11703883856575632],[0.7213406567492897,-0.6803570341555134,0.12954521602752092],[0.8000104185652738,-0.5664475221856436,0.19778911698260948],[0.8225927085342845,-0.5228697521670365,0.22349151691957275],[0.8383325734793102,-0.4886708512814762,0.24165946153915507],[0.8634664895352382,-0.46778836112410116,0.18867874985413688],[0.8832633889393917,-0.4461024389854255,0.14435511660677477],[0.8852441588477525,-0.44354870122345413,0.14002617208551466],[0.9023406936241022,-0.4183005945482347,0.1039513599264941],[0.871794880526372,-0.4895673895248916,-0.01724695340609594],[0.871794880526372,-0.4895673895248916,-0.01724695340609594],[0.9023406936241022,-0.4183005945482347,0.1039513599264941],[0.9396765191312795,-0.3413612479742595,0.021921171838620235],[0.9426679201800193,-0.33343420865830997,0.014100381550991784],[0.9429044900493702,-0.33279190920061175,0.013441272832181096],[0.9531262665718278,-0.30200828971983806,-0.018474655919596815],[0.9568764586749681,-0.28854226518009335,-0.03362742985113418],[0.948614236523247,-0.30686997670425403,-0.07721300190348708],[0.9361325953875115,-0.33782073185932754,-0.09763665796753916],[0.9169427343144319,-0.38001682071484505,-0.12166855781899734],[0.9114715062423709,-0.39155389975091376,-0.1261159660713706],[0.8958954466145496,-0.42159846080909497,-0.14009313537328988],[0.8906136314865967,-0.4316119094354337,-0.14324286733989794],[0.8887542883389706,-0.4350093426580918,-0.14450843144697437],[0.8778781142815331,-0.4535099953508507,-0.153813850424372],[0.8726937733178627,-0.46179476346801024,-0.15859121806000315],[0.8234865952130676,-0.5302839435218036,-0.20166498641894717],[0.7986850533586999,-0.5618198671002017,-0.21554726273586167],[0.7870976224913802,-0.5765861650498337,-0.21914772857947423],[0.7794347461774316,-0.5858688288362187,-0.22189905779295352],[0.7770490981560371,-0.5887858480422192,-0.22254420729395377],[0.7676291318481947,-0.6003804223367167,-0.22425178798121695],[0.7587035024699692,-0.6106783068892901,-0.22680608641443312],[0.7383606701256816,-0.6341989965585273,-0.22937993280954516],[0.7356679072533311,-0.6414203843097259,-0.2176525231405966],[0.7292277970390011,-0.6547061990432939,-0.19896384837434308],[0.7127968103396816,-0.6834485459599259,-0.15753981145995793],[0.6995189643938028,-0.7048450750340729,-0.11775669260655185],[0.6981856638186112,-0.7069522852790736,-0.11293912155166078],[0.6913413258127784,-0.7174012798477982,-0.08592191161846313],[0.6447417832270883,-0.7576817298521029,0.10112580881990044],[0.6678496294086356,-0.7366893987718663,0.10613954134013491],[0.6806338696942772,-0.7242988938383182,0.11013014033216514],[0.6986668589362041,-0.7058091317710457,0.11703883856575632],],
[[0.8454105598737791,0.17582357191150458,0.5043481504022627],[0.8547201053060807,0.22420112950288162,0.4681745348854361],[0.8575782661898899,0.305530558510007,0.4137760205416764],[0.8542527144957839,0.3514167892210704,0.3830907725724265],[0.7878583097842324,0.5567224518028528,0.26332374629446703],[0.8215618260274118,0.5404477637215893,0.18152790612695904],[0.850885136994769,0.517223348452954,0.09205700112705884],[0.8667834242990756,0.49834770431512165,0.018331965639743604],[0.8675628019593523,0.4970945305809033,0.015225384165570678],[0.8793599128499174,0.47440706166200663,-0.04079317979523756],[0.8826789851653974,0.4666830237400317,-0.05554065628209012],[0.9056036587320052,0.38566626401376053,-0.1764753413167808],[0.9083667133568557,0.3572273513651858,-0.217390279225816],[0.9081852387315204,0.33477777006341836,-0.25124373986536763],[0.9125072001548737,0.3211968795445713,-0.2533045089143567],[0.9190209617605348,0.29767471604687223,-0.258438068540909],[0.9338954621724361,0.2379670791545756,-0.2668537707666355],[0.9349742893523061,0.23327691965583422,-0.2672170597211858],[0.9393840859113374,0.21460823547389443,-0.26739641808240966],[0.9452866684795307,0.1884413987425199,-0.2663136377184474],[0.958847936537416,0.16282639737930743,-0.23259019522416527],[0.9928916454732187,0.07757373127597907,-0.09026902328820469],[0.9954027128551984,0.0651417780361298,-0.07021387323601555],[0.9991865630766821,0.03337568967193172,-0.022633504057717323],[0.9988656806368094,-0.015061457753323975,0.04517194412806052],[0.9901517431078338,0.015837985643385184,0.1390995464812097],[0.9805362129364417,0.03527414588473642,0.19314365056186425],[0.9798282309486367,0.036552569676074384,0.1964702203544871],[0.8996464250419869,0.11646444878023497,0.4207996460068484],[0.8528112085023893,0.13639268474744834,0.5040933229076512],[0.8506246149786539,0.15048974970457077,0.5037763388908538],[0.8454105598737791,0.17582357191150458,0.5043481504022627],],
[[0.8961002346923435,-0.27638933433024876,-0.34729426320169626],[0.8834240025427151,-0.27567520448707805,-0.3789000044370765],[0.8567021319059293,-0.25840267277794443,-0.4464185433973936],[0.8549582989904171,-0.26173510636171576,-0.4478180892787093],[0.8524886866158555,-0.2661748983397318,-0.44990439282786215],[0.8494783994620511,-0.2718293120778608,-0.4522115367200058],[0.8374571868954348,-0.296322720866773,-0.45919310231676763],[0.8246777557837107,-0.32275022932220404,-0.46447700544591786],[0.8107176017506204,-0.35215619668606557,-0.4676782904383393],[0.7721189443150323,-0.4319250138178932,-0.466125646439083],[0.7409575210958577,-0.48565037234428066,-0.46381641602399454],[0.7368538497417007,-0.491737543367129,-0.46394028986939273],[0.7249376466412086,-0.5075195249134782,-0.46571379656813233],[0.7140127622496165,-0.5210443922735799,-0.4676521320649876],[0.7046987114153189,-0.5328282119808273,-0.468501678382163],[0.6998501626728278,-0.5616742407835916,-0.44128425877997557],[0.6943349768774918,-0.5853519809522173,-0.4186430439883698],[0.6861581735996314,-0.6261010901712578,-0.37038410561035234],[0.7383606701256816,-0.6341989965585273,-0.22937993280954516],[0.7587035024699692,-0.6106783068892901,-0.22680608641443312],[0.7676291318481947,-0.6003804223367167,-0.22425178798121695],[0.7770490981560371,-0.5887858480422192,-0.22254420729395377],[0.7794347461774316,-0.5858688288362187,-0.22189905779295352],[0.7870976224913802,-0.5765861650498337,-0.21914772857947423],[0.7986850533586999,-0.5618198671002017,-0.21554726273586167],[0.8234865952130676,-0.5302839435218036,-0.20166498641894717],[0.8726937733178627,-0.46179476346801024,-0.15859121806000315],[0.8778781142815331,-0.4535099953508507,-0.153813850424372],[0.8887542883389706,-0.4350093426580918,-0.14450843144697437],[0.8906136314865967,-0.4316119094354337,-0.14324286733989794],[0.8958954466145496,-0.42159846080909497,-0.14009313537328988],[0.9114715062423709,-0.39155389975091376,-0.1261159660713706],[0.9169427343144319,-0.38001682071484505,-0.12166855781899734],[0.9361325953875115,-0.33782073185932754,-0.09763665796753916],[0.948614236523247,-0.30686997670425403,-0.07721300190348708],[0.9485466148015979,-0.3066285326945401,-0.0789826720618053],[0.9392461728039737,-0.2856841142481383,-0.19026616551385211],[0.9271429359743661,-0.27330950684786115,-0.25633550230003516],[0.9187698259664969,-0.2732615205504175,-0.2849388500713212],[0.9108218495905718,-0.274378595720734,-0.3084152144734886],[0.9082571379588221,-0.2750820451400849,-0.3152758154194473],[0.8961002346923435,-0.27638933433024876,-0.34729426320169626],],
[[0.1026683216669169,-0.9937451713074478,-0.04392892246834603],[0.1282076907497512,-0.9913906122022361,-0.026597783176266133],[0.17330522980107876,-0.9848263185637637,0.009078523433878077],[0.34734362343777986,-0.9295325992504093,-0.12378026574495637],[0.34710158348579334,-0.9294157062426075,-0.12532731438601136],[0.3376868834714538,-0.9219132961602328,-0.18985110769840602],[0.3369516044264933,-0.9128912752926602,-0.2304194778419406],[0.3361624613204528,-0.8801937686351993,-0.3350428767407845],[0.3348595835061816,-0.8721430259449122,-0.3567009975171344],[0.3346018112626811,-0.8715802887935411,-0.3583147053726663],[0.28958215213859806,-0.8652146917656194,-0.4093234837090369],[0.21203636788374405,-0.8796964488605672,-0.4256462575387888],[0.14828193719662022,-0.902094473639803,-0.40526291186061475],[0.1259351992561225,-0.907542160679811,-0.4006339378746401],[0.10589415410478013,-0.9116322299368202,-0.39713109355331727],[0.09127035537215346,-0.9140735856532901,-0.39514453335605987],[0.0494887490551299,-0.9191951746605715,-0.39068029717107555],[0.04355415339177449,-0.9196727531343445,-0.39026281255664225],[0.013540667478238452,-0.922482396708275,-0.38580160456846285],[-0.015734971683660982,-0.9253409793596061,-0.3788092957992447],[-0.016092159508696715,-0.92538051491413,-0.37869769608436543],[-0.04498198785207519,-0.9296623455696482,-0.36565631951166383],[-0.05597799686531779,-0.9313698201241548,-0.35974535720262774],[-0.15485295341533017,-0.9437114699426092,-0.29228278142461495],[-0.16297844937016193,-0.9487651325693975,-0.27070786516366924],[-0.1780259848053536,-0.9548032812379035,-0.23802823965113262],[-0.17127345780516418,-0.9613782384984976,-0.21544671079640196],[-0.16623131598289373,-0.9668128726726047,-0.19401035750995682],[-0.1637738188797146,-0.9699429052621317,-0.179969155082781],[-0.15406105044527207,-0.9783794485217473,-0.13798133006309643],[-0.0913430173415097,-0.9894857774589504,-0.11213540649324495],[-0.05192742119794771,-0.9939517779751129,-0.09676469391179209],[-0.027299333193442535,-0.9957067424755177,-0.08844676023454154],[-0.01769083294507494,-0.9961845016469112,-0.08546035986470339],[0.06683114451542478,-0.9958017978481459,-0.06254900099249233],[0.0680780729760487,-0.9873983452700078,-0.1428631643843793],[0.06221748573668169,-0.9762251989494525,-0.20763753370888363],[0.06221748573668169,-0.9762251989494525,-0.20763753370888363],[0.0680780729760487,-0.9873983452700078,-0.1428631643843793],[0.06683114451542478,-0.9958017978481459,-0.06254900099249233],[0.08045752665673629,-0.9951358483222924,-0.05684390722102062],[0.08450156620338731,-0.9949200355998012,-0.054713874577339734],[0.1026683216669169,-0.9937451713074478,-0.04392892246834603],],
[[0.06874418746138201,-0.8128236202697584,-0.5784392785952888],[0.08055936380114949,-0.8180971242362666,-0.5694095926662149],[0.08277585779234344,-0.8196422224488968,-0.566863991223446],[0.08394761047414333,-0.8209568687967292,-0.5647854621634232],[0.09229611503853437,-0.8268651649704103,-0.5547751130929091],[0.1051641949297055,-0.8331264413805836,-0.542992472118456],[0.11793210161036319,-0.8375775324547162,-0.5334378094368938],[0.13146699011245702,-0.8435390470033457,-0.5207286305663043],[0.13719452752377076,-0.8466030304283811,-0.5142382429254081],[0.1387749844034458,-0.8409125886397242,-0.5230750634192588],[0.16114978551688405,-0.7863836238359402,-0.5963485078295382],[0.16114978551688405,-0.7863836238359402,-0.5963485078295382],[0.1387749844034458,-0.8409125886397242,-0.5230750634192588],[0.13719452752377076,-0.8466030304283811,-0.5142382429254081],[0.1391866864679028,-0.8482013584369182,-0.5110592156060317],[0.1626189632744499,-0.8603385402102015,-0.483086606119982],[0.21203636788374405,-0.8796964488605672,-0.4256462575387888],[0.28958215213859806,-0.8652146917656194,-0.4093234837090369],[0.30726428681744083,-0.7838226984016808,-0.5396393569013266],[0.2905062260563093,-0.7708144286788643,-0.5669667090429531],[0.29043789052698443,-0.7707693420329259,-0.5670630063126725],[0.2684202687680857,-0.7493453349878421,-0.6053363761136674],[0.2661289177895303,-0.7464109395132399,-0.6099558250325479],[0.25981442956454015,-0.7354813710037427,-0.6257504415471936],[0.2546927158173365,-0.7222583642329748,-0.6430198098076737],[0.2514493456534297,-0.7067424604894834,-0.6612777942073461],[0.25031409476612254,-0.6812741526085269,-0.68790143403612],[0.24943667278372128,-0.6769626100836764,-0.6924615302089229],[0.24420155806831195,-0.6627603369559876,-0.7078942963430309],[0.23902408113017326,-0.6530596899155263,-0.718596221843194],[0.22192204879073935,-0.6286939086871922,-0.7453150833306282],[0.21730886242893463,-0.6242050299729393,-0.7504298360715175],[0.2092326649914102,-0.6239238836494442,-0.7529546329709297],[0.1682205144089665,-0.6245501230923617,-0.7626526091722879],[0.1664381420793607,-0.6246670690413197,-0.7629478342039497],[0.11157364889161087,-0.6180161235521454,-0.7782078076597478],[0.08136186455531684,-0.6103060649477485,-0.7879763664502109],[0.07454253088571337,-0.6081188836189261,-0.7903384303418527],[0.0694814396981351,-0.6079916994386134,-0.7908972265416166],[0.058444083769797005,-0.6082262414602038,-0.7916092017349868],[0.053561233716165016,-0.6085508620613411,-0.7917051487310166],[0.05205496420131856,-0.6085765001049651,-0.7917859080723721],[0.04492226466792506,-0.6090308706285484,-0.791873341361191],[-0.0212869033209638,-0.6188572663984693,-0.7852149715669067],[-0.025352084377264127,-0.6197967244177275,-0.7843527855619459],[-0.02640133564293034,-0.6211188388003759,-0.7832715733151191],[-0.027798713986432414,-0.6231273353959309,-0.7816262248562721],[-0.04613518929750561,-0.658467969745469,-0.7511933686659937],[-0.05288211901035987,-0.6743499059497619,-0.7365159101027768],[-0.060572722921277786,-0.7086889377667924,-0.7029160225267863],[-0.061298898025727,-0.7149078139475046,-0.6965265699581258],[-0.06518871730215155,-0.7320032591073623,-0.6781752426863575],[-0.05846287035181354,-0.7363680012425313,-0.674050635736149],[-0.04066664889299029,-0.7461960556635566,-0.6644830096999957],[-0.027902222228045243,-0.7544015109151255,-0.6558199648712386],[-0.02283510520266956,-0.7583164045794595,-0.6514865988768032],[-0.022142952455385907,-0.7586656642849355,-0.6511037547823358],[0.003064731196869687,-0.7778489704684177,-0.6284437815460612],[0.02386306007309672,-0.7886014048254743,-0.6144415176981747],[0.026243073073459522,-0.7927226257796853,-0.6090173558221654],[0.030552171136282183,-0.7961116391260229,-0.6043780463310499],[0.06185540800229276,-0.806855569094685,-0.5875014886123795],[0.06874418746138201,-0.8128236202697584,-0.5784392785952888],],
[[0.545573084842187,-0.10098842504763256,-0.8319563372570574],[0.5733819363108152,-0.10170653753766318,-0.8129507582471156],[0.5823718682199103,-0.10015961424762178,-0.8067286153222899],[0.5999556053084848,-0.10057913613308929,-0.7936857747456806],[0.60520259969507,-0.1012345662008857,-0.7896083687046684],[0.6116548401017821,-0.10072591216402844,-0.7846863368243313],[0.6309360312209992,-0.09719844956271632,-0.76972214851185],[0.6840705242314955,-0.09827343055443005,-0.7227654188771836],[0.6899648440118896,-0.08275046587755995,-0.7190972635358139],[0.7017925677148211,-0.04372558018888485,-0.711038160394633],[0.708251229295426,-0.0140968941463869,-0.7058197176170014],[0.7096577838785154,-0.003945999662960748,-0.7045354915597185],[0.7095329259778309,0.024335013847245214,-0.7042519677319989],[0.70851652840166,0.03695334618042675,-0.7047260312970773],[0.7085136147645494,0.037142418028266275,-0.7047190209411729],[0.7086904260225898,0.04062656454969054,-0.704348892465098],[0.7086041401301251,0.04537968997413519,-0.7041454795198913],[0.7103286980364957,0.08845036771570089,-0.6982905363791883],[0.7243384918897247,0.14992768886825297,-0.6729453449408382],[0.7239276851428286,0.150808019445373,-0.6731906475543981],[0.6902885538415034,0.2294981555348102,-0.6861722152940368],[0.6756160528085726,0.25769089663449285,-0.6907520184401021],[0.6530476040078619,0.29522111315397265,-0.6974047040619387],[0.6338386609375648,0.29932821495659256,-0.7131978488692845],[0.616331314900875,0.30408270116520497,-0.7264085772653234],[0.5918092328883311,0.3057459314573271,-0.7458426491327891],[0.5799337291699804,0.30800175490373555,-0.7541961208778649],[0.5646220343968059,0.29273653395729476,-0.7716911817302838],[0.5597575901933427,0.28859832802690527,-0.776776959803145],[0.5431310340916146,0.27662471963036256,-0.792772000196776],[0.4548754346244086,0.23403713426750597,-0.8592525581917745],[0.45076469113915607,0.1574882880983179,-0.8786402177991186],[0.4533925954924861,0.13528043257475772,-0.8809848800717146],[0.45346968362392476,0.13193124729827216,-0.8814530004602286],[0.4550192191713914,0.11820103971044314,-0.8826018493046723],[0.4551609197639306,0.11058495756835113,-0.8835154239056944],[0.45426805355469413,0.09888524410504536,-0.8853599516681987],[0.45594166081660514,0.08293157692348713,-0.8861374360000708],[0.4559960218283498,0.07755232028273532,-0.8865964503061601],[0.4540722079513652,0.05547741551378565,-0.8892360127289509],[0.4525811782902994,0.04749585227990243,-0.8904574223810872],[0.4524858280787658,0.009729108351034908,-0.8917185205201065],[0.45125740596291164,-0.0026455610966084333,-0.892389911737077],[0.5075030665331857,-0.0856753647029537,-0.8573799445650854],[0.519892208525926,-0.10119724553537776,-0.8482164871128641],[0.5356238133510198,-0.10162414291941312,-0.8383195477544387],[0.5453164950727355,-0.10095759705312111,-0.8321282856620409],[0.545573084842187,-0.10098842504763256,-0.8319563372570574],],
[[-0.43556889586834613,0.6802169598429803,-0.5895630793172206],[-0.39808071098952846,0.6538405379549049,-0.6434471994382385],[-0.38610860559849136,0.6439078887934345,-0.6605321910644255],[-0.3598585890645895,0.6297428224326754,-0.6884226706544249],[-0.3360548948980729,0.6187202400064759,-0.7101072962738619],[-0.3265327328659168,0.615101895992099,-0.7176531417851112],[-0.3222842947493631,0.6138395328852589,-0.7206482229389821],[-0.2389764816358146,0.5941482384767914,-0.7680352283195694],[-0.19944173588957434,0.5803742345448597,-0.7895497082906318],[-0.1682350049041766,0.5638362161115907,-0.8085701605462914],[-0.14897466390843733,0.5518361627756788,-0.8205384811002971],[-0.14715031451705574,0.5532973394054435,-0.819883430216997],[-0.14020463201638153,0.5594122119224473,-0.8169459212905014],[-0.1291953832924711,0.5680935090289652,-0.8127596926121944],[-0.12411267888683859,0.5730509439018655,-0.8100670704532519],[0.032896905509343585,0.686560627679783,-0.7263279549403644],[0.04500577504475076,0.695762773869321,-0.7168602672141131],[-0.016500518782535317,0.6985110975372507,-0.7154089596148575],[-0.016500518782535317,0.6985110975372507,-0.7154089596148575],[0.04500577504475076,0.695762773869321,-0.7168602672141131],[0.053247564625761835,0.7005743224718686,-0.7115899911848871],[0.07123529754946653,0.7122493790433476,-0.6983024806166771],[0.08377853567773758,0.7222234635112225,-0.6865671312505048],[0.08548704520513456,0.7233166613067148,-0.6852043290714112],[0.06779372541296974,0.7595061348849423,-0.6469578362356906],[0.0556912447547748,0.8045489665267629,-0.591269351242208],[0.04708999459869763,0.8231580966507683,-0.5658562364478977],[0.04676664415036229,0.8237342920685575,-0.5650439779921789],[0.02835776980480883,0.8510714850761435,-0.5242834769301672],[0.024140222149743356,0.8558100067572498,-0.5167266995315001],[-0.0420696730197027,0.9159803563194449,-0.3990114402481691],[-0.0755528359953837,0.9087778149294088,-0.41038354263442856],[-0.1074757014431095,0.9015729421834681,-0.4190646770153227],[-0.12781154651609644,0.8968955899801684,-0.4233704161266934],[-0.12982517328738172,0.8964759070944538,-0.4236465181965712],[-0.1901464893389108,0.8835144795547843,-0.4280729809379777],[-0.28478152148722696,0.8611431452514995,-0.42110802462761854],[-0.31790952712327686,0.850245305409983,-0.41954314818924077],[-0.3974275752865091,0.8168251053136679,-0.4181483824328411],[-0.4631946729771452,0.784147572052285,-0.4129930752084133],[-0.4640850245410788,0.741497435134107,-0.48456851289187913],[-0.46494876906389443,0.6922319147359297,-0.5519398684340515],[-0.4431904107858184,0.6845548892047321,-0.5787632188152548],[-0.4390279235158273,0.682321924044458,-0.5845436462246852],[-0.43556889586834613,0.6802169598429803,-0.5895630793172206],],
[[0.2878466166780335,-0.2506693632303873,-0.9242884807270301],[0.31106616639228823,-0.27145535991715936,-0.9107962602570626],[0.3115787249012419,-0.2722323517731894,-0.9103890623447509],[0.3263204308242332,-0.3156173082814945,-0.8910110499538325],[0.33009469643645617,-0.3157566373467398,-0.8895702543115993],[0.3581485360085297,-0.3134053421536049,-0.8794923067682451],[0.3599129061953285,-0.31345507697155606,-0.8787540126080726],[0.3700155910572113,-0.31490230061839564,-0.874028033554888],[0.38348989802909406,-0.3184317424675555,-0.8669121775005306],[0.41639630761838775,-0.3311399314136729,-0.8467351775054117],[0.4399163235323724,-0.2986164275185507,-0.8469367494127406],[0.4534985037272248,-0.2684985512045154,-0.8498515371041254],[0.46386751555005995,-0.23452421228467363,-0.8542981457721118],[0.4640210583697725,-0.22805175487643106,-0.8559654516901816],[0.46874781951221894,-0.19799510119571773,-0.8608562142454672],[0.4799047080820088,-0.15866485921585036,-0.8628539468593375],[0.5060379558915603,-0.11913516154173845,-0.8542437594044894],[0.519892208525926,-0.10119724553537776,-0.8482164871128641],[0.5075030665331857,-0.0856753647029537,-0.8573799445650854],[0.45125740596291164,-0.0026455610966084333,-0.892389911737077],[0.41423843855233344,-0.01806467701875678,-0.9099891117315266],[0.3786214696894932,-0.02721201638299996,-0.9251514950831241],[0.3733108393609699,-0.027695197972178908,-0.9272928303534381],[0.3605431479231218,-0.02679407064508906,-0.9323576117906434],[0.3383605576239497,-0.028831119370839927,-0.940574770871638],[0.33623654553042853,-0.029368282106145054,-0.941319546942428],[0.31923330409905926,-0.028184597069231328,-0.9472569482680202],[0.30449178452405984,-0.029497550123044315,-0.9520581115111053],[0.2982724380443829,-0.031046720044593808,-0.9539757092701746],[0.26895103152843913,-0.029024650472469955,-0.9627164236184712],[0.26093470611829267,-0.029703383728597044,-0.9648993668450778],[0.24635233035901968,-0.03313373879073566,-0.9686137954212855],[0.22254110933485935,-0.04236998270972379,-0.9740021761891439],[0.2436404504429784,-0.08120692861461233,-0.9664599141469469],[0.26534089578925196,-0.10497148814501692,-0.9584232862876289],[0.267136773061554,-0.11862594293763054,-0.9563293523365358],[0.29014555257844377,-0.123454623073664,-0.948986045398292],[0.27452289777909933,-0.13425023772635492,-0.9521628286513728],[0.2849004094259732,-0.14772880647592954,-0.9471050398166564],[0.26142897628727035,-0.15544446726526312,-0.9526236969307496],[0.2895335328108564,-0.16425280683437593,-0.9429694315432999],[0.27036570215881295,-0.17486819336062912,-0.9467436305816701],[0.2912663148456566,-0.18604540638005446,-0.9383768116279896],[0.2695069796390683,-0.1929458757767342,-0.9434711850112731],[0.29222616388849193,-0.21011892172197758,-0.9329811937404793],[0.2397474567186029,-0.20798440128092557,-0.948295125907951],[0.23923799658798306,-0.20946912677819388,-0.9480969707341909],[0.28601957839592695,-0.22289929534345934,-0.9319381443580929],[0.2671017880430871,-0.232906644259059,-0.9350995294000366],[0.2868700340307952,-0.24697188057781508,-0.9255865566110109],[0.2878466166780335,-0.2506693632303873,-0.9242884807270301],],
[[0.0027565547547173893,-0.9027719671146167,0.430110656457021],[0.010229582454660794,-0.9038857454362835,0.4276516278934263],[0.12673685399785384,-0.9084628049516145,0.39828771241173344],[0.1566240794489308,-0.9794589983858676,0.1269998748728839],[0.1590963116725101,-0.9810167168017647,0.11088085933870548],[0.16257169362489846,-0.9832080929697123,0.08289927834905288],[0.16651786746833355,-0.9841528436930008,0.06095063629510885],[0.1665411751360233,-0.9841638992392848,0.060707960091236565],[0.16665400039163683,-0.9841831994229274,0.06008222804719031],[0.17150379012394684,-0.9847845797705934,0.028031793006818614],[0.17330522980107876,-0.9848263185637637,0.009078523433878077],[0.1282076907497512,-0.9913906122022361,-0.026597783176266133],[0.1026683216669169,-0.9937451713074478,-0.04392892246834603],[0.08450156620338731,-0.9949200355998012,-0.054713874577339734],[0.08045752665673629,-0.9951358483222924,-0.05684390722102062],[0.06683114451542478,-0.9958017978481459,-0.06254900099249233],[-0.01769083294507494,-0.9961845016469112,-0.08546035986470339],[-0.017935448312549233,-0.9990682812144848,-0.03925416111653906],[-0.013050254802004382,-0.99896133350439,0.043657130147707716],[-0.013050254802004382,-0.99896133350439,0.043657130147707716],[-0.017935448312549233,-0.9990682812144848,-0.03925416111653906],[-0.01769083294507494,-0.9961845016469112,-0.08546035986470339],[-0.027299333193442535,-0.9957067424755177,-0.08844676023454154],[-0.05192742119794771,-0.9939517779751129,-0.09676469391179209],[-0.0913430173415097,-0.9894857774589504,-0.11213540649324495],[-0.07075328204248592,-0.9973067720025799,0.019317753441086914],[-0.07260925876186046,-0.9962905965686026,0.046183792947645845],[-0.07260925876186046,-0.9962905965686026,0.046183792947645845],[-0.07075328204248592,-0.9973067720025799,0.019317753441086914],[-0.0913430173415097,-0.9894857774589504,-0.11213540649324495],[-0.15406105044527207,-0.9783794485217473,-0.13798133006309643],[-0.16298809452223065,-0.9789782201166692,-0.12262351153514923],[-0.17698879860714004,-0.9801426620554399,-0.08941659346271777],[-0.2274700687727337,-0.9716676182570044,0.06418261013146903],[-0.2384732660253703,-0.9663570157133975,0.09635673081155019],[-0.2416781860368682,-0.9647087063237778,0.1045407400826692],[-0.25645512568449147,-0.9562137453860461,0.14101787704025895],[-0.26059960799154336,-0.9533094666684475,0.15260702826205066],[-0.2862588829102302,-0.9323383731667935,0.22090950607813195],[-0.2964723194926649,-0.9176547987684096,0.2646012737534513],[-0.31195722108334967,-0.8808136854306077,0.35615999743388455],[-0.306984263342314,-0.8804348701394107,0.3613794425569556],[-0.26969464406611016,-0.8756543719392873,0.4006172985102698],[-0.26794091297826755,-0.8753444367906446,0.40246712180256644],[-0.2573526129854775,-0.8733731288106149,0.41350817460009687],[-0.16187263184707865,-0.8432823289078283,0.5125155264093857],[-0.04864158871416897,-0.8916973777126237,0.4500108692329466],[-0.056799331027691025,-0.9828340493935573,0.1755308159482809],[-0.060769371861082444,-0.989554654231461,0.1307236387669159],[-0.060769371861082444,-0.989554654231461,0.1307236387669159],[-0.056799331027691025,-0.9828340493935573,0.1755308159482809],[-0.04864158871416897,-0.8916973777126237,0.4500108692329466],[-0.04585449625435904,-0.8924460201669514,0.4488178542141882],[0.0027565547547173893,-0.9027719671146167,0.430110656457021],],
[[-0.4296849237716742,-0.05987553109310373,-0.9009915577072015],[-0.42786905647495294,-0.05967682901535328,-0.9018684752168168],[-0.42457925203718405,-0.05823426611779229,-0.9035160369297646],[-0.40622411951302395,-0.05598502367261309,-0.912056819419846],[-0.39518871122290194,-0.058056849153536934,-0.9167634835596068],[-0.38430509839212973,-0.05678293393573334,-0.9214582409222166],[-0.37503458235321235,-0.05839809359620516,-0.9251695653789529],[-0.3744552918817348,-0.05833601448693086,-0.9254080958126234],[-0.363643124374,-0.06019168199326397,-0.9295916520248756],[-0.3544360686982552,-0.05916192783050548,-0.9332068042513962],[-0.33794929565463966,-0.06204592387572587,-0.9391169133270579],[-0.33121845396393357,-0.06131445875107577,-0.9415598084571178],[-0.3284017699219729,-0.0601726391641168,-0.942619504894812],[-0.22628254694385097,-0.04880998521292964,-0.9728380103039342],[-0.22398206740904164,-0.013021868830827945,-0.9745062669943813],[-0.22408471704696883,-0.009491534213703468,-0.9745234478268083],[-0.223485506223565,-0.00046208147150683204,-0.9747071431915899],[-0.2247614795237004,0.00995473805128687,-0.9743629613817674],[-0.22243506309027855,0.04241191798523828,-0.9740245745980115],[-0.22445590438113222,0.0592101032676494,-0.9726837670381275],[-0.2217304318489444,0.09415296594214967,-0.9705518196347772],[-0.2275585802241036,0.10079287206209926,-0.9685338866079306],[-0.23733991417505249,0.11465423945285738,-0.9646368075679393],[-0.2926131103984106,0.21725872142136127,-0.9312229677093037],[-0.311562550017962,0.24007262722224598,-0.9193986681983576],[-0.3330866037486402,0.25833365767086486,-0.9068169802763889],[-0.3372029496398808,0.2630715726506911,-0.9039289343843665],[-0.3501496693846706,0.2633523525490519,-0.8989108673481959],[-0.35813623124706184,0.2629614751826597,-0.895873708977951],[-0.36248821207973203,0.26244404175793556,-0.8942736835270276],[-0.38121630738772727,0.26278746205779685,-0.8863503126681278],[-0.38542276666730646,0.26255832912765903,-0.8845973178459285],[-0.419402053960039,0.25819068391747085,-0.8703099952731379],[-0.42626840577634645,0.2582657372044842,-0.8669452434976019],[-0.4396351511432636,0.2574256371256306,-0.8604957729295961],[-0.44316568859858885,0.2574524797133969,-0.8586747889267284],[-0.5360999476870486,0.24382858521858672,-0.8081735377505541],[-0.5515971231998611,0.1541127972587253,-0.8197498761199835],[-0.5558219480581925,0.10521285581858145,-0.8246164059896544],[-0.5559505737621765,0.10431850800200582,-0.8246433219409118],[-0.556129894569014,0.08764819738436325,-0.826460727356073],[-0.5577625115489182,0.06420967632451595,-0.8275132012100737],[-0.5592889990194854,0.05643937745400737,-0.8270492199672195],[-0.560573802370489,0.03510176182488574,-0.8273601866253181],[-0.5578017488208918,-0.00027266615238904016,-0.8299741771076521],[-0.5647637585142342,-0.07084010104086473,-0.8222065295005847],[-0.4440913722495498,-0.057237466994109275,-0.8941513996329762],[-0.4296849237716742,-0.05987553109310373,-0.9009915577072015],],
[[-0.39903250066943,-0.43409770039393264,-0.8076708797042276],[-0.4106084927769826,-0.47926579552662596,-0.7756964373372133],[-0.4149350134510732,-0.4921439662892183,-0.7652602505406082],[-0.3097987602098377,-0.533158844314098,-0.78725242133772],[-0.28241603242896646,-0.5399356782461893,-0.7929127619000143],[-0.27465217982801177,-0.5399455429946072,-0.7956286764037483],[-0.24980104965286676,-0.5428830500682228,-0.801796376607521],[-0.24898104111547664,-0.5428765212622719,-0.8020558109179358],[-0.23490457306822546,-0.5444394215292572,-0.8052363366344831],[-0.23243824748874703,-0.5450040801302557,-0.8055699930767866],[-0.21966077240839044,-0.5463563996972518,-0.8082350088772488],[-0.20848155624922082,-0.5461351677974102,-0.8113395215313978],[-0.19869545714153186,-0.5470951567442149,-0.8131463612280022],[-0.19663368756228003,-0.5470474440687124,-0.8136794742732231],[-0.17379552867097833,-0.5491535958955527,-0.8174505748538924],[-0.14630256178114456,-0.5546876464217481,-0.8190953395810381],[-0.0780066474051783,-0.574792985770809,-0.8145722720970086],[-0.09311389067327426,-0.48299463601707743,-0.8706583629314179],[-0.09277714069315583,-0.46964730230889806,-0.87796572461502],[-0.09127352479952196,-0.4625364579245976,-0.881889544535617],[-0.09366075026956436,-0.4471522334629464,-0.8895406364905658],[-0.09336871074118096,-0.43625692519329307,-0.8949649038232859],[-0.09527000147423438,-0.4236541263857526,-0.9008000932590007],[-0.09463748604154086,-0.4205945624799011,-0.9022992631317384],[-0.09408291705105246,-0.4010645796056292,-0.9112055792766662],[-0.09374276916139505,-0.3994554719521441,-0.9119471580949432],[-0.09303387473581172,-0.37587376743536866,-0.9219889419649152],[-0.09338628669543088,-0.3734124630286969,-0.9229529424147696],[-0.09436855918306318,-0.3703589789771051,-0.9240826812189205],[-0.11499802070042463,-0.21981568864727302,-0.9687396545303129],[-0.1545359223853383,-0.21411743349620133,-0.9645062847724284],[-0.15580476493158588,-0.21521554466151152,-0.9640576458701328],[-0.16966743667387085,-0.22574060830038373,-0.9592987744684609],[-0.1772659925539572,-0.23341923012329885,-0.9560817072261696],[-0.2171075872456176,-0.2679525871178444,-0.9386510036308706],[-0.26139031968085064,-0.29233908097925615,-0.9198983435735423],[-0.2838008521654858,-0.2974533584038055,-0.9115802629963208],[-0.3201082974079186,-0.3001390257884049,-0.8985806825930496],[-0.3639713009738284,-0.3171166010061659,-0.875763640164237],[-0.3934295914946333,-0.33804074770132286,-0.8549512321939169],[-0.39991124888311613,-0.3437072258470333,-0.8496683681986066],[-0.3987375472220807,-0.3638539516287331,-0.8417949098916402],[-0.39928827178109944,-0.36918780168939214,-0.8392075089641519],[-0.39935915202377326,-0.37311506762214836,-0.8374350207676847],[-0.3973610141966341,-0.40263415166244,-0.8246150400712381],[-0.3974746595013333,-0.4163408274971092,-0.8177250212714061],[-0.39903250066943,-0.43409770039393264,-0.8076708797042276],],
[[0.6175065895770869,0.6947527445469924,-0.3687875211735026],[0.6418862231701475,0.6677934825877886,-0.37687390612463023],[0.6566930474169408,0.6497971405643264,-0.38277658965599876],[0.6891386270346155,0.6055330009694735,-0.3980172577486418],[0.7548830575786958,0.4992892968614338,-0.4252784586835483],[0.7919914787610434,0.46799110483915896,-0.39208905029510743],[0.850569763519563,0.41446536391957617,-0.3236503352343205],[0.8521076196106292,0.41277407664597876,-0.32176103905004866],[0.8835539726176459,0.373029603069598,-0.2831630143668385],[0.9081852387315204,0.33477777006341836,-0.25124373986536763],[0.9083667133568557,0.3572273513651858,-0.217390279225816],[0.9056036587320052,0.38566626401376053,-0.1764753413167808],[0.8826789851653974,0.4666830237400317,-0.05554065628209012],[0.8793599128499174,0.47440706166200663,-0.04079317979523756],[0.8675628019593523,0.4970945305809033,0.015225384165570678],[0.8667834242990756,0.49834770431512165,0.018331965639743604],[0.850885136994769,0.517223348452954,0.09205700112705884],[0.8215618260274118,0.5404477637215893,0.18152790612695904],[0.7878583097842324,0.5567224518028528,0.26332374629446703],[0.6768251198235364,0.6833935577314814,0.27364393365642925],[0.6782785221189914,0.6943838064973384,0.2403526070304704],[0.6789662971066721,0.7037413613203972,0.2091718522176642],[0.6783453140331471,0.719666930544311,0.14807816858065587],[0.6760571477243758,0.7313776014378155,0.08963000125989988],[0.6754607578248257,0.7335149989290254,0.07555468870205322],[0.6732917513547099,0.7386502947825481,0.032771322453670815],[0.6653519145816981,0.7461324938346577,-0.02435428928429813],[0.6537395157703949,0.753285447299806,-0.0720116685449021],[0.5680094713231649,0.7719166687566261,-0.28549938175563894],[0.5550067422933261,0.7698947234418869,-0.3150073504305734],[0.5579069123835992,0.7633340680852284,-0.3256700440861193],[0.5589848698028339,0.7609890284151938,-0.32928955945065785],[0.5629566836234307,0.7526247684881876,-0.341519736211263],[0.5665049557026143,0.7452977554857927,-0.3515727390344971],[0.5899695113361823,0.7229479229759681,-0.3595584463734375],[0.6175065895770869,0.6947527445469924,-0.3687875211735026],],
[[0.14414257231323951,0.31740812412496605,-0.9372699726260266],[0.15115991977293136,0.3190222615977569,-0.9356150251354952],[0.17123267696710412,0.32232294566306235,-0.9310141186028094],[0.21660917895519954,0.3832968817094969,-0.8978663397544928],[0.23507463840901305,0.44120277406743186,-0.8660716058918423],[0.23521801547793167,0.4505415439964507,-0.8612112414082377],[0.23411540927537317,0.4591521730147773,-0.8569534743238005],[0.23438938688978786,0.477858451835662,-0.8465889884251117],[0.23337618433762372,0.4853735243864677,-0.8425841788264663],[0.23359686861673082,0.508420801996338,-0.8288189133157245],[0.23508205226302872,0.517981665981631,-0.8224545108458564],[0.23591112056898184,0.5206775162978139,-0.820512563714796],[0.25423827548937034,0.5590393653108091,-0.7892007902359695],[0.2766725052615725,0.5866372895776629,-0.7611235217159292],[0.3158414603954829,0.6446283412992138,-0.6962028967830234],[0.27490684410390237,0.6662218937887453,-0.6932348918666533],[0.22875720619404763,0.6819942941847285,-0.6946610132386646],[0.16350192515393014,0.6998707670707542,-0.6953042714314019],[0.10510661678391892,0.716575046298763,-0.6895453590085021],[0.08548704520513456,0.7233166613067148,-0.6852043290714112],[0.08377853567773758,0.7222234635112225,-0.6865671312505048],[0.07123529754946653,0.7122493790433476,-0.6983024806166771],[0.053247564625761835,0.7005743224718686,-0.7115899911848871],[0.04500577504475076,0.695762773869321,-0.7168602672141131],[0.032896905509343585,0.686560627679783,-0.7263279549403644],[-0.12411267888683859,0.5730509439018655,-0.8100670704532519],[-0.1291953832924711,0.5680935090289652,-0.8127596926121944],[-0.14020463201638153,0.5594122119224473,-0.8169459212905014],[-0.14715031451705574,0.5532973394054435,-0.819883430216997],[-0.14897466390843733,0.5518361627756788,-0.8205384811002971],[-0.15021630319825272,0.5251561518776554,-0.8376431688962213],[-0.15014029911370885,0.5211095779411268,-0.8401801582756325],[-0.15094893505618903,0.5022762819090723,-0.8514299475805398],[-0.15174384599459145,0.4945760404655684,-0.855785221536438],[-0.13852649030910397,0.48348735488388367,-0.8643207675105506],[-0.11812042839795277,0.4682934050836075,-0.8756419651605812],[-0.10954617966590299,0.45974780146166416,-0.8812670387412501],[-0.08212557969214827,0.4360177881441443,-0.8961829487231481],[-0.07975961260821142,0.43429716179253763,-0.8972315082828592],[0.027550527628336534,0.3799624811054376,-0.9245915213647594],[0.07609245602706118,0.34781032728718675,-0.9344719976372485],[0.07740530351778624,0.3467838083015398,-0.9347456388168924],[0.10740686120231265,0.3149965254664109,-0.9429957344075083],[0.10847979928632032,0.313980277816123,-0.9432118098758677],[0.11574021523978326,0.30786477271144647,-0.9443640634308244],[0.11652365805842292,0.3072770435536895,-0.9444591339055322],[0.14414257231323951,0.31740812412496605,-0.9372699726260266],],
[[0.41639630761838775,-0.3311399314136729,-0.8467351775054117],[0.4181801672648932,-0.33708816762793264,-0.8435027652305289],[0.42351080784381534,-0.39201872700283574,-0.8166761373510035],[0.4288324921021129,-0.4209352663737691,-0.7993223350065576],[0.4405138587307073,-0.4250291769046211,-0.7907576993276529],[0.46390080828270386,-0.43057582948225703,-0.7742095938053988],[0.47797952496418294,-0.4308976255039147,-0.7654167557939284],[0.5033001812722894,-0.4287988378674329,-0.7502136256925889],[0.5288296484995717,-0.42904050064052673,-0.7323001103905049],[0.5620746995666024,-0.43618409262922275,-0.702720050549531],[0.5655421736158873,-0.4381763189275135,-0.6986870282128842],[0.59691471202168,-0.39983822710853056,-0.695573302186608],[0.6008539940472793,-0.39565110733738373,-0.6945751788684463],[0.6189624904594372,-0.3723974832944288,-0.6915240775563978],[0.628610057263748,-0.3561138699923815,-0.6913988049641949],[0.6400816319002924,-0.32741428622636787,-0.6950506382118764],[0.6407659787044709,-0.323866740517583,-0.696081385271448],[0.6407357838425175,-0.31498429339250883,-0.7001732287225333],[0.6426865532417209,-0.3044995792570894,-0.7030177810799186],[0.6426313578023978,-0.2988286978698172,-0.7054972340827964],[0.6438347997822235,-0.29211549713050755,-0.7072095070950197],[0.643708050012884,-0.28527560360295545,-0.710111101404266],[0.6478004317013006,-0.2615476122972128,-0.7155050294646681],[0.6529488887247181,-0.24664059684481837,-0.716118820239482],[0.6553255326733238,-0.24198984014930483,-0.7155343202746731],[0.6755986279863037,-0.2130216613499715,-0.7058245289437894],[0.682923051824884,-0.1995651669462492,-0.7027018211360369],[0.703883811701856,-0.16710745247960423,-0.6903786489672483],[0.7095198216026218,-0.15515573185208695,-0.6873924073092653],[0.6840705242314955,-0.09827343055443005,-0.7227654188771836],[0.6309360312209992,-0.09719844956271632,-0.76972214851185],[0.6116548401017821,-0.10072591216402844,-0.7846863368243313],[0.60520259969507,-0.1012345662008857,-0.7896083687046684],[0.5999556053084848,-0.10057913613308929,-0.7936857747456806],[0.5823718682199103,-0.10015961424762178,-0.8067286153222899],[0.5733819363108152,-0.10170653753766318,-0.8129507582471156],[0.545573084842187,-0.10098842504763256,-0.8319563372570574],[0.5453164950727355,-0.10095759705312111,-0.8321282856620409],[0.5356238133510198,-0.10162414291941312,-0.8383195477544387],[0.519892208525926,-0.10119724553537776,-0.8482164871128641],[0.5060379558915603,-0.11913516154173845,-0.8542437594044894],[0.4799047080820088,-0.15866485921585036,-0.8628539468593375],[0.46874781951221894,-0.19799510119571773,-0.8608562142454672],[0.4640210583697725,-0.22805175487643106,-0.8559654516901816],[0.46386751555005995,-0.23452421228467363,-0.8542981457721118],[0.4534985037272248,-0.2684985512045154,-0.8498515371041254],[0.4399163235323724,-0.2986164275185507,-0.8469367494127406],[0.41639630761838775,-0.3311399314136729,-0.8467351775054117],],
[[0.06789498216777831,-0.2423935281983286,-0.967799384626795],[0.08592483361320738,-0.2575900327715705,-0.9624262558686166],[0.09360306722304812,-0.2673486182683582,-0.9590428468616182],[0.10894234744254408,-0.27913252345158085,-0.954052723535372],[0.13015867107137322,-0.2858699168466294,-0.9493877558653447],[0.1456479810522944,-0.2834285207090287,-0.9478686297499682],[0.1509099980852726,-0.28508552619828925,-0.9465476296680203],[0.1632296753139245,-0.28314033945140016,-0.9450860390844088],[0.17493251570148752,-0.28694556141030586,-0.941839083780915],[0.18687412005565296,-0.2851206830383388,-0.940098005187319],[0.18853293643693356,-0.28409149685391233,-0.9400783761441228],[0.20542289978058587,-0.28150889936546564,-0.9373122061638691],[0.21978161172120195,-0.2853718498960484,-0.9328767069855148],[0.2376104996970236,-0.2987334338756457,-0.9242832822888208],[0.24646232132665097,-0.31031491967706376,-0.918129062165062],[0.26328641107704687,-0.3244488331757771,-0.9085225480928061],[0.2655372858850648,-0.32707563627032377,-0.9069241853447048],[0.2701685707590906,-0.33101105233912825,-0.904124231841694],[0.29194885795364905,-0.32867119681331,-0.8981876801230724],[0.3263204308242332,-0.3156173082814945,-0.8910110499538325],[0.3115787249012419,-0.2722323517731894,-0.9103890623447509],[0.31106616639228823,-0.27145535991715936,-0.9107962602570626],[0.2878466166780335,-0.2506693632303873,-0.9242884807270301],[0.2868700340307952,-0.24697188057781508,-0.9255865566110109],[0.2671017880430871,-0.232906644259059,-0.9350995294000366],[0.28601957839592695,-0.22289929534345934,-0.9319381443580929],[0.23923799658798306,-0.20946912677819388,-0.9480969707341909],[0.2397474567186029,-0.20798440128092557,-0.948295125907951],[0.29222616388849193,-0.21011892172197758,-0.9329811937404793],[0.2695069796390683,-0.1929458757767342,-0.9434711850112731],[0.2912663148456566,-0.18604540638005446,-0.9383768116279896],[0.27036570215881295,-0.17486819336062912,-0.9467436305816701],[0.2895335328108564,-0.16425280683437593,-0.9429694315432999],[0.26142897628727035,-0.15544446726526312,-0.9526236969307496],[0.2849004094259732,-0.14772880647592954,-0.9471050398166564],[0.27452289777909933,-0.13425023772635492,-0.9521628286513728],[0.29014555257844377,-0.123454623073664,-0.948986045398292],[0.267136773061554,-0.11862594293763054,-0.9563293523365358],[0.26534089578925196,-0.10497148814501692,-0.9584232862876289],[0.2436404504429784,-0.08120692861461233,-0.9664599141469469],[0.22254110933485935,-0.04236998270972379,-0.9740021761891439],[0.21543752344540706,-0.04267263187914528,-0.9755848092196889],[0.1982218621096572,-0.04123849200238355,-0.9792892729725725],[0.17306998859098313,-0.03287490398645696,-0.9843607162707168],[0.14777129937351594,-0.021260197441561265,-0.9887930254032988],[0.13711746043486947,-0.015051710541872066,-0.9904404313504451],[0.1331640047614018,-0.019098799415066346,-0.9909099775947402],[0.10245931969055691,-0.057038551382192264,-0.9931005444892119],[0.045340037306685683,-0.14946906818560002,-0.9877263176977502],[0.017621009780960248,-0.1778428484344314,-0.9839011237289178],[0.017589231649057947,-0.17786827799773733,-0.9838970955400343],[0.004648756673741057,-0.1910607287832221,-0.981567209608294],[0.01429992051005982,-0.19687590325828933,-0.9803241254756708],[0.01728205025441678,-0.19901976603559832,-0.9798430810421328],[0.06704147141014723,-0.2414154253480008,-0.9681033175829976],[0.06789498216777831,-0.2423935281983286,-0.967799384626795],],
[[0.41849880664022654,-0.6356692840131961,-0.6486781252692716],[0.40584702825896773,-0.6466435196347962,-0.6458640322604192],[0.402288313082198,-0.6472304459569743,-0.6475004733464027],[0.40138192376343124,-0.6390833707472864,-0.6560983131438867],[0.389306387549528,-0.6230926324124595,-0.6783775556771086],[0.37039831257540884,-0.6361088163177925,-0.6768830503447895],[0.3602336737834112,-0.6505047402787253,-0.6686368843755296],[0.3564275164388493,-0.6478288555191842,-0.6732586423373546],[0.3541008084136279,-0.6471894935824177,-0.6750987904576254],[0.33992059679642583,-0.6364867548912274,-0.6923428332275827],[0.34071896638365284,-0.624482577069703,-0.7028030285100071],[0.34330753263790337,-0.6220975364884521,-0.7036580086441667],[0.34398343224884903,-0.609344235236113,-0.7144053480502636],[0.3448013307061223,-0.6085207467707529,-0.7147129095607919],[0.34550376793295556,-0.596427280551297,-0.7245009629795636],[0.34586679736495735,-0.5960651546541769,-0.7246257585040707],[0.34636598054018747,-0.5779565503839141,-0.7389159853412027],[0.33714740931333786,-0.5691977534523087,-0.7498970208356275],[0.31630944813373346,-0.5614696963405281,-0.7646568597172252],[0.30609144529695465,-0.5597719722676434,-0.7700411457705454],[0.3308052241095972,-0.5354573141811488,-0.77708002701891],[0.3549139653546459,-0.49735719901671444,-0.7916261073148672],[0.3693921344484219,-0.48170994184162114,-0.7946728779432332],[0.37825777621720225,-0.4743667486263078,-0.7949196453283328],[0.3888729921423952,-0.4630755215831027,-0.7964539266603926],[0.3957770113417018,-0.45391503779408016,-0.7983243048773032],[0.39962330579873634,-0.4496733546848727,-0.7988085424862096],[0.4163568842717194,-0.43404553081759895,-0.7989063913230479],[0.4265791435631512,-0.42283613206515563,-0.7995247586517298],[0.4288324921021129,-0.4209352663737691,-0.7993223350065576],[0.4405138587307073,-0.4250291769046211,-0.7907576993276529],[0.46390080828270386,-0.43057582948225703,-0.7742095938053988],[0.47797952496418294,-0.4308976255039147,-0.7654167557939284],[0.5033001812722894,-0.4287988378674329,-0.7502136256925889],[0.5288296484995717,-0.42904050064052673,-0.7323001103905049],[0.5620746995666024,-0.43618409262922275,-0.702720050549531],[0.5655421736158873,-0.4381763189275135,-0.6986870282128842],[0.5887276080198186,-0.5079099450832498,-0.6288300972765164],[0.595187238282228,-0.5206078703953021,-0.6121434445196997],[0.5899651721695057,-0.5257497837613248,-0.6128036067957873],[0.5801464205259553,-0.5360265891858744,-0.6132745114846037],[0.5785285667756691,-0.5379868684796485,-0.6130863126574853],[0.5509058728467864,-0.5660207759822601,-0.6132888393076794],[0.5506077755011977,-0.5662891370896124,-0.6133088053924588],[0.5291959612747109,-0.5872925042090812,-0.6124043999436657],[0.5157063840849705,-0.5986367023321106,-0.6129282372634997],[0.5036226314216844,-0.6103034681662125,-0.6114686597563206],[0.49302803105911475,-0.6186932789179407,-0.6116714699998195],[0.4784583410075728,-0.6278039803435668,-0.6139542150560218],[0.4705761892074182,-0.6313708134117246,-0.61638376529792],[0.4652697631310827,-0.6299587717275494,-0.6218327696732165],[0.45019929551559246,-0.6191094905775834,-0.643446993150197],[0.43693652697203855,-0.6217671904070197,-0.6499938709949303],[0.446768442921823,-0.607420576720803,-0.656839555283767],[0.45072557959651965,-0.6069893794437141,-0.6545306296422776],[0.4546202343044154,-0.6034707904867644,-0.6550904117679316],[0.4559667252099357,-0.5915598140941484,-0.6649446081067383],[0.45414663474588207,-0.5901853673713919,-0.6674069720115947],[0.4553347356728349,-0.5808235612504995,-0.6747697897698421],[0.4571741947688475,-0.5788379271529545,-0.6752321154438132],[0.4585326460864114,-0.5641375590624851,-0.6866561198504058],[0.444730070202987,-0.5536739163650087,-0.7040315042626145],[0.44395217075311133,-0.5521833901493591,-0.7056911319598405],[0.44024010145435233,-0.5491935403935388,-0.7103345044846632],[0.42910997337825113,-0.5669292366986904,-0.7031755622343235],[0.411939884008644,-0.5786885717940662,-0.7038643824188642],[0.39774697550502564,-0.5636298947396055,-0.7239604168961351],[0.39514482039557586,-0.5526909447032984,-0.7337528811238316],[0.38753879365392047,-0.5592718882939562,-0.7328223784638244],[0.38634788248841573,-0.5609102139989143,-0.7321987746018218],[0.3639070112202793,-0.5794418636420775,-0.7292590855407423],[0.3552097095728042,-0.5791324707574055,-0.7337790154669369],[0.35372677264153607,-0.593819146879839,-0.722672948930222],[0.363242628171816,-0.5918652269257809,-0.7195487101197012],[0.3748230467223525,-0.5994771835829327,-0.7072020856935082],[0.37677775110524864,-0.6037514999884671,-0.7025116743042407],[0.3790512498054385,-0.6040743908815601,-0.7010094723340102],[0.3934922258005676,-0.6016717443898648,-0.6950935046721214],[0.39796160868063296,-0.6022241908013111,-0.6920640013972905],[0.4035013746011011,-0.6012686341782894,-0.6896830215746915],[0.40822088540888846,-0.6018198899037946,-0.6864171682236451],[0.41629886048385356,-0.6003712761354412,-0.6828247136354594],[0.42243371998400536,-0.5973912610558089,-0.6816695925700555],[0.43373492584109175,-0.5998817197585978,-0.6723213044408826],[0.4383252833799485,-0.6072711891125102,-0.6626406634245787],[0.429127018998783,-0.6241055636288997,-0.6529488854517418],[0.4234533666084823,-0.6283607120394493,-0.6525718825334252],[0.41849880664022654,-0.6356692840131961,-0.6486781252692716]]

  ];


//const polygonGeoJson = [[[40.935,-30.625],[45.525,-20.065], [50.58,-40.94],[45.525,-35.065]]];
//const polygonGeoJson = [[[50, 20],[52, 22], [54,24], [56,26], [58,28], [60,30], [62,32], [64,34],[66,36], [68, 40],[70, 42], [100, 15],[70, 10]]];

const tempV = new THREE.Vector3();
const myV = new THREE.Vector3();

const cameraToPoint = new THREE.Vector3();
const cameraPosition = new THREE.Vector3();
const normalMatrix = new THREE.Matrix3();
const settings = {
  minArea: 20,
  maxVisibleDot: -0.2,
};


  const width = 1200
  //const height = 1000
  const height = 700
  const globeRadius = 200
  const globeSegments = 64
  const globeWidth = 4098 / 2
  const globeHeight = 1968 / 2


const smacofNodes =[[0.7857487177938283, -0.602763002856799, -0.1388370082953718],
[0.037465015161484524, 0.06473111782640666, -0.997199205286433],
[0.8687568656100297, -0.3396351851476497, -0.36042953467378136],
[-0.1816743347025578, 0.4704087930246614, 0.8635450211514535],
[0.6288391168620967, -0.7369011735489979, 0.24806859036606763],
[-0.4282845392652252, -0.7808567305781816, 0.45479129250363487],
[0.738115866978828, -0.46922403491848885, -0.4847821902348577],
[0.8460778314846338, 0.0564480666598323, -0.5300621839375327],
[0.16639045203251523, -0.11818566942874545, -0.9789516663319464],
[0.7928687118218075, 0.2834116221750395, -0.5394785058092122],
[0.9086893578366636, 0.4174724692916936, 0.0006231676243889694],
[0.3976040914614972, 0.9175043876039419, -0.00983286227874449],
[0.722303315515309, 0.645716576928572, -0.24764495285638202],
[0.053779862712602745, -0.6701032644496039, -0.7403170546060641],
[0.21254960816189525, 0.8525406963945914, 0.47749034028056514],
[-0.3113648748369546, -0.2861686466038752, -0.9061784705115619],
[-0.5448186795911854, 0.21875430337266769, -0.8095178571992444],
[-0.10977027972195413, -0.3885392065299319, -0.9148703573069],
[0.22736373644643953, -0.372501564466572, -0.8997490293515578],
[0.5100782013569277, -0.23990041649660393, -0.8259951686694285],
[-0.7532193900893147, -0.6577506074603742, 0.004968780432799304],
[0.5872990960070343, 0.06864543056341403, 0.8064537039979938],
[0.443848160926263, -0.8941993178480168, -0.058364287047096106],
[0.9627556115299772, -0.025759105519354793, -0.2691432721625833],
[0.46151991513932944, -0.22250123581815567, -0.8587738747709898],
[0.36897103170059925, 0.23955780734598456, -0.898038103147845],
[-0.9605432454229473, -0.11183554793541996, 0.2546556182186759],
[0.49928635213134503, -0.3879158267745646, -0.7747479912288773],
[-0.21081913076414577, -0.6301575601310694, -0.7472996343592762],
[0.6626192173500258, 0.5546253618297272, -0.5033154883506799],
[0.2539072959872098, 0.8666506485792427, -0.4294737924037292],
[0.44175397789312815, -0.617325825255177, 0.6509702362540183],
[-0.9266764473368174, 0.09632655565578879, -0.36330697299488596],
[-0.7095002302010147, -0.20993541298737348, -0.6727083660238871],
[0.453549098831861, 0.5282370246467194, -0.7178153388868113],
[0.4589340786743188, 0.13850574794738962, -0.8776079245408442],
[-0.07301745456610823, -0.8623088384507975, -0.5010907287690751],
[-0.11541219633335087, 0.7881798920761519, -0.6045266600112337],
[0.548148632468441, -0.5782237868404021, -0.6043097955973602],
[0.7786626787493228, -0.2111654655599702, -0.5908414160142887],
[-0.7286431444478968, 0.653751165988538, 0.20417781715384298],
[-0.2962577646290999, 0.5091010006305366, -0.8081135489855094],
[-0.6405204379006452, 0.5940831085213996, -0.48661979902292973],
[0.7074545474685867, 0.011372368755488412, -0.706667342173746],
[0.4902995925313779, -0.7837015504986381, -0.38133736941138546],
[0.2609921837428194, -0.7144502935422833, -0.6491870747962407],
[-0.7097621703904815, -0.5581059171415933, -0.42983188194238686],
[0.06299364285705733, -0.9534171777745879, 0.2950042136714958],
[0.12329699780755186, -0.9735832703458787, -0.19218081598918302],
[0.4117784841507033, -0.027922122407759313, -0.9108561000897974],
[0.7532838992189481, 0.5189354515736511, 0.40406603950041203],
[-0.15929523517058, -0.3536839608179429, 0.9217009731534851],
[0.9397234358950075, -0.34156546349352507, 0.015902772655579784],
[-0.2094508820238759, 0.963290895858766, -0.1679314680905174],
[0.05711443437175791, 0.46601787935691363, -0.882929939183217],
[0.9660506591632946, 0.11058471000152091, 0.23348907007404726],
[-0.26488945464549246, -0.02580340841001299, -0.9639334836657764],
[-0.39522991439881433, -0.8961779013982917, -0.2016394897078936],
[0.8458929211225115, -0.28953499636609087, 0.44792259585123917],
];

/*
const gNodes = [
  {label: "Drawing", x: 260, y: 1300},
  {label: "Visualization", x: 2000, y: 242},
  {label: "Graph", x: 271, y: 160},
  {label: "Arizona", x: 670, y: 160},
  {label: "University", x: 415, y: 16},
  {label: "Map", x: 513, y: 1310}

];
*/

//const gLabels =[{label: " Yeah Yeah\nYeahs ", pos: [-0.6484715906070737,0.5023221387849495,0.571976454989229]},{label: " Kaiser Chiefs ", pos: [-0.6637151119172455,-0.441612497413409,0.6037057663638554]},{label: " The Who ", pos: [-0.6494145469872397,-0.11468619108179029,-0.7517365387797171]},{label: " The White\nStripes ", pos: [-0.08847718625429951,0.5426057043823034,0.8353148131598687]},{label: "Keane", pos: [-0.6874414386913246,-0.5119922042602615,0.5150614052195334]},{label: "Weezer", pos: [0.3534560134012944,0.06875380302563186,0.9329210905323001]},{label: " Arctic Monkeys ", pos: [-0.853837937204656,-0.00859316731741716,0.5204679956208189]},{label: " The Rolling\nStones ", pos: [-0.4313108271280146,-0.1322593176591244,-0.8924564097447507]},{label: "Aerosmith", pos: [0.027876945306506834,-0.5162942672786924,-0.8559574203752989]},{label: " Snow Patrol ", pos: [-0.6270309504227837,-0.661933103608522,0.41070275572375964]},{label: " The Offspring ", pos: [0.8888761422735048,0.2525337889620144,-0.38226416145050907]},{label: "Coldplay", pos: [-0.5976651027150742,-0.4311858845759702,0.6759254085614903]},{label: " R.E.M. ", pos: [0.36322424970854206,-0.42329348515372334,0.8299944396500986]},{label: " Pearl Jam ", pos: [0.5651814821956346,-0.37092465969318833,0.7368750158708313]},{label: " The Beatles ", pos: [-0.6494145469872977,-0.1146861910817823,-0.7517365387796682]},{label: " Linkin Park ", pos: [0.6051348049463176,-0.7876084361592253,-0.11612415396204886]},{label: " System of\na Down ", pos: [0.779490890462196,-0.584108029331144,-0.2263001585446638]},{label: " Jimi Hendrix ", pos: [-0.6494145469873451,-0.11468619108178091,-0.7517365387796273]},{label: " Foo Fighters ", pos: [0.8630558719778304,-0.042469724318075386,0.5033198628714479]},{label: " Modest Mouse ", pos: [-0.11944005911056044,-0.9921761699987698,-0.03633895934445186]},{label: "Moby", pos: [0.13978278379273856,0.8343873146817246,-0.5331590592434616]},{label: " Bob Dylan ", pos: [0.1338056133217735,0.2007006614748038,-0.9704716906366513]},{label: "Metallica", pos: [0.48471574640870074,-0.633696362144527,-0.6028926652300959]},{label: " The Strokes ", pos: [-0.5178619173409718,0.19687574690199147,0.832501636544767]},{label: " Guns N'\nRoses ", pos: [0.3023737753559741,-0.6101761770983123,-0.7322944304572196]},{label: " Daft Punk ", pos: [0.4334689534739634,0.9010905481935444,0.011852861698523953]},{label: " The Shins ", pos: [-0.13080735766250617,-0.9889073822434338,-0.0703677804523643]},{label: " Massive Attack ", pos: [0.01799459639787948,0.8564317699584043,-0.5159465262082809]},{label: "Gorillaz", pos: [0.3115937854714979,0.8639597115342085,0.39557923315218296]},{label: " Death Cab\nfor Cutie ", pos: [-0.21683684503472284,-0.9761501316109478,-0.010616175927172955]},{label: " Led Zeppelin ", pos: [-0.5206578119471379,-0.23115207083450376,-0.8218784356626834]},{label: " Rage Against\nthe Machine ", pos: [0.994297184452835,-0.053541498157025025,0.09223023888219359]},{label: "Beck", pos: [0.16542995801759758,0.7936631469881772,0.5854329492803757]},{label: "Blur", pos: [0.04404526432046102,0.8477390690978567,0.5285815787709973]},{label: " The Smashing\nPumpkins ", pos: [0.5031243854468209,-0.03940959955206036,0.8633149693083659]},{label: "Oasis", pos: [-0.9046564648290667,-0.3978997373270689,0.15255320277865292]},{label: " The Doors ", pos: [-0.6494145469873511,-0.1146861910817687,-0.751736538779624]},{label: " The Chemical\nBrothers ", pos: [0.31430605995502486,0.9261582098493617,-0.20842905508631498]},{label: " Green Day ", pos: [0.8297718886776564,0.30055271742086626,-0.47026234891946006]},{label: " Pink Floyd ", pos: [-0.7189812939204325,-0.10853886570071852,-0.6865021584998128]},{label: " Red Hot\nChili Peppers ", pos: [0.9378535990036352,0.22949411519039614,0.2603134224908612]},{label: " AC/DC ", pos: [0.2099741585444356,-0.5953129533102823,-0.7755729110564303]},{label: "Placebo", pos: [-0.49803928172554557,0.4390109608522058,0.7478143152614327]},{label: "Air", pos: [-0.071089317244862,0.8145002917677987,-0.575791267460553]},{label: "Portishead", pos: [-0.2832221306768191,0.8555120379410514,-0.43345631571454984]},{label: " Queens of the\nStone Age ", pos: [0.9449994689155403,-0.30751346747744573,0.11140678197194508]},{label: "Nirvana", pos: [0.765575038202696,-0.0700659279337989,0.6395198406802685]},{label: "Bjork", pos: [-0.40933428519957493,0.9048905900169051,-0.11669817076120027]},{label: " The Killers ", pos: [-0.6927066124350403,-0.1951222460381846,0.694323309553831]},{label: " blink-182 ", pos: [0.7659922759467379,0.2810489574040383,-0.5781585567403109]},{label: "Muse", pos: [-0.4439781692946708,-0.012046125150602216,0.8959566262150241]},{label: "Radiohead", pos: [-0.038522972257015675,0.6417664922787167,0.7659319486721758]},{label: "U2", pos: [0.14780865381146147,-0.6916968197990542,0.7069003546033331]},{label: "Interpol", pos: [-0.7244063063707489,0.36183093324316373,0.5867826505944683]},{label: " The Cranberries ", pos: [0.25546000903445226,-0.785717931663686,0.5633715609136268]},{label: " Franz Ferdinand ", pos: [-0.6843346909945398,0.13601681743072414,0.716369636484842]},{label: " Bloc Party ", pos: [-0.9114775014172781,0.15949225031480646,0.37917144736864705]},{label: " The Cure ", pos: [-0.7815821697849745,0.6099458859439891,-0.13074910360768507]},{label: "Incubus", pos: [0.9566107265653049,0.1974166001053531,0.21429559916863083]},]
const gLabelTable = new Object();  //label and position. For now create our own data as good data is not available yet.

const gNodes = [
  {label: "Yeah Yeah\nYeahs", pos: [0.7857487177938283, -0.602763002856799, -0.1388370082953718]},
  {label: "Kaiser Chiefs", pos: [0.037465015161484524, 0.06473111782640666, -0.997199205286433]},
  {label: "The Who", pos: [0.8687568656100297, -0.3396351851476497, -0.36042953467378136]},
  {label: "The White\nStripes", pos: [-0.1816743347025578, 0.4704087930246614, 0.8635450211514535]},
  {label: "Linkin Park", pos: [0.6288391168620967, -0.7369011735489979, 0.24806859036606763]},
  {label: "Weezer", pos: [-0.4282845392652252, -0.7808567305781816, 0.45479129250363487]},
  {label: "Arctic Monkeys", pos: [0.738115866978828, -0.46922403491848885, -0.4847821902348577]},
  {label: "The Rolling\nStones", pos: [0.8460778314846338, 0.0564480666598323, -0.5300621839375327]},
  {label: "Jimi Hendrix", pos: [0.16639045203251523, -0.11818566942874545, -0.9789516663319464]},
  {label: "Snow Patrol", pos: [0.7928687118218075, 0.2834116221750395, -0.5394785058092122]},
  {label: "The Offspring", pos: [0.9086893578366636, 0.4174724692916936, 0.0006231676243889694]},
  {label: "R.E.M.", pos: [0.3976040914614972, 0.9175043876039419, -0.00983286227874449]},
  {label: "Pearl Jam", pos: [0.722303315515309, 0.645716576928572, -0.24764495285638202]},
  {label: "The Beatles", pos: [0.053779862712602745, -0.6701032644496039, -0.7403170546060641]},
  {label: "System of\na Down", pos: [0.21254960816189525, 0.8525406963945914, 0.47749034028056514]},
  {label: "Aerosmith", pos: [-0.3113648748369546, -0.2861686466038752, -0.9061784705115619]},
  {label: "Foo Fighters", pos: [-0.5448186795911854, 0.21875430337266769, -0.8095178571992444]},
  {label: "Modest Mouse", pos: [-0.10977027972195413, -0.3885392065299319, -0.9148703573069]},
  {label: "Moby", pos: [0.22736373644643953, -0.372501564466572, -0.8997490293515578]},
  {label: "Bob Dylan", pos: [0.5100782013569277, -0.23990041649660393, -0.8259951686694285]},
  {label: "Metallica", pos: [-0.7532193900893147, -0.6577506074603742, 0.004968780432799304]},
  {label: "The Smashing\nPumpkins", pos: [0.5872990960070343, 0.06864543056341403, 0.8064537039979938]},
  {label: "Guns N'\nRoses", pos: [0.443848160926263, -0.8941993178480168, -0.058364287047096106]},
  {label: "Daft Punk", pos: [0.9627556115299772, -0.025759105519354793, -0.2691432721625833]},
  {label: "The Shins", pos: [0.46151991513932944, -0.22250123581815567, -0.8587738747709898]},
  {label: "Massive Attack", pos: [0.36897103170059925, 0.23955780734598456, -0.898038103147845]},
  {label: "Gorillaz", pos: [-0.9605432454229473, -0.11183554793541996, 0.2546556182186759]},
  {label: "blink-182", pos: [0.49928635213134503, -0.3879158267745646, -0.7747479912288773]},
  {label: "Keane", pos: [-0.21081913076414577, -0.6301575601310694, -0.7472996343592762]},
  {label: "Led Zeppelin", pos: [0.6626192173500258, 0.5546253618297272, -0.5033154883506799]},
  {label: "Rage Against\nthe Machine", pos: [0.2539072959872098, 0.8666506485792427, -0.4294737924037292]},
  {label: "Beck", pos: [0.44175397789312815, -0.617325825255177, 0.6509702362540183]},
  {label: "Coldplay", pos: [-0.9266764473368174, 0.09632655565578879, -0.36330697299488596]},
  {label: "The Strokes", pos: [-0.7095002302010147, -0.20993541298737348, -0.6727083660238871]},
  {label: "Oasis", pos: [0.453549098831861, 0.5282370246467194, -0.7178153388868113]},
  {label: "The Doors", pos: [0.4589340786743188, 0.13850574794738962, -0.8776079245408442]},
  {label: "The Chemical\nBrothers", pos: [-0.07301745456610823, -0.8623088384507975, -0.5010907287690751]},
  {label: "Green Day", pos: [-0.11541219633335087, 0.7881798920761519, -0.6045266600112337]},
  {label: "Pink Floyd", pos: [0.548148632468441, -0.5782237868404021, -0.6043097955973602]},
  {label: "Death Cab\nfor Cutie", pos: [0.7786626787493228, -0.2111654655599702, -0.5908414160142887]},
  {label: "Red Hot\nChili Peppers", pos: [-0.7286431444478968, 0.653751165988538, 0.20417781715384298]},
  {label: "AC/DC", pos: [-0.2962577646290999, 0.5091010006305366, -0.8081135489855094]},
  {label: "Placebo", pos: [-0.6405204379006452, 0.5940831085213996, -0.48661979902292973]},
  {label: "Air", pos: [0.7074545474685867, 0.011372368755488412, -0.706667342173746]},
  {label: "Portishead", pos: [0.4902995925313779, -0.7837015504986381, -0.38133736941138546]},
  {label: "Queens of the\nStone Age", pos: [0.2609921837428194, -0.7144502935422833, -0.6491870747962407]},
  {label: "Nirvana", pos: [-0.7097621703904815, -0.5581059171415933, -0.42983188194238686]},
  {label: "Bjork", pos: [0.06299364285705733, -0.9534171777745879, 0.2950042136714958]},
  {label: "The Killers", pos: [0.12329699780755186, -0.9735832703458787, -0.19218081598918302]},
  {label: "The Cure", pos: [0.4117784841507033, -0.027922122407759313, -0.9108561000897974]},
  {label: "Muse", pos: [0.7532838992189481, 0.5189354515736511, 0.40406603950041203]},
  {label: "Radiohead", pos: [-0.15929523517058, -0.3536839608179429, 0.9217009731534851]},
  {label: "U2", pos: [0.9397234358950075, -0.34156546349352507, 0.015902772655579784]},
  {label: "Interpol", pos: [-0.2094508820238759, 0.963290895858766, -0.1679314680905174]},
  {label: "The Cranberries", pos: [0.05711443437175791, 0.46601787935691363, -0.882929939183217]},
  {label: "Franz Ferdinand", pos: [0.9660506591632946, 0.11058471000152091, 0.23348907007404726]},
  {label: "Bloc Party", pos: [-0.26488945464549246, -0.02580340841001299, -0.9639334836657764]},
  {label: "Blur", pos: [-0.39522991439881433, -0.8961779013982917, -0.2016394897078936]},
  {label: "Incubus", pos: [0.8458929211225115, -0.28953499636609087, 0.44792259585123917]}
  ];


const gEdges = [{from: " Yeah Yeah\nYeahs ", to: " The White\nStripes "},
{from: " Yeah Yeah\nYeahs ", to: "Placebo"},
{from: " Yeah Yeah\nYeahs ", to: "Interpol"},
{from: " Yeah Yeah\nYeahs ", to: " The Strokes "},
{from: " Yeah Yeah\nYeahs ", to: " Franz Ferdinand "},
{from: " Yeah Yeah\nYeahs ", to: " Bloc Party "},
{from: " Kaiser Chiefs ", to: " Arctic Monkeys "},
{from: " Kaiser Chiefs ", to: "Keane"},
{from: " Kaiser Chiefs ", to: " The Killers "},
{from: " Kaiser Chiefs ", to: "Muse"},
{from: " Kaiser Chiefs ", to: "Coldplay"},
{from: " Kaiser Chiefs ", to: " Franz Ferdinand "},
{from: " Kaiser Chiefs ", to: " Snow Patrol "},
{from: " The Who ", to: " The Doors "},
{from: " The Who ", to: " Pink Floyd "},
{from: " The Who ", to: " The Beatles "},
{from: " The Who ", to: " The Rolling\nStones "},
{from: " The Who ", to: " Jimi Hendrix "},
{from: " The Who ", to: " Led Zeppelin "},
{from: " The White\nStripes ", to: " Red Hot\nChili Peppers "},
{from: " The White\nStripes ", to: "Gorillaz"},
{from: " The White\nStripes ", to: "Placebo"},
{from: " The White\nStripes ", to: "Weezer"},
{from: " The White\nStripes ", to: "Muse"},
{from: " The White\nStripes ", to: "Radiohead"},
{from: " The White\nStripes ", to: "Beck"},
{from: " The White\nStripes ", to: " The Strokes "},
{from: " The White\nStripes ", to: " Franz Ferdinand "},
{from: "Keane", to: "Oasis"},{from: "Keane", to: " The Killers "},
{from: "Keane", to: "Muse"},{from: "Keane", to: "Coldplay"},
{from: "Keane", to: " Franz Ferdinand "},
{from: "Keane", to: " Snow Patrol "},
{from: "Weezer", to: " R.E.M. "},
{from: "Weezer", to: " Red Hot\nChili Peppers "},
{from: "Weezer", to: " Foo Fighters "},
{from: "Weezer", to: "Muse"},
{from: "Weezer", to: " The Strokes "},
{from: "Weezer", to: " The Smashing\nPumpkins "},
{from: " Arctic Monkeys ", to: "Oasis"},
{from: " Arctic Monkeys ", to: " The Killers "},
{from: " Arctic Monkeys ", to: "Muse"},
{from: " Arctic Monkeys ", to: "Interpol"},
{from: " Arctic Monkeys ", to: " The Strokes "},
{from: " Arctic Monkeys ", to: " Franz Ferdinand "},
{from: " Arctic Monkeys ", to: " Bloc Party "},
{from: " The Rolling\nStones ", to: " The Doors "},
{from: " The Rolling\nStones ", to: " Bob Dylan "},
{from: " The Rolling\nStones ", to: " The Beatles "},
{from: " The Rolling\nStones ", to: " Jimi Hendrix "},
{from: " The Rolling\nStones ", to: " Led Zeppelin "},
{from: " The Rolling\nStones ", to: "Aerosmith"},
{from: "Aerosmith", to: " Led Zeppelin "},
{from: "Aerosmith", to: " AC/DC "},
{from: "Aerosmith", to: " Guns N'\nRoses "},
{from: " Snow Patrol ", to: " Death Cab\nfor Cutie "},
{from: " Snow Patrol ", to: " The Killers "},
{from: " Snow Patrol ", to: "Coldplay"},
{from: " Snow Patrol ", to: " Bloc Party "},
{from: " The Offspring ", to: " Rage Against\nthe Machine "},
{from: " The Offspring ", to: " Green Day "},
{from: " The Offspring ", to: " blink-182 "},
{from: " The Offspring ", to: " Red Hot\nChili Peppers "},
{from: "Coldplay", to: "Oasis"},{from: "Coldplay", to: "Placebo"},
{from: "Coldplay", to: " The Killers "},{from: "Coldplay", to: "Muse"},
{from: "Coldplay", to: "Radiohead"},{from: "Coldplay", to: "U2"},
{from: "Coldplay", to: " Franz Ferdinand "},
{from: " R.E.M. ", to: " Pearl Jam "},
{from: " R.E.M. ", to: "Radiohead"},{from: " R.E.M. ", to: "U2"},{from: " R.E.M. ", to: " The Cranberries "},{from: " R.E.M. ", to: " The Smashing\nPumpkins "},{from: " Pearl Jam ", to: "U2"},{from: " Pearl Jam ", to: "Nirvana"},{from: " Pearl Jam ", to: " The Smashing\nPumpkins "},{from: " Pearl Jam ", to: " Foo Fighters "},{from: " The Beatles ", to: " Led Zeppelin "},{from: " The Beatles ", to: " Pink Floyd "},{from: " The Beatles ", to: " The Doors "},{from: " Linkin Park ", to: " System of\na Down "},{from: " System of\na Down ", to: " Rage Against\nthe Machine "},{from: " System of\na Down ", to: "Metallica"},{from: " System of\na Down ", to: " Red Hot\nChili Peppers "},{from: " Jimi Hendrix ", to: " Led Zeppelin "},{from: " Jimi Hendrix ", to: " The Doors "},{from: " Jimi Hendrix ", to: " Pink Floyd "},{from: " Foo Fighters ", to: " Red Hot\nChili Peppers "},{from: " Foo Fighters ", to: " Queens of the\nStone Age "},{from: " Foo Fighters ", to: "Nirvana"},{from: " Foo Fighters ", to: " Rage Against\nthe Machine "},{from: " Foo Fighters ", to: " The Smashing\nPumpkins "},{from: " Foo Fighters ", to: "Incubus"},{from: " Modest Mouse ", to: "Beck"},{from: " Modest Mouse ", to: " The Shins "},{from: " Modest Mouse ", to: " Death Cab\nfor Cutie "},{from: "Moby", to: " Massive Attack "},{from: "Moby", to: " The Chemical\nBrothers "},{from: "Moby", to: "Air"},{from: "Metallica", to: " AC/DC "},{from: "Metallica", to: " Guns N'\nRoses "},{from: " The Strokes ", to: " The Killers "},{from: " The Strokes ", to: "Muse"},{from: " The Strokes ", to: "Interpol"},{from: " The Strokes ", to: " Franz Ferdinand "},{from: " Guns N'\nRoses ", to: " AC/DC "},{from: " Daft Punk ", to: "Gorillaz"},{from: " Daft Punk ", to: " The Chemical\nBrothers "},{from: " The Shins ", to: " Death Cab\nfor Cutie "},{from: " Massive Attack ", to: " The Chemical\nBrothers "},{from: " Massive Attack ", to: "Portishead"},{from: " Massive Attack ", to: "Air"},{from: "Gorillaz", to: " The Chemical\nBrothers "},{from: "Gorillaz", to: " Red Hot\nChili Peppers "},{from: "Gorillaz", to: "Blur"},{from: "Gorillaz", to: "Radiohead"},{from: "Gorillaz", to: "Beck"},{from: " Led Zeppelin ", to: " The Doors "},{from: " Led Zeppelin ", to: " Pink Floyd "},{from: " Led Zeppelin ", to: " AC/DC "},{from: " Rage Against\nthe Machine ", to: " Red Hot\nChili Peppers "},{from: " Rage Against\nthe Machine ", to: " Queens of the\nStone Age "},{from: " Rage Against\nthe Machine ", to: "Muse"},{from: " Rage Against\nthe Machine ", to: "Incubus"},{from: "Beck", to: "Radiohead"},{from: "Beck", to: "Blur"},{from: "Blur", to: " Franz Ferdinand "},{from: "Blur", to: "Oasis"},{from: "Blur", to: "Radiohead"},{from: " The Smashing\nPumpkins ", to: "Placebo"},{from: " The Smashing\nPumpkins ", to: "Nirvana"},{from: " The Smashing\nPumpkins ", to: "Radiohead"},{from: " The Doors ", to: " Pink Floyd "},{from: " Green Day ", to: " blink-182 "},{from: " Green Day ", to: " Red Hot\nChili Peppers "},{from: " Red Hot\nChili Peppers ", to: "Nirvana"},{from: " Red Hot\nChili Peppers ", to: "Incubus"},{from: "Placebo", to: " The Killers "},{from: "Placebo", to: "Muse"},{from: "Placebo", to: "Radiohead"},{from: "Placebo", to: "Interpol"},{from: "Placebo", to: " Franz Ferdinand "},{from: "Placebo", to: " The Cure "},{from: "Air", to: "Portishead"},{from: "Portishead", to: "Bjork"},{from: "Bjork", to: "Radiohead"},{from: " The Killers ", to: "Muse"},{from: " The Killers ", to: "U2"},{from: " The Killers ", to: "Interpol"},{from: " The Killers ", to: " Franz Ferdinand "},{from: " The Killers ", to: " Bloc Party "},{from: "Muse", to: "Radiohead"},{from: "Muse", to: " Franz Ferdinand "},{from: "Radiohead", to: "Interpol"},{from: "U2", to: " The Cranberries "},{from: "Interpol", to: " Franz Ferdinand "},{from: "Interpol", to: " Bloc Party "},{from: " Franz Ferdinand ", to: " Bloc Party "},];


/*
const gEdges = [
  {from: 0, to: 1},
  {from: 1, to: 2},
  {from: 0, to: 2},
  {from: 3, to: 4 },
  {from: 5, to: 1},
  {from: 5, to: 2}
  
];
*/

var labels = [];

var scene = new THREE.Scene();





const canvas = document.querySelector('#c');
const renderer = new THREE.WebGLRenderer({canvas});




var camera = new THREE.PerspectiveCamera(45, width / height, 1, 4000);
//camera.position.set(0, 10, -400);
camera.position.set(0, 5, -500);



renderer.setSize(width, height);

renderer.setClearColor(0x999999);
//document.body.appendChild(renderer.domElement);

var controls = new THREE.OrbitControls(camera, renderer.domElement);

scene.add(new THREE.AxesHelper(1));

// test using the gmap png as the texutre
//let sphereRadius = 10;
let sphereRadius = globeRadius;
const loader = new THREE.TextureLoader();
//const geometry = new THREE.SphereBufferGeometry(sphereRadius, 128, 64);
const geometry = new THREE.SphereGeometry(sphereRadius, 64, 32);
//const geometry = new THREE.SphereGeometry(sphereRadius, 1024, 512);









//const material = new THREE.MeshBasicMaterial({transparent: true, opacity: 0.5,  vertexColors: THREE.FaceColors });
const material = new THREE.MeshBasicMaterial({transparent: true, opacity: 0.5,  vertexColors: THREE.FaceColors, wireframe: true });

let sphere = new THREE.Mesh(geometry, material);
//scene.add(sphere);


const labelContainerElem = document.querySelector('#labels');

var zeroPoint = new THREE.Vector3();
//var pointStart = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).normalize().multiplyScalar(sphereRadius);
var pointStart = new THREE.Vector3(0,1, 0.5, 0.6).normalize().multiplyScalar(sphereRadius);
var pointEnd = new THREE.Vector3(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).normalize().multiplyScalar(sphereRadius);





function spot(point, color) {
  var s = new THREE.Mesh(new THREE.SphereGeometry(3, 32, 24), new THREE.MeshBasicMaterial({
    color: color
  }));
  s.position.copy(point);
  scene.add(s);
  return s;
}


function spot2(point, color) {
  var s = new THREE.Mesh(new THREE.SphereGeometry(5, 32, 24), new THREE.MeshBasicMaterial({
    color: color
  }));
  s.position.copy(point);
  //scene.add(s);
  return s;
}

var triGeom = new THREE.Geometry();
triGeom.vertices.push(zeroPoint, pointStart, pointEnd, zeroPoint);
triGeom.faces.push(new THREE.Face3(0, 1, 2));
var line = new THREE.Line(triGeom, new THREE.LineBasicMaterial({
  color: "yellow"
}));
//sphere.add(line);
var triangle = new THREE.Mesh(triGeom, new THREE.MeshBasicMaterial({
  color: "yellow",
  transparent: false,
  opacity: 0.5,
  side: THREE.DoubleSide
}));
//sphere.add(triangle);





//smacofNodes.forEach(drawSmacofDot);
//clusters.forEach(randColorPoly);

//var polyCenter = new THREE.Vector3(0.1,  -0.2, 0.8).normalize().multiplyScalar(sphereRadius);
//spot(polyCenter, 'yellow');

//use the new algorithm for polygon drawing (must calculate center point)
// comment out the following line to see polyline only.

//clusters.forEach(randColorPoly2);

// draw the polygon contour with lins.
//clusters.forEach(randColorPolyLine);
clusters.forEach(randColorPolyLine2);

gEdges.forEach(drawArcForItem);


//testDrawPolyEarcut();
//testDrawPolyEarcut3();

// the labels.
//gNodes.forEach(drawLabel);
//gLabels.forEach(drawLabel);



/*
var testTri =[];
testTri.push(triA);
testTri.push(triB);
testTri.push(triC);

drawPolygon(testTri, 'blue');
*/

////////////////////////test strip custom geometry ................///////////////////
/****
const stripGeometry = new THREE.Geometry();

for (var i=0; i < strip.length; i++)
{
  stripGeometry.vertices.push (new THREE.Vector3(strip[i][0], strip[i][1], strip[i][2]).normalize().multiplyScalar(sphereRadius));
}

var stripRow = 3;
var stripColumn = strip.length/stripRow;

for (var i =0; i < stripRow - 1; i++)
{
  for (var j=0; j < stripColumn -1; j++)
  {
    stripGeometry.faces.push( new THREE.Face3(i*stripColumn + j, (i+1)*stripColumn + j, i*stripColumn + j + 1));
    stripGeometry.faces.push( new THREE.Face3(i*stripColumn + j +1, (i+1)*stripColumn + j, (i+1)*stripColumn + j + 1));

  }
}

const stripMaterial = new THREE.MeshBasicMaterial({color: 0x44FF44});
const myStrip = new THREE.Mesh(stripGeometry, stripMaterial);
scene.add(myStrip);
///////////////////////////////////////////////
***/

function drawSmacofDot (xyz, index, array)
{
  var smcPoint = new THREE.Vector3(xyz[0], xyz[1], xyz[2]).normalize().multiplyScalar(sphereRadius);

  spot(smcPoint, 0xffff00);

}

/* *** the older version.
function drawLabel (node, index, array)
{
  var tempV = convertFlatCoordsToSphereCoords(node.x, node.y);
  var meshPoint = spot(tempV, 0xff0000);
  
  const elem = document.createElement('div');
    elem.textContent = node.label;
    labelContainerElem.appendChild(elem);

    labels.push({elem, meshPoint});

   
}
***/

function drawLabel (node, index, array)
{
  var tempV = new THREE.Vector3(node.pos[0], node.pos[1], node.pos[2]).normalize().multiplyScalar(sphereRadius);
  var meshPoint = spot(tempV, 0xff0000);
  
  const elem = document.createElement('div');
    elem.textContent = node.label;
    labelContainerElem.appendChild(elem);

    labels.push({elem, meshPoint});

   
}

function drawLabelAt (v3Pos, txt)
{
  
  var meshPoint = spot2(v3Pos, 0xff0000);
  
  const elem = document.createElement('div');
    elem.textContent = txt;
    labelContainerElem.appendChild(elem);

    labels.push({elem, meshPoint});

   
}

function drawArcForItem (edge, index, array)
{

  var fromKey = edge.from.trim();
  var toKey = edge.to.trim();
  if (fromKey in gLabelTable  && toKey in gLabelTable)
  {
    var v3Start = gLabelTable[fromKey];
    var v3End = gLabelTable[toKey];
    setShortArc(v3Start, v3End, 20, "white");
  }
  



  
}

function setArc3D(pointStart, pointEnd, smoothness, color, clockWise) {
  // calculate normal
  var cb = new THREE.Vector3(),
    ab = new THREE.Vector3(),
    normal = new THREE.Vector3();
  cb.subVectors(new THREE.Vector3(), pointEnd);
  ab.subVectors(pointStart, pointEnd);
  cb.cross(ab);
  normal.copy(cb).normalize();

  // get angle between vectors
  var angle = pointStart.angleTo(pointEnd);
  if (clockWise) angle = angle - Math.PI * 2;
  var angleDelta = angle / (smoothness - 1);

  var geometry = new THREE.Geometry();
  for (var i = 0; i < smoothness; i++) {
    geometry.vertices.push(pointStart.clone().applyAxisAngle(normal, angleDelta * i))
  }

  var arc = new THREE.Line(geometry, new THREE.LineBasicMaterial({
    color: color, linewidth: 3.0
  }));
  return arc;
}


function GetSmoothness(pointStart, pointEnd)
{
  // we use 0.5 degree as the divider.
  var angleInterval = 1.0; 
  var cb = new THREE.Vector3(),
    ab = new THREE.Vector3(),
    normal = new THREE.Vector3();
  cb.subVectors(new THREE.Vector3(), pointEnd);
  ab.subVectors(pointStart, pointEnd);
  cb.cross(ab);
  normal.copy(cb).normalize();

  // get angle between vectors
  var angle = pointStart.angleTo(pointEnd);
  if (Math.abs(angle) > Math.abs(angle - Math.PI*2))
  {
    angle = angle - Math.PI * 2;
  }

  if (Math.abs(angle)*(180.0/Math.PI) < angleInterval)
  {
    return 2;
  }

   var smoothness = (Math.abs(angle) * 180/Math.PI)/angleInterval;
    smoothness = Math.floor(smoothness);
    if (smoothness < 2)
    {
      smoothness =2;
    }

    return smoothness;
}

function setShortArc(pointStart, pointEnd, smoothness, color) {
  // calculate normal
 
  var cb = new THREE.Vector3(), ab = new THREE.Vector3(), normal = new THREE.Vector3();
  cb.subVectors(new THREE.Vector3(), pointEnd);
  ab.subVectors(pointStart, pointEnd);
  cb.cross(ab);
  normal.copy(cb).normalize();
  // get angle between vectors
  var angle = pointStart.angleTo(pointEnd);
  //////////
  if (Math.abs(angle) < (Math.PI / 180)) {
    smoothness = 2;
  }
  else {
    smoothness = Math.abs(angle) * 180 / Math.PI;
    smoothness = Math.floor(smoothness);
    if (smoothness < 2) {
      smoothness = 2;
    }
  }
  //////
  if (Math.abs(angle) > Math.abs(angle - Math.PI * 2)) {
    angle = angle - Math.PI * 2;
  }
  var angleDelta = angle / (smoothness - 1);
  var geometry = new THREE.Geometry();
  for (var i = 0; i < smoothness; i++) {
    var v3 = pointStart.clone().applyAxisAngle(normal, angleDelta * i);
    
    geometry.vertices.push(v3);
  }
  var arc = new THREE.Line(geometry, new THREE.LineBasicMaterial({
    color: color, linewidth: 3.0
  }));
  scene.add(arc);
  }



function setArcGetGeoPoints(pointStart, pointEnd, smoothness, color) {
  // calculate normal
  var geoPoints = [];
  var cb = new THREE.Vector3(), ab = new THREE.Vector3(), normal = new THREE.Vector3();
  cb.subVectors(new THREE.Vector3(), pointEnd);
  ab.subVectors(pointStart, pointEnd);
  cb.cross(ab);
  normal.copy(cb).normalize();
  // get angle between vectors
  var angle = pointStart.angleTo(pointEnd);
  //////////
  if (Math.abs(angle) < (Math.PI / 180)) {
    smoothness = 2;
  }
  else {
    smoothness = Math.abs(angle) * 180 / Math.PI;
    smoothness = Math.floor(smoothness);
    if (smoothness < 2) {
      smoothness = 2;
    }
  }
  //////
  if (Math.abs(angle) > Math.abs(angle - Math.PI * 2)) {
    angle = angle - Math.PI * 2;
  }
  var angleDelta = angle / (smoothness - 1);
  var geometry = new THREE.Geometry();
  for (var i = 0; i < smoothness; i++) {
    var v3 = pointStart.clone().applyAxisAngle(normal, angleDelta * i);
    var latLon = vector3toLonLat(v3.clone());
    geoPoints.push(latLon);
    geometry.vertices.push(v3);
  }
  var arc = new THREE.Line(geometry, new THREE.LineBasicMaterial({
    color: color, linewidth: 3.0
  }));
  return [arc, geoPoints];
  }


function getArcPoints (pointStart, pointEnd, smoothness)
{
  var points = [];
  if (smoothness < 3)
  {
    points.push(pointStart);
    points.push(pointEnd);

  }
  else
  {
    var cb = new THREE.Vector3(),
    ab = new THREE.Vector3(),
    normal = new THREE.Vector3();
    cb.subVectors(new THREE.Vector3(), pointEnd);
    ab.subVectors(pointStart, pointEnd);
    cb.cross(ab);
    normal.copy(cb).normalize();

    // get angle between vectors
    var angle = pointStart.angleTo(pointEnd);
    if (Math.abs(angle) > Math.abs(angle - Math.PI*2))
    {
      angle = angle - Math.PI * 2;
    }

    var  angleDelta = angle / (smoothness - 1);
  

  
    for (var i = 0; i < smoothness; i++)
     {
      var v3 = pointStart.clone().applyAxisAngle(normal, angleDelta * i);
      points.push(v3);
     }
     

  }
  return points;

}

//////////////
function pointInTriangle (position,coord1,coord2,coord3){
  
  
  var d1,d2,d3;
  var m1 = new THREE.Matrix3();
 m1.set(position.x, position.y, position.z, coord2.x, coord2.y, coord2.z, coord3.x, coord3.y, coord3.z );
 d1 = m1.determinant();

 
  var m2 = new THREE.Matrix3();
  m2.set(coord1.x, coord1.y, coord1.z, position.x, position.y, position.z, coord3.x, coord3.y, coord3.z);
  d2 = m2.determinant();

  
  var m3 = new THREE.Matrix3();
  m3.set(coord1.x, coord1.y, coord1.z, coord2.x, coord2.y, coord2.z, position.x, position.y, position.z);
  d3 = m3.determinant();

  if((d1>=0 && d2 >=0 && d3>=0) || (d1<=0 && d2 <=0 && d3<=0)){
      return true;
  }
  return false;
}


function randColorPoly (poly, index, array)
{
   if (poly.length < 3)
   {
     return
   }

   var points = [];
   for (var i=0; i< poly.length; i++)
   {
    var tempV = new THREE.Vector3(poly[i][0],poly[i][1], poly[i][2]).normalize().multiplyScalar(sphereRadius);
    points.push(tempV);
   }
   drawPolygon(points, getRandomColor());
}

function randColorPolyLine2 ( poly, index, array)
{
  var clr = getRandomColor();
  //if ((polyCounter ==1 ) ||(polyCounter == 10) || (polyCounter == 3 )|| (polyCounter == 34))
  //{
    var points = [];
   
   /*
    for (var i=0; i< poly.length; i++)
   {
    var tempV = new THREE.Vector3(poly[i][0],poly[i][1], poly[i][2]).normalize().multiplyScalar(sphereRadius);
    points.push(tempV.clone());
    //if( (i == 2 ) || (i== 10) || (i ==20) || (i==30 ) || (i== 60) || (i== 150) || (i== poly.length - 1))
    {
      //if ((polyCounter ==1 ) ||(polyCounter == 10) || (polyCounter == 3 )|| (polyCounter == 34))
      if (polyCounter == 41)
      //if ((polyCounter ==1 ) ||(polyCounter == 10) || (polyCounter == 3 ))
      drawLabelAt(tempV, i.toString());
    }
   }
   
   //if ((polyCounter ==1 ) ||(polyCounter == 10) || (polyCounter == 3 )|| (polyCounter == 34))
   //if (polyCounter == 34)
   //{
    // drawPolygon3(points, clr, false);
    //bad data index: 13- 17   44-46  81-89  103 - 115
    // clean up the data, use mapbox's earcut  algorithm for triangulation.

    /*
    var cleanPoints = [];
    for (var i=0; i< poly.length; i++)
    {
      if (  (( i >= 13) && (i <=17)) || ((i>=44) && (i <= 46)) || ((i >= 81) && (i <=89) ) || ((i >= 103) && (i <=115)) )
      {
        continue;
      }
      else
      {
        cleanPoints.push(poly[i]);
      }
    }
    */

    //drawPolyEarcut2 (cleanPoints, clr)
    //drawPolyEarcut2(poly, clr); 
    //if ((polyCounter == 41) || (polyCounter == 20))
    drawPolyAzimuthal(poly,clr)
  // }

   /*
   if ((polyCounter ==1 ) ||(polyCounter == 10) || (polyCounter == 3 ))
   {
    drawPolyEarcut2 (poly, clr)
   }
   */
  if (polyCounter == 34)
   for (var i=0; i< points.length-1; i++)
   {
     var start = points[i];
     var end =  points[i+1 ];
     var ret = setArcGetGeoPoints(start, end, 6, clr);
     scene.add(ret[0]);
   }
   
  //}
  polyCounter++;
}

function v3toGeoArray (points)  // not Vector3
{
  var geoArray = [];
  for (var i=0; i< points.length; i++)
  {
    var temp = new THREE.Vector3(points[i][0], points[i][1], points[i][2]).normalize();
    var geoPoint = vector3toLonLat(temp);
    geoArray.push(geoPoint);
  }
  return geoArray;

}

function v3toGeoAndThreeArray (points)  // not Vector3
{
  var geoArray = [];
  var ThreeArray =[];
  for (var i=0; i< points.length; i++)
  {
    var temp = new THREE.Vector3(points[i][0], points[i][1], points[i][2]).normalize();
    var threeV = temp.clone().multiplyScalar(sphereRadius);
    ThreeArray.push(threeV);
    var geoPoint = vector3toLonLat(temp);
    geoArray.push(geoPoint);
  }
  return [geoArray, ThreeArray];

}


function testDrawPolyEarcut()
{
  var geoRectangle = [ [90, 10], [110, 20], [100, 40], [115, 25], [160, 50], [-160, 50], [150, 10], [145, 40], [120, 20], [130, 10]];
  var v3points = [];
  for (var i=0; i < geoRectangle.length; i++)
  {
    var vct3 = lonLatToVector3(geoRectangle[i][0], geoRectangle[i][1]);
    var v3 = [vct3.x, vct3.y, vct3.z];
    v3points.push(v3);
  }

  // test getCross180LatFromLonLat (lon0, lat0, lon1, lat1)
 var ret = getCross180LatFromLonLat (160, 70, -150, 50);
  //var splitPolys = cutAlong180(geoRectangle);

  drawPolyEarcut2(v3points, getRandomColor());
}


function testDrawPolyEarcut3()
{
  var geoRectangle = [ [90, 10], [110, 20], [100, 40], [115, 25], [160, 50], [-160, 50], [150, 10], [145, 40], [120, 20], [130, 10]];

   var tmp2 = azimuthalProjection (geoRectangle);
  var v3points = [];
  for (var i=0; i < geoRectangle.length; i++)
  {
    var vct3 = lonLatToVector3(geoRectangle[i][0], geoRectangle[i][1]);
    drawLabelAt(vct3.clone().normalize().multiplyScalar(sphereRadius), i.toString());
   
    //var v3 = [vct3.x, vct3.y, vct3.z];
    v3points.push(vct3);
  }

  // test getCross180LatFromLonLat (lon0, lat0, lon1, lat1)
 //var ret = getCross180LatFromLonLat (160, 70, -150, 50);
  //var splitPolys = cutAlong180(geoRectangle);

  drawPolyEarcut3(v3points, getRandomColor());
  
}

function triFaceInside ( a, b, c)
{
  var ac = c.clone().sub(a.clone()).normalize();
  var ab = b.clone().sub(a.clone()).normalize();
  var normal = ac.cross(ab).normalize();
  var final = normal.add(a.clone().normalize());
  if (final.length() < 1)
  {
    return true;
  }
  return false;

}
/**
 * 
 * @param {*} points : THREE.JS Vector3 normalized array, in clockwise order.
 */
function earcut3d (points) 
{
   var ret =[];
  
    var remain =[];
    for (var x=0; x< points.length; x++)
    {
      remain.push(x);
    }

    while (remain.length > 3)
    { 
      var newRemain = [];
      for (var i=0; i< remain.length-2; )
      {
        var a = remain[i];
        var b = remain[i+1];
        var c = remain[i+2];
        newRemain.push(a);
        // for a, b, c triangle.
        // remove same points and point in a straight line

        /****
         *     c
         *   b
         *     a
         */
        var  ba = points[a].clone().sub(points[b].clone()).normalize();
        if (isZero(ba))
        {
          i +=2;
          continue; // drop point b
        }
        var bc = points[c].clone().sub(points[b].clone()).normalize();
        if (isZero(bc))
        {
          i +=2;
          continue;  // drop b
        }

        var cross = ba.cross(bc).normalize();;
        if (isZero(cross))
        {
          i +=2;
          continue; // drop b, straigt line.
        }

        var addV = cross.add(points[b].clone().normalize());

        if (addV.length() > 1)
        {
          // cut it
          // clockwise
          ret.push(a); ret.push(b); ret.push(c);
          i +=2;
        }
        else
        {
          // can't cut
          //newRemain.push(b);
          i++;
        }

      }

      // push the last one/two points for next round
      while (i < remain.length)
      {
        newRemain.push(i);
        i++;
      }

      remain = newRemain;
    }

    // 3 points remaining, figure out clock wise or not
    var fa = remain[0];
    var fb = remain[1];
    var fc = remain[2];
    var  fba = points[fa].clone().sub(points[fb].clone());
    if (isZero(fba))
    {
      // does not matter clockwise or not, straight line anyway
      ret.push(fa);
      ret.push(fb);
      ret.push(fc);
      return ret;
    }
    var fbc = points[fc].clone().sub(points[fb].clone());
    if (isZero(fbc))
    {
      // does not matter clockwise or not, straight line anyway
      ret.push(fa);
      ret.push(fb);
      ret.push(fc);
      return ret;
    }

    var fcross = fba.cross(fbc).normalize();
    if (isZero(fcross))
    {
      // does not matter clockwise or not, straight line anyway
      ret.push(fa);
      ret.push(fb);
      ret.push(fc);
      return ret;
    }

    if (fcross.add(points[fb]).length() > 1)
    {
     
      // clockwise
      ret.push(fa); ret.push(fb); ret.push(fc);
    }
    else
    {
      //counter clockwise
      ret.push(fa); ret.push(fc);  ret.push(fb);
    }

    return ret;


  


}

function isZero (v3)
{
  if ( v3.length() < 0.0001)
  {
    return true;
  }
  return false;
}

function checkClockWise (points)
{
  var sum = 0.0;
  for (var i=0; i< points.length-1; i++)
  {
     sum += (points[i+1][1] - points[i][1])*(points[i+1][0] + points[i][0]);
  }

  if (sum > 0)
  {
    return true;
  }
  return false;
}

function azimuthalProjection (geoPoints, theColor="")
{
  var geoPolyformat = {type: "Polygon", coordinates: [geoPoints]};
   
  var c = d3.geoCentroid(geoPolyformat);
    
  // for debuging only comment out later///////////////
  //plot out the center with Polygon cluster number:
  var ctr = lonLatToVector3(c[0], c[1]).normalize();
  var centerV3 = ctr.clone().multiplyScalar(sphereRadius);
  var ctrForLine = ctr.clone().multiplyScalar(sphereRadius + 2);
   
  ////// to be commented out /////////////
  if (polyCounter < gNodes.length )
  {  var lbl = gNodes[polyCounter].label;
    if (polyCounter != 20  && polyCounter != 41)
    { 
      if ((lbl != "Modest Mouse")  && (lbl != "Aerosmith"))
      {
        gLabelTable[lbl] = ctrForLine;
      // drawLabelAt (centerV3, polyCounter.toString());
        drawLabelAt (centerV3, lbl);
        var nodeColor = invertColor(theColor);
        spot(centerV3, nodeColor);
      }
    }
  }
  else
  {
  drawLabelAt (centerV3, polyCounter.toString());
  }
  ////////////// to be comment out above /////////////////



  var projection = d3.geoAzimuthalEquidistant().rotate([-c[0], -c[1]]);
  var ret =[];

  for (var i=0; i< geoPoints.length; i++)
  {
    var p = projection(geoPoints[i]);
    ret.push(p);
  }

  return ret;
} 


function drawPolyEarcut (points, theColor, )
{
  var geoArray = v3toGeoArray (points);

 

  var wrapper =[];
  wrapper.push(geoArray);
  //wrapper.push(points);
  var data = earcut.flatten(wrapper);
  var triangles = earcut(data.vertices, data.holes, data.dimensions); // the output triangles seem to be clockwise.

  var c = -1; // the counter

  const polyGeometry = new THREE.Geometry();

  for ( var i=0; i <= triangles.length -3; i += 3)
  {
    // clock wise triangle
    /*************
        tb--------tc 
        \       /
          \   /
             ta
            
    ************/
    var ia = triangles[i]; 
    var ib = triangles[i+1];
    var ic = triangles[i+2];

    

    var ta = new THREE.Vector3(points[ia][0],points[ia][1], points[ia][2]).normalize().multiplyScalar(sphereRadius);
    var tb = new THREE.Vector3(points[ib][0],points[ib][1], points[ib][2]).normalize().multiplyScalar(sphereRadius);
    var tc = new THREE.Vector3(points[ic][0],points[ic][1], points[ic][2]).normalize().multiplyScalar(sphereRadius);

    // push ta into the vertice array
    c++;
    polyGeometry.vertices.push(ta);
    var taCounter = c;

    var smooth = GetSmoothness(tb, tc);  // cut line between tb and tc into smaller arcs
    var sectionPoints = getArcPoints(tb, tc, smooth);

    for (var j =0; j< smooth - 1; j++)
    {
      var cordSmooth =  GetSmoothness (ta, sectionPoints[j]);
      var cordPointsAb = getArcPoints(ta, sectionPoints[j], cordSmooth);
      var cordPointsAc = getArcPoints(ta, sectionPoints[j+1], cordSmooth);
      
      for (var k =0; k < cordSmooth; k++)
      {
        polyGeometry.vertices.push(cordPointsAb[k].normalize().multiplyScalar(sphereRadius));
        c++;
        polyGeometry.vertices.push(cordPointsAc[k].normalize().multiplyScalar(sphereRadius));
        c++;

        if (k == 0)
        {
         // polyGeometry.faces.push( new THREE.Face3 (taCounter, c, c-1));   //Face3 needs counter clockwise points
          polyGeometry.faces.push( new THREE.Face3 (taCounter, c-1, c));   //Face3 needs  clockwise points?
        }
        else
        {
          //polyGeometry.faces.push( new THREE.Face3 (c-3, c-2, c));  //counter clockwise
          polyGeometry.faces.push( new THREE.Face3 (c-3, c, c-2));  // clockwise

         // polyGeometry.faces.push( new THREE.Face3 (c-3, c, c -1));  // counter clockwise
          polyGeometry.faces.push( new THREE.Face3 (c-3, c-1, c));  // clockwise

        }
      }
    }
  }  // end of for ( var i=0; i < triangles.length -3; i += 3)

  const polyMaterial = new THREE.MeshBasicMaterial(
    {color: theColor,
     /* wireframe: true,   */
      vertexColors: THREE.FaceColors
    });

  const myPoly = new THREE.Mesh(polyGeometry, polyMaterial);
  scene.add(myPoly);  

}


function invertColor(hex) {
  if (hex.indexOf('#') === 0) {
      hex = hex.slice(1);
  }
  // convert 3-digit hex to 6-digits.
  if (hex.length === 3) {
      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
  }
  if (hex.length !== 6) {
      throw new Error('Invalid HEX color.');
  }
  // invert color components
  var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),
      g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),
      b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);
  // pad each with zeros and return
  return '#' + padZero(r) + padZero(g) + padZero(b);
}

function padZero(str, len) {
  len = len || 2;
  var zeros = new Array(len).join('0');
  return (zeros + str).slice(-len);
}


function drawPolyEarcut3 (points, theColor)
{
  
  var triangles = earcut3d(points);
  
  var c = -1; // the counter

  const polyGeometry = new THREE.Geometry();

  for ( var i=0; i <= triangles.length -3; i += 3)
  {
    // clock wise triangle
    /*************
        tb--------tc 
        \       /
          \   /
            ta
            
    ************/
    var ia = triangles[i]; 
    var ib = triangles[i+1];
    var ic = triangles[i+2];

    

    var ta = points[ia].clone().normalize().multiplyScalar(sphereRadius);
    var tb =points[ib].clone().normalize().multiplyScalar(sphereRadius);
    var tc =points[ic].clone().normalize().multiplyScalar(sphereRadius);

    // push ta into the vertice array
    c++;
    polyGeometry.vertices.push(ta);
    var taCounter = c;

    var smooth = GetSmoothness(tb, tc);  // cut line between tb and tc into smaller arcs
    var sectionPoints = getArcPoints(tb, tc, smooth);

    for (var j =0; j< smooth - 1; j++)
    {
      var cordSmooth =  GetSmoothness (ta, sectionPoints[j]);
      var cordPointsAb = getArcPoints(ta, sectionPoints[j], cordSmooth);
      var cordPointsAc = getArcPoints(ta, sectionPoints[j+1], cordSmooth);
      
      for (var k =0; k < cordSmooth; k++)
      {
        polyGeometry.vertices.push(cordPointsAb[k].normalize().multiplyScalar(sphereRadius));
        c++;
        polyGeometry.vertices.push(cordPointsAc[k].normalize().multiplyScalar(sphereRadius));
        c++;

        if (k == 0)
        {
        // polyGeometry.faces.push( new THREE.Face3 (taCounter, c, c-1));   //Face3 needs counter clockwise points
          polyGeometry.faces.push( new THREE.Face3 (taCounter, c-1, c));   //Face3 needs  clockwise points?
        }
        else
        {
          //polyGeometry.faces.push( new THREE.Face3 (c-3, c-2, c));  //counter clockwise
          polyGeometry.faces.push( new THREE.Face3 (c-3, c, c-2));  // clockwise

        // polyGeometry.faces.push( new THREE.Face3 (c-3, c, c -1));  // counter clockwise
          polyGeometry.faces.push( new THREE.Face3 (c-3, c-1, c));  // clockwise

        }
      }
    }
  }  // end of for ( var i=0; i < triangles.length -3; i += 3)

  const polyMaterial = new THREE.MeshBasicMaterial(
    {color: theColor,
      wireframe: true,   
      vertexColors: THREE.FaceColors
    });

  const myPoly = new THREE.Mesh(polyGeometry, polyMaterial);
  scene.add(myPoly);  
  

  
}


function drawPolyAzimuthal (gPoints, theColor, )
{
  var conv = v3toGeoAndThreeArray (gPoints);
  var geoArray = conv[0];
  var points = conv[1];
  var aziArray = azimuthalProjection (geoArray, theColor);

  // debugging only: did not work
  //var clockwise = checkClockWise(aziArray);
  //console.log(clockwise);
  ////////////

 
    

    var wrapper =[];
    wrapper.push(aziArray);
  
    var data = earcut.flatten(wrapper);
    var triangles = earcut(data.vertices, data.holes, data.dimensions); // the output triangles seem to be clockwise.

    var c = -1; // the counter

    const polyGeometry = new THREE.Geometry();

    for ( var i=0; i <= triangles.length -3; i += 3)
    {
      // clock wise triangle
      /*************
          tb--------tc 
          \       /
            \   /
              ta
              
      ************/
      var ia = triangles[i]; 
      var ib = triangles[i+1];
      var ic = triangles[i+2];

      

      var ta = points[ia];
      var tb =points[ib];
      var tc =points[ic];


      // test out wrong clockwise direction.
       if (triFaceInside (ta, tb, tc) )
       {
         // switch tb, tc
         tb = points[ic];
         tc = points[ib];
       }

      // push ta into the vertice array
      c++;
      polyGeometry.vertices.push(ta);
      var taCounter = c;

      var smooth = GetSmoothness(tb, tc);  // cut line between tb and tc into smaller arcs
      var sectionPoints = getArcPoints(tb, tc, smooth);

      for (var j =0; j< smooth - 1; j++)
      {
        var cordSmooth =  GetSmoothness (ta, sectionPoints[j]);
        var cordPointsAb = getArcPoints(ta, sectionPoints[j], cordSmooth);
        var cordPointsAc = getArcPoints(ta, sectionPoints[j+1], cordSmooth);
        
        for (var k =0; k < cordSmooth; k++)
        {
          polyGeometry.vertices.push(cordPointsAb[k].normalize().multiplyScalar(sphereRadius));
          c++;
          polyGeometry.vertices.push(cordPointsAc[k].normalize().multiplyScalar(sphereRadius));
          c++;

          if (k == 0)
          {
            polyGeometry.faces.push( new THREE.Face3 (taCounter, c, c-1));   //Face3 needs counter clockwise points
           // polyGeometry.faces.push( new THREE.Face3 (taCounter, c-1, c));   //Face3 needs  clockwise points?
          }
          else
          {
            polyGeometry.faces.push( new THREE.Face3 (c-3, c-2, c));  //counter clockwise
           // polyGeometry.faces.push( new THREE.Face3 (c-3, c, c-2));  // clockwise

             polyGeometry.faces.push( new THREE.Face3 (c-3, c, c -1));  // counter clockwise
            //polyGeometry.faces.push( new THREE.Face3 (c-3, c-1, c));  // clockwise

          }
        }
      }
    }  // end of for ( var i=0; i < triangles.length -3; i += 3)

    const polyMaterial = new THREE.MeshBasicMaterial(
      {color: theColor,
       /*wireframe: true,   */
        vertexColors: THREE.FaceColors
      });

    const myPoly = new THREE.Mesh(polyGeometry, polyMaterial);
    scene.add(myPoly);  
  

}

function drawPolyEarcut2 (gPoints, theColor, )
{
  var geoArray = v3toGeoArray (gPoints);

  var splitPolysBig = cutAlong180(geoArray);
  var splitPolys = [];
  for (var xx=0; xx < splitPolysBig.length; xx++)
  {
    splitPolys = splitPolys.concat(slicePoly(splitPolysBig[xx], 90));
  }

  for (var q=0; q< splitPolys.length; q++)
  {
    //test color
    theColor = getRandomColor();


    var points = [];
    for (var t=0; t< splitPolys[q].length; t++)
    {
      var tmp = lonLatToVector3(splitPolys[q][t][0], splitPolys[q][t][1] ).normalize().multiplyScalar(sphereRadius);
      points.push(tmp);
    }

    var wrapper =[];
    wrapper.push(splitPolys[q]);
    //wrapper.push(points);
    var data = earcut.flatten(wrapper);
    var triangles = earcut(data.vertices, data.holes, data.dimensions); // the output triangles seem to be clockwise.

    var c = -1; // the counter

    const polyGeometry = new THREE.Geometry();

    for ( var i=0; i <= triangles.length -3; i += 3)
    {
      // clock wise triangle
      /*************
          tb--------tc 
          \       /
            \   /
              ta
              
      ************/
      var ia = triangles[i]; 
      var ib = triangles[i+1];
      var ic = triangles[i+2];

      

      var ta = points[ia];
      var tb =points[ib];
      var tc =points[ic];

      // push ta into the vertice array
      c++;
      polyGeometry.vertices.push(ta);
      var taCounter = c;

      var smooth = GetSmoothness(tb, tc);  // cut line between tb and tc into smaller arcs
      var sectionPoints = getArcPoints(tb, tc, smooth);

      for (var j =0; j< smooth - 1; j++)
      {
        var cordSmooth =  GetSmoothness (ta, sectionPoints[j]);
        var cordPointsAb = getArcPoints(ta, sectionPoints[j], cordSmooth);
        var cordPointsAc = getArcPoints(ta, sectionPoints[j+1], cordSmooth);
        
        for (var k =0; k < cordSmooth; k++)
        {
          polyGeometry.vertices.push(cordPointsAb[k].normalize().multiplyScalar(sphereRadius));
          c++;
          polyGeometry.vertices.push(cordPointsAc[k].normalize().multiplyScalar(sphereRadius));
          c++;

          if (k == 0)
          {
          // polyGeometry.faces.push( new THREE.Face3 (taCounter, c, c-1));   //Face3 needs counter clockwise points
            polyGeometry.faces.push( new THREE.Face3 (taCounter, c-1, c));   //Face3 needs  clockwise points?
          }
          else
          {
            //polyGeometry.faces.push( new THREE.Face3 (c-3, c-2, c));  //counter clockwise
            polyGeometry.faces.push( new THREE.Face3 (c-3, c, c-2));  // clockwise

          // polyGeometry.faces.push( new THREE.Face3 (c-3, c, c -1));  // counter clockwise
            polyGeometry.faces.push( new THREE.Face3 (c-3, c-1, c));  // clockwise

          }
        }
      }
    }  // end of for ( var i=0; i < triangles.length -3; i += 3)

    const polyMaterial = new THREE.MeshBasicMaterial(
      {color: theColor,
       /*wireframe: true,   */
        vertexColors: THREE.FaceColors
      });

    const myPoly = new THREE.Mesh(polyGeometry, polyMaterial);
    scene.add(myPoly);  
  }

}

function randColorPolyLine (poly, index, array)
{
  var clr = getRandomColor();

  if ((polyCounter ==34) /*|| (polyCounter % 2 == 0) */ )
  {
    var points = [];
    var geoPoints =[];
    for (var i=0; i< poly.length; i++)
    {
      var tempV = new THREE.Vector3(poly[i][0],poly[i][1], poly[i][2]).normalize().multiplyScalar(sphereRadius);
      points.push(tempV.clone());

      var geoPoint = vector3toLonLat(tempV);
      geoPoints.push(geoPoint);
      //if( (i == 2 ) || (i== 10) || (i ==20) || (i==30 ) || (i== 60) || (i== 150) || (i== poly.length - 1))
      {
      // drawLabelAt(tempV, i.toString());
      }

    }



    //var hulls = d3.polygonHull(geoPoints);
   //var hulls = geoPoints;


   points.push(points[0]);
   geoPoints.push(vector3toLonLat(points[0].clone()));
   

   

  for (var i=0; i< points.length-1; i++)
  {
    var start = points[i];
    var end =  points[i+1 ];
    var ret = setArcGetGeoPoints(start, end, 6, clr);
    scene.add(ret[0]);
  }
  

  var ctr = findCenterPoint(points);
  drawLabelAt(ctr.normalize().multiplyScalar(sphereRadius), 'c' + polyCounter.toString());


  // test for point in polygon
  // 
  //var thisPoly =[];
  //thisPoly.push(geoPoints);
  //var triA = new THREE.Vector3(0.2, 0.5, 0.6).normalize().multiplyScalar(sphereRadius);
  //var triB = new THREE.Vector3(0.1, 0.8, 0.4).normalize().multiplyScalar(sphereRadius);
  //var triC = new THREE.Vector3(0.3, 0.5, 0.3).normalize().multiplyScalar(sphereRadius);

  // var geoA = vector3toLonLat(triA);
  // var geoB = vector3toLonLat(triB);
   //var geoC = vector3toLonLat (triC);

  //var testpoly = [geoA, geoB, geoC, geoA];
  //thisPoly.push(testpoly);


  //var geoPolyformat = {type: "Polygon", coordinates: [thisPoly]};
  var geoPolyformat = {type: "Polygon", coordinates: [geoPoints]};

  //var tmpPoly = d3.geoCircle().radius(60)();
      
      geometry.computeFaceNormals();

      for ( var j = 0; j < geometry.faces.length; j ++ )
      {
        var normalGeo = vector3toLonLat (geometry.faces[j].normal);
        //var idx = geometry.faces[j].a;
       // var normalGeo = vector3toLonLat (geometry.vertices[idx]);
        if (d3.geoContains(geoPolyformat, normalGeo) )
       // if (d3.polygonContains(hulls, normalGeo) )
        {
          geometry.faces[ j ].color.setHex(  0xffff00 );
           //geometry.faces.splice(j, 1) ;
        }
    
      }
      //geometry.elementsNeedUpdate = true;///////////////
      geometry.colorsNeedUpdate = true;
      
      
      
  }
  polyCounter++;
  
  
}

// split along the +- 180 lontitude line
function splitPolygon (geoPts)
{
  var retPolys = []
  
}


function  PointInPoly(polyPoints, L)
{
  var x = L[0], y = L[1];

  var inside = false;

  var intersections = 0;

  var ss;

  for (var i = 0, j = polyPoints.length -1; i < polyPoints.length; j = i++)
   {

    var xi = polyPoints[i][0], yi = polyPoints[i][1]; var xj = polyPoints[j][0], yj = polyPoints[j][1];
    if (yj == yi && yj == y && x > Math.min(xj, xi) && x < Math.max(xj, xi)) 
    { // Check if point is on an horizontal polygon boundary
     return true;

    }

    if (y > Math.min(yj, yi) && y <= Math.max(yj, yi) && x <= Math.max(xj, xi) && yj != yi)
    {
      ss = (y - yj) * (xi - xj) / (yi - yj) + xj;
      if (ss == x) 
      { // Check if point is on the polygon boundary (other than horizontal)
        return true;
      }

      if (xj == xi || x <= ss) 
      {
        intersections++;
      } 
    }
  }

  // If the number of edges we passed through is odd, then it’s in the polygon.

  if (intersections % 2 != 0) 
  {
    return true;
  } 
  else
  {
    return false;
  }
}



function randColorPoly2 (poly, index, array)
{
   if (poly.length < 3)
   {
     return
   }

   var points = [];
   for (var i=0; i< poly.length; i++)
   {
    var tempV = new THREE.Vector3(poly[i][0],poly[i][1], poly[i][2]).normalize().multiplyScalar(sphereRadius);
    points.push(tempV);
   }
   var polyCenter = findCenterPoint(points);

   //if ((index > 10) && (index < 13))
   //{
     spot(polyCenter.normalize().multiplyScalar(sphereRadius), 'pink');
   
    //drawPolygon2(points, polyCenter, getRandomColor(), true);

    drawPolygon3(points, getRandomColor(), false);
  //}
}

function drawPolygon( abcde, theColor)
{
  //abcde are points (vertex) in vector3 format.
  // walk from a to b to c to d to e... and back to a. After every degree create an additional point (lat, lon).
  var geoJsonArray =[];
  var polyArray =[];

  var smoothness = 8;
  for (var i=0; i< abcde.length-1; i++)
  {
  var smoothness = 8;
  var arcAndGeoPoints = setArcGetGeoPoints(abcde[i], abcde[i+1], smoothness, theColor);
     // scene.add(arcAndGeoPoints[0]);
      polyArray = polyArray.concat(arcAndGeoPoints[1]);
  }
  var closing = setArcGetGeoPoints(abcde[abcde.length-1], abcde[0], smoothness, theColor);
 // scene.add(closing[0]);
  polyArray = polyArray.concat(closing[1]);
  geoJsonArray.push(polyArray);

  //draw a polygon with color
const polyMesh = new THREE.Mesh(
  //new THREE.ConicPolygonGeometry(polygonGeoJson, 0, sphereRadius, false, true, false ),
  new THREE.ConicPolygonBufferGeometry(geoJsonArray, 0, sphereRadius, false, true, false ),
 
  new THREE.MeshBasicMaterial({ color: theColor })
);
scene.add(polyMesh);
}

/***
 *  sides: THREE.Vector3 arrays of 3d point forming the outsides of the polygon.
 *  center: a THREE.Vector3 3d point inside the polygon, does not have to be exactly the center point.
 * sidesCounterClockWise: weather the side point array goes couterclockwise or not.
 */
function drawPolygon2 (sides, center, theColor, sidesCounterClockWise = true)
{
  /***
   * idea:  connect the central point to every out edge point, to form trianles, then sub divide each triangle to more smaller triangles to form a mesh.
   */

  const polyGeometry = new THREE.Geometry();
  polyGeometry.vertices.push(center.normalize().multiplyScalar(sphereRadius));
   var c = 0;

   if (false == sides[0].equals(sides[sides.length-1]))
   {
     sides.push(sides[0]);
   }

  for (var i=0; i < sides.length-1; i++)
  {
      var smooth = GetSmoothness(sides[i], sides[i+1]);
      var sectionPoints = getArcPoints(sides[i], sides[i+1], smooth);
      for (var j =0; j< smooth - 1; j++)
      {
         var cordSmooth =  GetSmoothness (center, sectionPoints[j]);
         var cordPointsA = getArcPoints(center, sectionPoints[j], cordSmooth);
         var cordPointsB = getArcPoints(center, sectionPoints[j+1], cordSmooth);
         for (var k =0; k < cordSmooth; k++)
         {
          polyGeometry.vertices.push(cordPointsA[k].normalize().multiplyScalar(sphereRadius));
          c++;
          polyGeometry.vertices.push(cordPointsB[k].normalize().multiplyScalar(sphereRadius));
          c++;

          if (true == sidesCounterClockWise)
          {
            if (k == 0)
            {
              polyGeometry.faces.push( new THREE.Face3 (0, c-1, c));
            }
            else
            {
              polyGeometry.faces.push( new THREE.Face3 (c-3, c -1, c- 2));
              polyGeometry.faces.push( new THREE.Face3 (c-2, c -1, c));
            }

          }
          else
          {
            if (k == 0)
            {
              polyGeometry.faces.push( new THREE.Face3 (0, c, c-1));
            }
            else
            {
              polyGeometry.faces.push( new THREE.Face3 (c-3, c -2, c));
              polyGeometry.faces.push( new THREE.Face3 (c-3, c, c -1));
            }
          }

        }
      }
  }
 


  const polyMaterial = new THREE.MeshBasicMaterial(
    {color: theColor,
      /* wireframe: true, */
      vertexColors: THREE.FaceColors
      
      
      
    });

  const myPoly = new THREE.Mesh(polyGeometry, polyMaterial);
  scene.add(myPoly);
}



function drawPolygon3(sides, theColor, sidesCounterClockWise = true)
{
  /***
   * idea:  connect the central point to every out edge point, to form trianles, then sub divide each triangle to more smaller triangles to form a mesh.
   */


  var geoPoints =[];
  for (var i=0; i< sides.length; i++)
  {
    
    
    var geoPoint = vector3toLonLat(sides[i].clone());
    geoPoints.push(geoPoint);
  }
  geoPoints.push(geoPoints[0]);

  var geoPolyformat = {type: "Polygon", coordinates: [geoPoints]};
   
  var geoCenter = d3.geoCentroid(geoPolyformat);
  var center = lonLatToVector3(geoCenter[0], geoCenter[1]);



  const polyGeometry = new THREE.Geometry();
  polyGeometry.vertices.push(center.normalize().multiplyScalar(sphereRadius));
   var c = 0;

   if (false == sides[0].equals(sides[sides.length-1]))
   {
     sides.push(sides[0]);
   }

  for (var i=0; i < sides.length-1; i++)
  {
      var smooth = GetSmoothness(sides[i], sides[i+1]);
      var sectionPoints = getArcPoints(sides[i], sides[i+1], smooth);
      for (var j =0; j< smooth - 1; j++)
      {
         var cordSmooth =  GetSmoothness (center, sectionPoints[j]);
         var cordPointsA = getArcPoints(center, sectionPoints[j], cordSmooth);
         var cordPointsB = getArcPoints(center, sectionPoints[j+1], cordSmooth);
         for (var k =0; k < cordSmooth; k++)
         {
          polyGeometry.vertices.push(cordPointsA[k].normalize().multiplyScalar(sphereRadius));
          c++;
          polyGeometry.vertices.push(cordPointsB[k].normalize().multiplyScalar(sphereRadius));
          c++;

          if (true == sidesCounterClockWise)
          {
            if (k == 0)
            {
              polyGeometry.faces.push( new THREE.Face3 (0, c-1, c));
            }
            else
            {
              polyGeometry.faces.push( new THREE.Face3 (c-3, c -1, c- 2));
              polyGeometry.faces.push( new THREE.Face3 (c-2, c -1, c));
            }

          }
          else
          {
            if (k == 0)
            {
              polyGeometry.faces.push( new THREE.Face3 (0, c, c-1));
            }
            else
            {
              polyGeometry.faces.push( new THREE.Face3 (c-3, c -2, c));
              polyGeometry.faces.push( new THREE.Face3 (c-3, c, c -1));
            }
          }

        }
      }
  }
 


  const polyMaterial = new THREE.MeshBasicMaterial(
    {color: theColor,
      /* wireframe: true, */
      vertexColors: THREE.FaceColors
      
      
      
    });

  const myPoly = new THREE.Mesh(polyGeometry, polyMaterial);
  
  scene.add(myPoly);
  
  polyGeometry.computeFaceNormals();

  for ( var j = 0; j < polyGeometry.faces.length; j ++ )
  {
    var normalGeo = vector3toLonLat (polyGeometry.faces[j].normal);
    //var idx = geometry.faces[j].a;
    // var normalGeo = vector3toLonLat (geometry.vertices[idx]);
    if (false == d3.geoContains(geoPolyformat, normalGeo) )
    // if (d3.polygonContains(hulls, normalGeo) )
    {
      //polyGeometry.faces[ j ].color.setHex(  0xffffff );
        polyGeometry.faces.splice(j, 1) ;
    }

  }
  geometry.elementsNeedUpdate = true;///////////////
  polyGeometry.colorsNeedUpdate = true;
  

  
  }


////////////////
function vector3toLonLat( vector3 )
{

    vector3.normalize();

    //longitude = angle of the vector around the Y axis
    //-( ) : negate to flip the longitude (3d space specific )
    //- PI / 2 to face the Z axis
    var lng = -( Math.atan2( -vector3.z, -vector3.x ) ) - Math.PI / 2;

    //to bind between -PI / PI
    if( lng < - Math.PI )lng += Math.PI * 2;

    //latitude : angle between the vector & the vector projected on the XZ plane on a unit sphere

    //project on the XZ plane
    var p = new THREE.Vector3( vector3.x, 0, vector3.z );
    //project on the unit sphere
    p.normalize();

    //commpute the angle ( both vectors are normalized, no division by the sum of lengths )
    var lat = Math.acos( p.dot( vector3 ) );

    //invert if Y is negative to ensure teh latitude is comprised between -PI/2 & PI / 2
    if( vector3.y < 0 ) lat *= -1;

    return [ lng*(180.0/Math.PI),lat*(180.0/Math.PI) ];

}

function vector3toLonLatRadians( vector3 )
{

    vector3.normalize();

    //longitude = angle of the vector around the Y axis
    //-( ) : negate to flip the longitude (3d space specific )
    //- PI / 2 to face the Z axis
    var lng = -( Math.atan2( -vector3.z, -vector3.x ) ) - Math.PI / 2;

    //to bind between -PI / PI
    if( lng < - Math.PI )lng += Math.PI * 2;

    //latitude : angle between the vector & the vector projected on the XZ plane on a unit sphere

    //project on the XZ plane
    var p = new THREE.Vector3( vector3.x, 0, vector3.z );
    //project on the unit sphere
    p.normalize();

    //commpute the angle ( both vectors are normalized, no division by the sum of lengths )
    var lat = Math.acos( p.dot( vector3 ) );

    //invert if Y is negative to ensure teh latitude is comprised between -PI/2 & PI / 2
    if( vector3.y < 0 ) lat *= -1;

    return [ lng,lat ];

}


function vector3toLatLon( vector3 )
{

    vector3.normalize();

    //longitude = angle of the vector around the Y axis
    //-( ) : negate to flip the longitude (3d space specific )
    //- PI / 2 to face the Z axis
    var lng = -( Math.atan2( -vector3.z, -vector3.x ) ) - Math.PI / 2;

    //to bind between -PI / PI
    if( lng < - Math.PI )lng += Math.PI * 2;

    //latitude : angle between the vector & the vector projected on the XZ plane on a unit sphere

    //project on the XZ plane
    var p = new THREE.Vector3( vector3.x, 0, vector3.z );
    //project on the unit sphere
    p.normalize();

    //commpute the angle ( both vectors are normalized, no division by the sum of lengths )
    var lat = Math.acos( p.dot( vector3 ) );

    //invert if Y is negative to ensure teh latitude is comprised between -PI/2 & PI / 2
    if( vector3.y < 0 ) lat *= -1;

    return [lat*(180.0/Math.PI), lng*(180.0/Math.PI) ];

}

/**
 * converts a XYZ vector3 to longitude latitude (Direct Polar)
 * @param lng longitude, in degree ( -180 to + 180)
 * @param lat latitude, in degree ( -90 to + 50)
 * @param vector3 optional output vector3
 * @returns a unit vector of the 3d position
 */
function lonLatToVector3( lng, lat, out )
{
    lng = lng*Math.PI/180;
    lat = lat*Math.PI/180;

    out = out || new THREE.Vector3();

    //flips the Y axis
    lat = Math.PI / 2 - lat;

    //distribute to sphere
    out.set(
                Math.sin( lat ) * Math.sin( lng ),
                Math.cos( lat ),
                Math.sin( lat ) * Math.cos( lng )
    );

    return out;

}

function getCrossLatFromLonLat (lon0, lat0, lon1, lat1, lont)
{
  if (Math.abs(lat1 - lat0) < 0.01)
  {
    return (lat1 + lat0)/2.0;
  }
 
  var est =  lat0 + (lat1 -lat0) *( lont  - lon0)/ ( lon1 -lon0);

  var v0 = lonLatToVector3(lon0, lat0);
  var v1 = lonLatToVector3(lon1, lat1);
  v0.cross(v1);

  var l0 = lonLatToVector3(lont, lat0);
  var l1 = lonLatToVector3(lont, lat1);
  l0.cross(l1);

  var x1 = v0.clone().cross(l0);
  var x2 = l0.clone().cross(v0);

  var lonlat1 = vector3toLonLat(x1);
  var lonlat2 = vector3toLonLat(x2);
 
  if (Math.abs(lonlat1[1] - est) < Math.abs(lonlat2[1] -est) )
  {
    return lonlat1[1];
  }
  else
  return lonlat2[1];


}


function getCross180LatFromLonLat (lon0, lat0, lon1, lat1)
{
  if (Math.abs(lat1 - lat0) < 0.01)
  {
    return (lat1 + lat0)/2.0;
  }

  
  //return getCrossLatFromLonLat(lon0, lat0, lon1, lat1, 180);

 var est =  lat0 + (lat1 -lat0) *( 180  - Math.abs(lon0) )/ ( 180  - Math.abs(lon0) + 180 - Math.abs(lon1));

 var v0 = lonLatToVector3(lon0, lat0);
  var v1 = lonLatToVector3(lon1, lat1);
  v0.cross(v1);

  var l0 = lonLatToVector3(180, lat0);
  var l1 = lonLatToVector3(180, lat1);
  l0.cross(l1);

  var x1 = v0.clone().cross(l0);
  var x2 = l0.clone().cross(v0);

  var lonlat1 = vector3toLonLat(x1);
  var lonlat2 = vector3toLonLat(x2);
 
  if (Math.abs(lonlat1[1] - est) < Math.abs(lonlat2[1] -est) )
  {
    return lonlat1[1];
  }
  else
  return lonlat2[1];

  //https://gis.stackexchange.com/questions/18562/how-can-i-make-a-polyline-wrap-around-the-world
  // original post is in Cartesian coordinates
 
  //(x0, y0, z0) = (cos(lon0)*sin(lat0), sin(lon0)*sin(lat0), cos(lat0))
  
   var x0 = Math.cos(lon0*Math.PI/180)*Math.sin(lat0*Math.PI/180);
   var y0 = Math.sin(lon0*Math.PI/180) * Math.sin(lat0*Math.PI/180);
   var z0 = Math.cos(lat0*Math.PI/180);

   var x1 = Math.cos(lon1*Math.PI/180)*Math.sin(lat1*Math.PI/180);
   var y1 = Math.sin(lon1*Math.PI/180) * Math.sin(lat1*Math.PI/180);
   var z1 = Math.cos(lat1*Math.PI/180);

   var t = y1 / (y1 - y0);

   //(x, y, z) = (t * x0 + (1-t) * x1, 0, t * z0 + (1-t) * z1)
   var x = t * x0 + (1-t) * x1;
   var z =  t * z0 + (1-t) * z1;
   
   //lat2 = ATan(z/x).
   var lat2 = Math.atan(z/x)*180/Math.PI;
   return lat2;






  // based on   
  //https://gis.stackexchange.com/questions/18562/how-can-i-make-a-polyline-wrap-around-the-world
  // original post is in Cartesian coordinates, not Three.js's, so  bit conversion. 
  /**
    Cartesin:   z                             WebGL THREE.JS:           y
                |                                                       |
                |                                                       |
                --------y                                                --------- x
               /                                                       /
              /                                                       /
            x                                                        z

  var v0 = lonLatToVector3 (lon0, lat0);
  var v1 = lonLatToVector3(lon1, lat1);

  var t = v1.z/(v1.x - v0.x);
  var z = t*v0.z + (1-t)*v1.z;
  var y = t*v0.y + (1-t)*v1.y

  var lat2 = Math.atan(y/z)*180/Math.PI;

  return lat2;
  */


}

function slicePoly (poly, wlont)
{
  var ret =[];
  var minMax = polyMinMaxLon (poly);
  if (minMax[1] - minMax[0] <=wlont)
  {
    ret.push(poly);
    return ret;
  }
  else
  {
    var polyArray = cutAlongLont (poly, minMax[0] + (minMax[1] - minMax[0])/2);
    for (var i=0; i < polyArray.length; i++)
    {
       var newPolyArray = slicePoly(polyArray[i], wlont);
       ret = ret.concat(newPolyArray);

    }
    return ret;
  }
}

function polyMinMaxLon (poly)
{
  var min = poly[0][0];
  var max = min;
  for (var i=1; i<poly.length; i++)
  {
    if (poly[i][0] < min)
    {
      min = poly[i][0];
    }
    if (poly[i][0] > max)
    {
      max = poly[i][0];
    }
  }

  return [min, max];
}

// the poly arrray in  geo point.
function cutAlong180 (poly)
{
  var ret = [];
  var crossIndice =[];   // contain [beforeIdx, afterIdx, crossLat]


  var counter =0;  // how many times crossed the line

  for (var i=0; i < poly.length-1; i++)
  {
    if (Math.abs(poly[i][0] - poly[i+1][0]) > 180)
    {
      counter++;
      var crossLat = getCross180LatFromLonLat(poly[i][0], poly[i][1], poly[i+1][0], poly[i+1][1]);
      var cross = [i, i+1, crossLat];
      if ((crossIndice.length == 0) || (crossLat <= crossIndice[crossIndice.length-1][2]) )
      {
        crossIndice.push(cross);
      }
      else
      {
        for (var j=0; j< crossIndice.length; j++)
        {
          if (crossLat > crossIndice[j][2])
          {
            crossIndice.splice(j, 0, cross);
            break; 
          }
        }
        
      }
    }
  }

  // check end point to start point
  var end = poly.length -1;
  if (Math.abs(poly[end][0] - poly[0][0]) > 180)
  {
    counter++;
    var crossLat2 = getCross180LatFromLonLat(poly[end][0], poly[End][1], poly[0][0], poly[0][1]);
    var cross2 = [end, 0, crossLat2];
    if ((crossIndice.length == 0) || (crossLat2 <= crossIndice[crossIndice.length-1][2]) )
    {
      crossIndice.push(cross2);
    }
    else
    {
      for (var j=0; j< crossIndice.length; j++)
      {
        if (crossLat2 > crossIndice[j][2])
        {
          crossIndice.splice(j, 0, cross2);
          break; 
        }
      }
      
    }
  }


  if (counter == 0)
  {
    ret.push(poly);
    return ret;
  }
  else
  {
    // split into two poly, and recursively keep spliting
    var rightPoly =[];  // negative lon
     var rstart = [-180, crossIndice[0][2]];
     rightPoly.push(rstart);

     // then copy from after index of top cross all the way to the before index of the 2nd cross
     if (crossIndice[1][0] >= crossIndice[0][1])
     {
       for (var k = crossIndice[0][1];k <= crossIndice[1][0]; k++)
       {
         rightPoly.push(poly[k]);
       }
     }
     else
     {
       // rounded back to o, 1, 2, ...
       for (var k = crossIndice[0][1]; k <= poly.length -1; k++)
       {
         rightPoly.push(poly[k]);
       }

       for (var k = 0; k < crossIndice[1][0]; k++)
       {
         rightPoly.push(poly[k]);
       }
     }

     var rend = [ -180, crossIndice[1][2] ];
     rightPoly.push (rend);


     var leftPoly = [];
     var lstart = [180, crossIndice[1][2]];
     leftPoly.push(lstart);

     // then copy from after index of 2nd top cross all the to the before index of the 1st top cross
     if (crossIndice[0][0] >= crossIndice[1][1])
     {
       for (var k = crossIndice[1][1]; k  <= crossIndice[0][0]; k++ )
       {
         leftPoly.push(poly[k]);
       }
     }
     else
     {
       for (var k= crossIndice[1][1]; k <= poly.length -1; k++)
       {
         leftPoly.push(poly[k]);

       }
       for (var k=0; k <= crossIndice[0][0]; k++)
       {
        leftPoly.push(poly[k]);
       }
     }

     var lend = [180, crossIndice[0][2]];
     leftPoly.push(lend);

     return cutAlong180(leftPoly).concat(cutAlong180(rightPoly));





  }



}

function crossedLont (leftLon, crossLon, rightLon)
{
   if ( ( ( leftLon < crossLon) && (rightLon > crossLon) ) ||   ((rightLon < crossLon) && (leftLon > crossLon)))
    {
      return true;
    }
    return false;

}

// cut along a latitude, the poly is not cross 180
function cutAlongLont (poly, lont)
{
  var ret = [];
  var crossIndice =[];   // contain [beforeIdx, afterIdx, crossLat]


  var counter =0;  // how many times crossed the line

  for (var i=0; i < poly.length-1; i++)
  {
    if ( crossedLont(poly[i][0], lont, poly[i+1][0]) )
    {
      counter++;
      var crossLat = getCrossLatFromLonLat(poly[i][0], poly[i][1], poly[i+1][0], poly[i+1][1], lont);
      var cross = [i, i+1, crossLat];
      if ((crossIndice.length == 0) || (crossLat <= crossIndice[crossIndice.length-1][2]) )
      {
        crossIndice.push(cross);
      }
      else
      {
        for (var j=0; j< crossIndice.length; j++)
        {
          if (crossLat > crossIndice[j][2])
          {
            crossIndice.splice(j, 0, cross);
            break; 
          }
        }
        
      }
    }
  }

  // check end point to start point
  var end = poly.length -1;
  if (crossedLont(poly[end][0], lont, poly[0][0]))
  {
    counter++;
    var crossLat2 = getCrossLatFromLonLat(poly[end][0], poly[End][1], poly[0][0], poly[0][1], lont);
    var cross2 = [end, 0, crossLat2];
    if ((crossIndice.length == 0) || (crossLat2 <= crossIndice[crossIndice.length-1][2]) )
    {
      crossIndice.push(cross2);
    }
    else
    {
      for (var j=0; j< crossIndice.length; j++)
      {
        if (crossLat2 > crossIndice[j][2])
        {
          crossIndice.splice(j, 0, cross2);
          break; 
        }
      }
      
    }
  }


  if (counter == 0)
  {
    ret.push(poly);
    return ret;
  }
  else
  {
    // split into two poly, and recursively keep spliting
    var rightPoly =[];  // 
     var rstart = [lont, crossIndice[0][2]];
     rightPoly.push(rstart);

     // then copy from after index of top cross all the way to the before index of the 2nd cross
     if (crossIndice[1][0] >= crossIndice[0][1])
     {
       for (var k = crossIndice[0][1];k <= crossIndice[1][0]; k++)
       {
         rightPoly.push(poly[k]);
       }
     }
     else
     {
       // rounded back to o, 1, 2, ...
       for (var k = crossIndice[0][1]; k <= poly.length -1; k++)
       {
         rightPoly.push(poly[k]);
       }

       for (var k = 0; k < crossIndice[1][0]; k++)
       {
         rightPoly.push(poly[k]);
       }
     }

     var rend = [ lont, crossIndice[1][2] ];
     rightPoly.push (rend);


     var leftPoly = [];
     var lstart = [lont, crossIndice[1][2]];
     leftPoly.push(lstart);

     // then copy from after index of 2nd top cross all the to the before index of the 1st top cross
     if (crossIndice[0][0] >= crossIndice[1][1])
     {
       for (var k = crossIndice[1][1]; k  <= crossIndice[0][0]; k++ )
       {
         leftPoly.push(poly[k]);
       }
     }
     else
     {
       for (var k= crossIndice[1][1]; k <= poly.length -1; k++)
       {
         leftPoly.push(poly[k]);

       }
       for (var k=0; k <= crossIndice[0][0]; k++)
       {
        leftPoly.push(poly[k]);
       }
     }

     var lend = [lont, crossIndice[0][2]];
     leftPoly.push(lend);

     return cutAlongLont(leftPoly, lont).concat(cutAlongLont(rightPoly, lont));





  }



}

/**
 * Find the bounding regtangle and uses the mid point of the rectangle in terms of lon. and lat.
 * 
 * @param polySides  Vecter3 array composing the sides of the polygon.
 */
function findCenterPoint (polySides)
{
  var minLat, maxLat, minLon, maxLon;

  var init = vector3toLonLat(polySides[0]);
  minLon = maxLon = init[0];
  minLat = maxLat = init[1];

  for (var i=1; i<polySides.length; i++)
  {
    var temp = vector3toLonLat(polySides[i]);
    var lon = temp[0];
    var lat = temp[1];
    if (lon < minLon)
    {
      minLon = lon;
    }
    if (lon > maxLon)
    {
      maxLon = lon;
    }
    if (lat < minLat)
    {
      minLat = lat;
    }
    if (lat > maxLat)
    {
      maxLat = lat;
    }
  }

  var midLat = (minLat + maxLat)/2.0;

  //we have to take care of +180 and -180 scenarios
  var midLon;
  // all positives or all negative
  if  (((minLon >=0) && (maxLon >=0)) || ((minLon <=0) && (maxLon <=0)))
  {
   midLon = (minLon + maxLon)/2.0;
  }
  else
  {
    // one positive and one negative, which mean minLon is negative.
    if (Math.abs(minLon) + Math.abs(maxLon) <= 180.0)
    {
      midLon = (minLon + maxLon)/2.0;
    }
    else
    {
      var reverseMid = ((180 - Math.abs(minLon) ) + (180 -Math.abs(maxLon)))/2;
      if (Math.abs(minLon) < Math.abs(maxLon))
      {
        midLon = minLon - reverseMid;
      }
      else
      {
        midLon = maxLon + reverseMid;
      }
    }
  }
  //return lonLatToVector3(midLon*Math.PI/180, midLat*Math.PI/180);
  return lonLatToVector3(midLon, midLat);
}


function getRandomColor() {
  var letters = '0123456789ABCDEF';
  var color = '#';
  for (var i = 0; i < 6; i++) {
  color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
  }

function convertFlatCoordsToSphereCoords(x, y) {
  // Calculate the relative 3d coordinates using Mercator projection relative to the radius of the globe.
  // Convert latitude and longitude on the 90/180 degree axis.
  let latitude = ((x - globeWidth) / globeWidth) * -180
  let longitude = ((y - globeHeight) / globeHeight) * -90
  latitude = (latitude * Math.PI) / 180 //(latitude / 180) * Math.PI
  longitude = (longitude * Math.PI) / 180 //(longitude / 180) * Math.PI // Calculate the projected starting point
  const radius = Math.cos(longitude) * globeRadius
  const targetX = Math.cos(latitude) * radius
  const targetY = Math.sin(longitude) * globeRadius
  const targetZ = Math.sin(latitude) * radius

  
 

  return new THREE.Vector3(targetX, targetY, targetZ);
}

render();


function resizeRendererToDisplaySize(renderer) {
  const canvas = renderer.domElement;
  const width = canvas.clientWidth;
  const height = canvas.clientHeight;
  const needResize = canvas.width !== width || canvas.height !== height;
  if (needResize) {
    renderer.setSize(width, height, false);
  }
  return needResize;
}



function render() {

  if (resizeRendererToDisplaySize(renderer)) {
    const canvas = renderer.domElement;
    camera.aspect = canvas.clientWidth / canvas.clientHeight;
    camera.updateProjectionMatrix();
  }
  sphere.updateWorldMatrix(true, false);

  ///
  normalMatrix.getNormalMatrix(camera.matrixWorldInverse);
  camera.getWorldPosition(cameraPosition);
  labels.forEach((info, ndx) => {
    const {elem, meshPoint} = info;
    
    meshPoint.updateWorldMatrix(true, false);
    meshPoint.getWorldPosition(tempV);
    myV.copy(tempV);
    // 
    cameraToPoint.copy(myV);
    // get the normalized screen coordinate of that position
    // x and y will be in the -1 to +1 range with x = -1 being
    // on the left and y = -1 being on the bottom
    tempV.project(camera);

    //////////////////////////// make label invisible if on the other side of the sphere
    // Orient the position based on the camera's orientation.
    // Since the sphere is at the origin and the sphere is a unit sphere
    // this gives us a camera relative direction vector for the position.
    
    myV.applyMatrix3(normalMatrix);
    

    // compute the direction to this position from the camera
    
    cameraToPoint.applyMatrix4(camera.matrixWorldInverse).normalize();

    // get the dot product of camera relative direction to this position
    // on the globe with the direction from the camera to that point.
    // -1 = facing directly towards the camera
    // 0 = exactly on tangent of the sphere from the camera
    // > 0 = facing away
    const dot = myV.dot(cameraToPoint);

    // if the orientation is not facing us hide it.
    if (dot > settings.maxVisibleDot) {
      elem.style.display = 'none';
      
    }
    else {

       // restore the element to its default display style
       elem.style.display = '';
    ////////////////////////////////////////////////

    // convert the normalized position to CSS coordinates
    const x = (tempV.x *  .5 + .5) * canvas.clientWidth;
    const y = (tempV.y * -.5 + .5) * canvas.clientHeight;
    
   /* 
   const x = ((tempV.x *  .5 + .5) * canvas.clientWidth)%canvas.clientWidth;
   const y = ((tempV.y * -.5 + .5) * canvas.clientHeight)%canvas.clientHeight;
   */

    // move the elem to that position
    elem.style.transform = `translate(-50%, -50%) translate(${x}px,${y}px)`;
    }
  });
  ////



  requestAnimationFrame(render);
  renderer.render(scene, camera);
}
